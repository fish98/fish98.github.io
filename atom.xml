<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TT Fish | On Sale</title>
  
  <subtitle>TTfish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-22T08:13:55.718Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>TT Fish</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Outline for PhysicsChemistry(ZJU)(物理化学期末考试重点)</title>
    <link href="http://yoursite.com/2019/01/18/phychem/"/>
    <id>http://yoursite.com/2019/01/18/phychem/</id>
    <published>2019-01-18T05:26:14.000Z</published>
    <updated>2019-08-22T08:13:55.718Z</updated>
    
    <content type="html"><![CDATA[<p>结合曹发和老师的复习课 赶紧记下来<br>这门课在互联网上的资料也太少了(汗)</p><p>教材下载(彭笑刚版): <a href="https://pan.zju.edu.cn/share/37b88dfc676e709205cbf8c83e">https://pan.zju.edu.cn/share/37b88dfc676e709205cbf8c83e</a></p><p><img src="/2019/01/18/phychem/1.jpg"></p><ul><li>考完感想: 全是小测的题 啊啊啊啊啊!<a id="more"></a></li></ul><h1 id="物理化学"><a href="#物理化学" class="headerlink" title="物理化学"></a>物理化学</h1><ul><li><strong>吉布斯自由能</strong>: 吉布斯能是描述系统的热力性质的一种热力势</li></ul><p>假设在等温等压状况下，一个热力系统从良好定义初态变换到良好定义终态，则其吉布斯能减少量必定大于或等于其所做的非体积功 假若这变换是可逆过程，则其吉布斯能减少量等于其所做的非体积功 所以，这热力系统所能做的最大非体积功是其吉布斯减少量</p><ul><li><strong>基元反应</strong>: 最简单的化学反应步骤，是一个或多个化学物种直接作用，一步(单一过渡态)转化为反应产物的过程 微观上看所有化学反应过程都是经过一个或多个简单的反应步骤(即基元反应)才转化为产物分子的。基元反应为组成化学反应的基本单元。通常反应机理便是研究反应是由哪些基元反应组成的。与基元反应相对的概念为非基元反应。<br><strong>对于基元反应，反应的反应级数就等于该反应的反应分子数</strong></li></ul><h2 id="Chapter-7"><a href="#Chapter-7" class="headerlink" title="Chapter 7"></a>Chapter 7</h2><ul><li><p>理想气体模型 -&gt; 三个假定(分子尺寸小于平均距离 + 分子间<strong>相互作用不计 + 所有的分子碰撞都是弹性碰撞(好事))</strong><br><strong>同时的定义也有在任意温度 体积和压强呈线性关系的气体</strong></p></li><li><p>理想气体状态方程的推导<br>$$ P = nRT \frac{\partial{lnf_{平动}}}{\partial V} = \frac{nRT}{V}$$ </p></li><li>摩尔平均动能(振动 平动 转动)</li><li><p>范德华气体方程 $$P=\frac{nRT}{V-\beta n} - \alpha (\frac{n}{V})^2$$<br><strong>修正理想气体方程后的气体方程</strong></p></li><li><p>位力气体方程</p></li><li>气体的化学势 逸度 逸度系数</li><li>P245 3-2模型 </li><li>P249 分子的电子云变形性与偶极距的关系</li><li>L-J模型的掌握: 分子相互作用与距离-6与-12次方的关系</li><li>液体的热容(类振动说)</li><li>液体单位体积比热容</li><li>相变的参数(焓变 熵变)混合以后的吉布斯自由能 = 0</li><li>$$CO_2 和H_2O$$的纯态物质相图</li><li>P280气液相变 (7-35) 克拉贝龙方程与修正 定量描述了相边<strong>界斜率与系统相变热力学性质的关系</strong></li><li>P287 纯物质的化学势</li><li>液态分子间的相互作用能与沸点温度呈线性递减关系 如果沸点<strong>熵变和物性关系不大 那么摩尔蒸发焓正比于沸点 ——春藤规则</strong></li></ul><h2 id="Chapter-8"><a href="#Chapter-8" class="headerlink" title="Chapter 8"></a>Chapter 8</h2><ul><li>道尔顿分压定理</li><li>理想气体的溶液变化计算 混合熵和混合吉布斯自由能 P297<br>$$\Delta G_{混} = n_1RT\tau_1 + n_2RT\tau_2$$</li><li>理想溶液中 U V S的计算 P300 (3-1)</li><li>P306 饱和蒸汽压 </li><li>P309 混合物的广度性质 偏摩尔量</li><li>P315 吉布斯-杜海姆分布(重点)<br><strong>混合物的任意广度性质 对应组分的偏摩尔量是彼此关联的</strong><br><em>有三个限定条件</em></li><li>P318 纳米簇模型 氢键 时刻变化</li><li>P328 例题 拉乌尔定理 P = xP*</li><li>P332 活度 活度系数的计算</li><li>P326 非理想溶液中关系的计算</li><li>7.1.2 混合焓的计算 (8-54)表达式推导</li><li>7.3.2 活度系数计算和偏摩尔量 焓变计算</li></ul><h2 id="Chapter-9"><a href="#Chapter-9" class="headerlink" title="Chapter 9"></a>Chapter 9</h2><ul><li>吉布斯相率(重要)<br>描述相平衡不需要广度性质<br>F(强度性质数量) = 2 + C(Components) - p(相自由度) </li><li>P356 杠杆规则 气液相图</li><li>典型相图 二元混合物 液-液 液-固 相图<br><strong>理解以后 其实就是先计算气态液态的总物质的量 然后再根据相图上给出的比例关系进行计算</strong></li><li>P366 溶解度与活度关系<br><strong>组分的活度系数越大 溶解度越小</strong></li><li>P368 难溶液体的活度系数</li><li>P372 固体再液体中的溶解度</li><li>P374 不同体系的溶解度差异以及解释 活度系数的计算</li><li>溶解度随压强的变化</li><li>P380 萃取与分配系数<h2 id="Chapter-10"><a href="#Chapter-10" class="headerlink" title="Chapter 10"></a>Chapter 10</h2></li><li>了解不同的表面</li><li>P400 吉布斯方案 表面张力计算 吉布斯自由能修正<br><strong>3.1.2拉普拉斯公式</strong><br>$$dw = F \times dr = F_{张力} \times da$$<br>$$(P_内 - P_外) = \frac{2F_{张力}}{r}$$<br><strong>表面势(10-11)比表面能</strong></li><li>毛细管现象 定量研究</li><li>表面吸附 P422<br><strong>朗缪尔单层吸附模型</strong> </li><li>计算 P423<br>$$K = \frac{\theta_{表面占据度}}{(1-\theta)C_{浓度}}$$<br><strong>多层吸附模型</strong><h2 id="Chapter-11"><a href="#Chapter-11" class="headerlink" title="Chapter 11"></a>Chapter 11</h2></li><li>胶体的分类 </li><li>Lamar模型 溶解成核生长(结晶)</li><li>P437 (1-11) 量子限域公式<br><strong>激子激发能 = 半导体晶体体相能隙 + 静电相互作用能 + 激子动能</strong><br><strong>光激发产生的电子-空穴对 -&gt; 激子</strong> </li><li>P448 吉布斯-开尔文公式 (11-2)</li><li>3.2.2 气泡内压强计算<br><strong>粒子尺寸很小时 表面势与粒径尺寸强烈相关</strong><br><strong>暴沸的原因 小气泡压强与半径的关系</strong>  </li><li>纳米粒子的溶解度<br><strong>粒子越小 溶解度越大</strong> </li><li>3.2.5 奥斯特瓦尔德熟化(小颗粒溶解度大 因此在继续溶解 大块晶体开始生长)</li><li>聚集性了解<h2 id="Chapter-12"><a href="#Chapter-12" class="headerlink" title="Chapter 12"></a>Chapter 12</h2></li><li>P476 化学平衡常数</li><li>P477 标准吉布斯自由能变化计算</li><li>P481 理想气体的反应平衡与混合吉布斯自由能</li><li>P487 化学反应的玻尔兹曼分布(玻尔兹曼只考虑了环境熵的影响)</li><li>P502 电化学与吉布斯自由能关系(12-49)<br>$$-vFE = \Delta_r G$$</li><li>P504 电势 吉布斯自由能与标准熵、反应焓关系<br><strong>考试的时候居然忘记了 啊啊啊啊</strong><br>$$\frac{\Delta S^\Theta}{vF} = (\frac{\partial{E^\Theta}}{\partial T})_P $$$$\Delta H^\Theta = vF(T\frac{dE^\Theta}{dT} - E^\Theta)$$<br><strong>E可逆电势 不等于 E平衡电势 = 0</strong></li><li>能斯特方程</li><li>半电磁反应与电极反应式书写<br><strong>氧化反应一直在右边 还原反应在左边 电荷配平</strong> <h2 id="Chapter-14"><a href="#Chapter-14" class="headerlink" title="Chapter 14"></a>Chapter 14</h2></li><li>P572 基元化学反应</li><li>P574 吉布斯垒态</li><li>基元反应质量作用定律 范特霍夫公式 阿伦尼乌斯公式</li><li>吉布斯方案处理</li><li>P602 (14-5)题型 浓度与反应速率的关系</li></ul><p>##Chapter 15</p><ul><li>P623 微分动力学方程与积分动力学</li><li>P626 一级反应 </li><li>P629 二级反应 零级反应</li><li>P634 朗伯-比尔定律 光吸收定律</li><li>P646 一级动力学方程与时间常数关系</li><li>4.2.2 化学平衡时间常数</li><li>复杂反应近似 决策近似 前平衡近似 稳态近似</li><li>P660 酶催化反应</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;结合曹发和老师的复习课 赶紧记下来&lt;br&gt;这门课在互联网上的资料也太少了(汗)&lt;/p&gt;
&lt;p&gt;教材下载(彭笑刚版): &lt;a href=&quot;https://pan.zju.edu.cn/share/37b88dfc676e709205cbf8c83e&quot;&gt;https://pan.zju.edu.cn/share/37b88dfc676e709205cbf8c83e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/01/18/phychem/1.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考完感想: 全是小测的题 啊啊啊啊啊!&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="PhysicsChemistry" scheme="http://yoursite.com/tags/PhysicsChemistry/"/>
    
      <category term="Thermodynamics" scheme="http://yoursite.com/tags/Thermodynamics/"/>
    
      <category term="Review" scheme="http://yoursite.com/tags/Review/"/>
    
  </entry>
  
  <entry>
    <title>High-temperature Superconductivity Data</title>
    <link href="http://yoursite.com/2018/11/26/superconduct/"/>
    <id>http://yoursite.com/2018/11/26/superconduct/</id>
    <published>2018-11-26T11:28:18.000Z</published>
    <updated>2019-01-23T22:04:58.676Z</updated>
    
    <content type="html"><![CDATA[<p>前些日子查詢了CRC Handbook of Chemistry and Physics上的物理化學數據 這裏存一下主要的高溫超導體和有機超導體的Tc值</p><p>忽然想起了高中的時候在玉泉做高溫超導體的科研 沒能作出什麼成果真的很可惜 但是TTfish仍然堅信凝聚態物理的未來離開不了超導體 無論是量子計算機(小時候做的夢)還是常溫超導體 高分子超導體 肯定會有突破點 肯定會有一天超導體研究實現突破</p><a id="more"></a><p>因爲可能還要進行學習　存儲一下</p><h1 id="高温超导体"><a href="#高温超导体" class="headerlink" title="高温超导体"></a>高温超导体</h1><table><thead><tr><th style="text-align:center">超導材料</th><th style="text-align:center">結構性質</th><th style="text-align:center">臨界溫度 Tc/K</th></tr></thead><tbody><tr><td style="text-align:center">La2CuO4+δ</td><td style="text-align:center">Bmab; a = 5.355, b = 5.401, c = 13.15 Å</td><td style="text-align:center">39</td></tr><tr><td style="text-align:center">La2-xSrx(Bax)CuO4</td><td style="text-align:center">I4/mmm; a = 3.779, c = 13.23 Å</td><td style="text-align:center">35</td></tr><tr><td style="text-align:center">La2Ca1-xSrxCu2O6</td><td style="text-align:center">I4/mmm; a = 3.825, c = 19.42 Å</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">YBa2Cu3O7</td><td style="text-align:center">Pmmm; a = 3.821, b = 3.885, c = 11.676 Å</td><td style="text-align:center">93</td></tr><tr><td style="text-align:center">YBa2Cu4O8</td><td style="text-align:center">Ammm; a = 3.84, b = 3.87, c = 27.24 Å</td><td style="text-align:center">80</td></tr><tr><td style="text-align:center">Y2Ba4Cu7O15</td><td style="text-align:center">Ammm; a = 3.851, b = 3.869, c = 50.29 Å</td><td style="text-align:center">93</td></tr><tr><td style="text-align:center">Bi2Sr2CuO6</td><td style="text-align:center">Amaa; a = 5.362, b = 5.374, c = 24.622 Å</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">Bi2CaSr2Cu2O8</td><td style="text-align:center">A2aa; a = 5.409, b = 5.420, c = 30.93 Å</td><td style="text-align:center">92</td></tr><tr><td style="text-align:center">Bi2Ca2Sr2Cu3O10</td><td style="text-align:center">A2aa; a = 5.39, b = 5.40, c = 37 Å</td><td style="text-align:center">110</td></tr><tr><td style="text-align:center">Bi2Sr2(Ln1-xCex)2Cu2O10</td><td style="text-align:center">P4/mmm; a = 3.888, c = 17.28 Å</td><td style="text-align:center">25</td></tr><tr><td style="text-align:center">Tl2Ba2CuO6</td><td style="text-align:center">A2aa; a = 5.468, b = 5.472, c = 23.238 Å; I4/mmm; a = 3.866, c = 23.239 Å</td><td style="text-align:center">92</td></tr><tr><td style="text-align:center">Tl2CaBa2Cu2O8</td><td style="text-align:center">I4/mmm; a = 3.855, c = 29.318 Å</td><td style="text-align:center">119</td></tr><tr><td style="text-align:center">Tl2Ca2Ba2Cu3O10</td><td style="text-align:center">I4/mmm; a = 3.85, c = 35.9 Å</td><td style="text-align:center">128</td></tr><tr><td style="text-align:center">Tl(BaLa)CuO5</td><td style="text-align:center">P4/mmm; a = 3.83, c = 9.55 Å</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">Tl(SrLa)CuO5</td><td style="text-align:center">P4/mmm; a = 3.7, c = 9 Å</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">(Tl0.5Pb0.5)Sr2CuO5</td><td style="text-align:center">P4/mmm; a = 3.738, c = 9.01 Å</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">TlCaBa2Cu2O7</td><td style="text-align:center">P4/mmm; a = 3.856, c = 12.754 Å</td><td style="text-align:center">103</td></tr><tr><td style="text-align:center">(Tl0.5Pb0.5)CaSr2Cu2O7</td><td style="text-align:center">P4/mmm; a = 3.80, c = 12.05 Å</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">TlSr2Y0.5Ca0.5Cu2O7</td><td style="text-align:center">P4/mmm; a = 3.80, c = 12.10 Å</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">TlCa2Ba2Cu3O8</td><td style="text-align:center">P4/mmm; a = 3.853, c = 15.913 Å</td><td style="text-align:center">110</td></tr><tr><td style="text-align:center">(Tl0.5Pb0.5)Sr2Ca2Cu3O9</td><td style="text-align:center">P4/mmm; a = 3.81, c = 15.23 Å</td><td style="text-align:center">120</td></tr><tr><td style="text-align:center">TlBa2(La1-xCex)2Cu2O9</td><td style="text-align:center">I4/mmm; a = 3.8, c = 29.5 Å</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">Pb2Sr2La0.5Ca0.5Cu3O8</td><td style="text-align:center">Cmmm; a = 5.435, b = 5.463, c = 15.817 Å</td><td style="text-align:center">70</td></tr><tr><td style="text-align:center">Pb2(Sr,La)2Cu2O6</td><td style="text-align:center">P2212; a = 5.333, b = 5.421, c = 12.609 Å</td><td style="text-align:center">32</td></tr><tr><td style="text-align:center">(Pb,Cu)Sr2(La,Ca)Cu2O7</td><td style="text-align:center">P4/mmm; a = 3.820, c = 11.826 Å</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">(Pb,Cu)(Sr,Eu)(Eu,Ce)Cu2Ox</td><td style="text-align:center">I4/mmm; a = 3.837, c = 29.01 Å</td><td style="text-align:center">25</td></tr><tr><td style="text-align:center">Nd2-xCexCuO4</td><td style="text-align:center">I4/mmm; a = 3.95, c = 12.07 Å</td><td style="text-align:center">30</td></tr><tr><td style="text-align:center">Ca1-xSrxCuO2</td><td style="text-align:center">P4/mmm; a = 3.902, c = 3.35 Å</td><td style="text-align:center">110</td></tr><tr><td style="text-align:center">Sr1-xNdxCuO2</td><td style="text-align:center">P4/mmm; a = 3.942, c = 3.393 Å</td><td style="text-align:center">40</td></tr><tr><td style="text-align:center">Ba0.6K0.4BiO3</td><td style="text-align:center">Pm3m; a = 4.287 Å</td><td style="text-align:center">31</td></tr><tr><td style="text-align:center">Rb2CsC60</td><td style="text-align:center">a =14.493 Å</td><td style="text-align:center">31</td></tr><tr><td style="text-align:center">NdBa2Cu3O7</td><td style="text-align:center">Pmmm; a = 3.878, b = 3.913, c = 11.753</td><td style="text-align:center">58</td></tr><tr><td style="text-align:center">SmBaSrCu3O7</td><td style="text-align:center">I4/mmm; a = 3.854, c = 11.62</td><td style="text-align:center">84</td></tr><tr><td style="text-align:center">EuBaSrCu3O7</td><td style="text-align:center">I4/mmm; a = 3.845, c = 11.59</td><td style="text-align:center">88</td></tr><tr><td style="text-align:center">GdBaSrCu3O7</td><td style="text-align:center">I4/mmm; a = 3.849, c = 11.53</td><td style="text-align:center">86</td></tr><tr><td style="text-align:center">DyBaSrCu3O7</td><td style="text-align:center">Pmmm; a = 3.802, b = 3.850, c = 11.56</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">HoBaSrCu3O7</td><td style="text-align:center">Pmmm; a = 3.794, b = 3.849, c = 11.55</td><td style="text-align:center">87</td></tr><tr><td style="text-align:center">ErBaSrCu3O7</td><td style="text-align:center">Pmmm; a = 3.787, b = 3.846, c = 11.54</td><td style="text-align:center">82</td></tr><tr><td style="text-align:center">TmBaSrCu3O7</td><td style="text-align:center">Pmmm; a = 3.784, b = 3.849, c = 11.55</td><td style="text-align:center">88</td></tr><tr><td style="text-align:center">YBaSrCu3O7</td><td style="text-align:center">Pmmm; a = 3.803, b = 3.842, c = 11.54</td><td style="text-align:center">84</td></tr><tr><td style="text-align:center">HgBa2CuO4</td><td style="text-align:center">I4/mmm; a = 3.878, c = 9.507</td><td style="text-align:center">94</td></tr><tr><td style="text-align:center">HgBa2CaCu2O6 (annealed in O2)</td><td style="text-align:center">I4/mmm; a = 3.862, c = 12.705</td><td style="text-align:center">127</td></tr><tr><td style="text-align:center">HgBa2Ca2Cu3O8</td><td style="text-align:center">Pmmm; a = 3.85, c = 15.85</td><td style="text-align:center">133</td></tr><tr><td style="text-align:center">HgBa2Ca3Cu4O10</td><td style="text-align:center">Pmmm; a = 3.854, c = 19.008</td><td style="text-align:center">126</td></tr></tbody></table><h1 id="有機超導體"><a href="#有機超導體" class="headerlink" title="有機超導體"></a>有機超導體</h1><table><thead><tr><th style="text-align:center">超導材料</th><th style="text-align:center">臨界壓強 Pc/kbar</th><th style="text-align:center">臨界溫度Tc/K</th></tr></thead><tbody><tr><td style="text-align:center">(TMTSF)2PF6</td><td style="text-align:center">6.5</td><td style="text-align:center">1.2</td></tr><tr><td style="text-align:center">(TMTSF)2AsF6</td><td style="text-align:center">9</td><td style="text-align:center">1.3</td></tr><tr><td style="text-align:center">(TMTSF)2SbF6</td><td style="text-align:center">11</td><td style="text-align:center">0.4</td></tr><tr><td style="text-align:center">(TMTSF)2TaF6</td><td style="text-align:center">12</td><td style="text-align:center">1.4</td></tr><tr><td style="text-align:center">(TMTSF)2ClO4</td><td style="text-align:center">0</td><td style="text-align:center">1.4</td></tr><tr><td style="text-align:center">(TMTSF)2ReO4</td><td style="text-align:center">9.5</td><td style="text-align:center">1.3</td></tr><tr><td style="text-align:center">(TMTSF)2FSO3</td><td style="text-align:center">5</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">(ET)4(ReO4)2</td><td style="text-align:center">4.5</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">βL-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">1.4</td></tr><tr><td style="text-align:center">βH-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">8.1</td></tr><tr><td style="text-align:center">γ-(ET)3I2.5</td><td style="text-align:center">0</td><td style="text-align:center">2.5</td></tr><tr><td style="text-align:center">ε-(ET)2I3(I8)0.5</td><td style="text-align:center">0</td><td style="text-align:center">2.5</td></tr><tr><td style="text-align:center">α-(ET)2I3I2-doped</td><td style="text-align:center">0</td><td style="text-align:center">3.3</td></tr><tr><td style="text-align:center">αt-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">ε→β-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">θ-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">3.6</td></tr><tr><td style="text-align:center">κ-(ET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">3.6</td></tr><tr><td style="text-align:center">β-(ET)2IBr2</td><td style="text-align:center">0</td><td style="text-align:center">2.8</td></tr><tr><td style="text-align:center">β-(ET)2AuI2</td><td style="text-align:center">0</td><td style="text-align:center">4.8</td></tr><tr><td style="text-align:center">(ET)4Hg2.89Cl8</td><td style="text-align:center">0</td><td style="text-align:center">4.2</td></tr><tr><td style="text-align:center">(ET)4Hg2.89Br8</td><td style="text-align:center">12</td><td style="text-align:center">1.8</td></tr><tr><td style="text-align:center">(ET)3Cl2(H2O)2</td><td style="text-align:center">16</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">κ-(ET)2Cu(NCS)2</td><td style="text-align:center">0</td><td style="text-align:center">10.4</td></tr><tr><td style="text-align:center">κ-(d-ET)2Cu(NCS)2</td><td style="text-align:center">0</td><td style="text-align:center">11.4</td></tr><tr><td style="text-align:center">(DMET)2Au(CN)2</td><td style="text-align:center">1.5</td><td style="text-align:center">0.9</td></tr><tr><td style="text-align:center">(DMET)2AuI2</td><td style="text-align:center">5</td><td style="text-align:center">0.6</td></tr><tr><td style="text-align:center">(DMET)2AuBr2</td><td style="text-align:center">0</td><td style="text-align:center">1.9</td></tr><tr><td style="text-align:center">(DMET)2AuCl2</td><td style="text-align:center">0</td><td style="text-align:center">0.9</td></tr><tr><td style="text-align:center">(DMET)2I3</td><td style="text-align:center">0</td><td style="text-align:center">0.6</td></tr><tr><td style="text-align:center">(DMET)2lBr2</td><td style="text-align:center">0</td><td style="text-align:center">0.7</td></tr><tr><td style="text-align:center">(MDT-TTF)2AuI2</td><td style="text-align:center">0</td><td style="text-align:center">3.5</td></tr><tr><td style="text-align:center">TTF[Ni(dmit)2]2</td><td style="text-align:center">2</td><td style="text-align:center">1.6</td></tr><tr><td style="text-align:center">TTF[Pd(dmit)2]2</td><td style="text-align:center">20</td><td style="text-align:center">6.5</td></tr><tr><td style="text-align:center">(CH3)4N[Ni(dmit)2]2</td><td style="text-align:center">7</td><td style="text-align:center">5</td></tr></tbody></table><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li>Ginsburg, D. M., Ed., Physical Properties of High-Temperature Superconductors, Vols. I–III, World Scientific, Singapore, 1989–1992.</li><li>Rao, C. N. R., Ed., Chemistry of High-Temperature Superconductors, World Scientific, Singapore, 1991.</li><li>Shackelford, J. F., The CRC Materials Science and Engineering Handbook, CRC Press, Boca Raton, FL, 1992, 98–99 and 122–123.</li><li>Kaldis, E., Ed., Materials and Crystallographic Aspects of HTc-Superconductivity, Kluwer Academic Publ., Dordrecht, the Netherlands, 1992.</li><li>Malik, S. K. and Shah, S. S., Ed., Physical and Material Properties of High Temperature Superconductors, Nova Science, Commack, NY, 1994.</li><li>Chmaissem, O. et al., Physica, C230, 231–238, 1994.</li><li>Antipov, E. V. et al., Physica, C215, 1–10, 1993.</li><li>Ishigura, T. and Yamaji, K., Organic Superconductors, Springer-Verlag, Berlin, 1990.</li><li>Williams, J. M. et al., Organic Superconductors (Including Fullerenes), Prentice Hall, Englewood Cliffs NJ, 1992.</li><li>The Fullerenes, Ed.: Krato, H. W., Fisher, J. E., and Cox, D. E., Pergammon Press, Oxford, 1993.</li><li>Schluter, M. et al., in The Fullerenes (Ref. 3), p. 303.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前些日子查詢了CRC Handbook of Chemistry and Physics上的物理化學數據 這裏存一下主要的高溫超導體和有機超導體的Tc值&lt;/p&gt;
&lt;p&gt;忽然想起了高中的時候在玉泉做高溫超導體的科研 沒能作出什麼成果真的很可惜 但是TTfish仍然堅信凝聚態物理的未來離開不了超導體 無論是量子計算機(小時候做的夢)還是常溫超導體 高分子超導體 肯定會有突破點 肯定會有一天超導體研究實現突破&lt;/p&gt;
    
    </summary>
    
    
      <category term="Physics" scheme="http://yoursite.com/tags/Physics/"/>
    
      <category term="Data" scheme="http://yoursite.com/tags/Data/"/>
    
      <category term="Superconductor" scheme="http://yoursite.com/tags/Superconductor/"/>
    
  </entry>
  
  <entry>
    <title>Outline for PhysicsChemistry (Thermodynamics)</title>
    <link href="http://yoursite.com/2018/11/15/phy-chem/"/>
    <id>http://yoursite.com/2018/11/15/phy-chem/</id>
    <published>2018-11-15T04:28:07.000Z</published>
    <updated>2019-01-23T22:04:58.643Z</updated>
    
    <content type="html"><![CDATA[<ul><li>文学历史知识?</li><li>凉掉的热力学</li><li>11.26知识整理</li></ul><a id="more"></a><h1 id="History"><a href="#History" class="headerlink" title="History?"></a>History?</h1><ul><li><p>唐诗三百首只有310首的原因 -&gt; 诗经有311首</p></li><li><p>李白的静夜思 在东亚各国藏本中 皆为</p></li></ul><p>床前看月光<br>疑是地上霜<br>举头望山月<br>低头思故乡</p><h1 id="Outline-for-PhysicsChemistry-Thermodynamics"><a href="#Outline-for-PhysicsChemistry-Thermodynamics" class="headerlink" title="Outline for PhysicsChemistry (Thermodynamics)"></a>Outline for PhysicsChemistry (Thermodynamics)</h1><h3 id="单个分子的能级结构"><a href="#单个分子的能级结构" class="headerlink" title="单个分子的能级结构"></a>单个分子的能级结构</h3><p>平动能级 势阱箱粒子的平动 </p><p>太累了 公式统统不打了…</p><ul><li>平动能级是量子化的 孤立的 非连续的</li><li>平动能总是大于0 粒子不会停留在任意一个位置</li><li>箱子尺寸的增大 能级密度增大 不再提供量子边缘化条件</li><li>宏观可测量V的注意</li></ul><p>转动能级</p><p>振动与转动相对于分子质心的运动 与容器的大小无关</p><p>对于一个N核分子 核自由度为 = 3N 平动自由度 = 3 转动自由度由分子结构决定 振动自由度为求差得出</p><p>斯特林近似 lnx! = xlnx - x</p><p>玻尔兹曼方程 S = k ln W</p><p>对于一个系统的性质 正比于系统的大小 -&gt; 广度性质<br>对于一个系统的性质 与系统的大小无关 -&gt; 强度性质</p><p>物质之间不做功的能量传递 -&gt; 传热</p><p>玻尔兹曼因子!!!</p><p>配分函数 = 1 / p(0)</p><p>基本能隙 = \epsilon_1 - \epsilon_0</p><p>权重和熵的关系 -&gt;</p><p>理想气体的体积取决于边界条件<br>理想液体的体积取决于分子间作用力</p><p>$$G_{混} - G_{纯} = n_ARTln\tau_A - n_BRTln\tau_B$$</p><p>理想气体由于分子间相互作用力相等 体积形态不可分 因此熵的变化主要为位置熵的变化</p><p>$$\mu_i = \mu^* + RTlnX_i$$</p><p>纯态的化学势 = $\mu^*$ 特别注意</p><p>$$\mu = \mu_0 + RTlnP^*$$</p><p>相图</p><p>$$Q_{液} \approx 2Q_{气}$$<br>$$C_{p液} \approx 2C_{p气}$$</p><p>溶液作为反应介质的特性 分子起到的是<strong>传热和熵补偿</strong>的作用</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;文学历史知识?&lt;/li&gt;
&lt;li&gt;凉掉的热力学&lt;/li&gt;
&lt;li&gt;11.26知识整理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="PhysicsChemistry" scheme="http://yoursite.com/tags/PhysicsChemistry/"/>
    
      <category term="Thermodynamics" scheme="http://yoursite.com/tags/Thermodynamics/"/>
    
      <category term="Review" scheme="http://yoursite.com/tags/Review/"/>
    
  </entry>
  
  <entry>
    <title>Review for Physics Mid-Term Examination(Electromagnetism)</title>
    <link href="http://yoursite.com/2018/11/14/physics/"/>
    <id>http://yoursite.com/2018/11/14/physics/</id>
    <published>2018-11-14T05:56:13.000Z</published>
    <updated>2019-08-22T08:12:07.486Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Physics(A) Ⅱ Mid-Term – Electromagnetism</li><li>Maxwell’s equations &amp;&amp; ε0 μ0 relationship</li><li>明天就加上薛定谔方程！(鸽子)</li></ul><p>すぐに試験に行くつもりですね　魚はちゃんと勉強しなければならないだ～～</p><a id="more"></a><hr><h3 id="General-Concept"><a href="#General-Concept" class="headerlink" title="General Concept"></a>General Concept</h3><blockquote><p>麦克斯韦方程组</p></blockquote><ol><li>$$\int_l \cdot dl = \int_sJ \cdot ds + \int_s \frac{\partial D}{\partial t}\cdot ds$$</li></ol><p>$$ \nabla \times H = J + \frac{\partial D}{\partial t}$$ </p><p>磁场强度H沿任意闭合曲线的线积分，等于穿过此曲线限定面积的全电流</p><ol><li>$$E \cdot dl = - \frac{d}{dt}\int_SB \cdot ds$$</li></ol><p>$$\nabla \times E = -\frac{\partial B}{\partial t}$$<br>电场强度E沿任意闭合曲线的线积分等于穿过由该曲线所限定面积的磁通对时间的变化率的负值</p><ol><li><p>$$\int_S B \cdot ds = 0$$<br>$$\nabla \cdot B = 0$$<br>对于任意一个闭合曲面，有多少磁通进入曲面就有同样数量的磁通离开</p></li><li><p>$$D \cdot ds = \int_S \rho dv$$<br>$$\nabla \cdot D = \rho$$<br>在时变的条件下，从任意一个闭合曲面出来的D的净通量，应等于该闭曲面所包围的体积内全部自由电荷之总和</p></li></ol><blockquote><p>根据麦克斯韦方程组推测 电磁波以光速传播</p></blockquote><p>然后对真空磁导率进行定义 : 1948年 单位长度的安培力</p><p>$$|F_m| = \frac{\mu_0}{2\pi} \frac{|I|^2}{|r|}$$</p><p>求得</p><p>$$\mu_0 = 4\pi \times 10^{-7} (N/A^2)\approx 1.2566 \times 10^{-6}(N/A^2)$$</p><blockquote><p>真空介电常数与其它物理常数的关系</p></blockquote><p>$$\epsilon_0 = \frac{1}{\mu_0 c^2}$$</p><p>于是求得真空介电常数</p><p>$$\epsilon_0 = 8.854 \times 10^{-12}F/M$$</p><blockquote><p>库仑定律中k的替换</p></blockquote><p>$$ k = 8.99 \times 10^8N \cdot m^2 / C^2 $$<br>取 $ k = \frac{1}{4\pi\epsilon_0}$ 得<br>$$ \epsilon_0 = \frac{1}{4\pi k} = 8.85 \times 10^{-12} C^2 / (N \cdot m^2)$$</p><h3 id="场强的计算"><a href="#场强的计算" class="headerlink" title="场强的计算"></a>场强的计算</h3><p>$$ \vec E = \frac {\vec F}{q_0} \tag{定义式} $$</p><p>$$ \vec E = \frac {1}{4\pi\epsilon_0} \frac{q}{r^2} \hat r \tag{叠加法} $$</p><p>$$ \Phi_e = \int \vec E · d\vec S = \frac{1}{\epsilon_0} \sum_{s内}{q_i}\tag{高斯法} $$</p><p>$$ \vec E = -grad U\tag{静电场的梯度} $$</p><p><img src="/2018/11/14/physics/1.png"></p><p>应用</p><ul><li>半径为R的均匀带电圆环 带电量q 竖直距离z<br>$$dE = \frac{\lambda dl}{4\pi \epsilon_0(z^2 + R^2)^{1/2}}$$<br>$$E = \frac{qz}{4\pi \epsilon_0(z^2 + R^2)^{3/2}}$$<br>拓展到一整个圆盘 就做一次积分<br>$$ E = \frac{\sigma}{2\epsilon_0}(1-\frac{z}{\sqrt{z^2 + R^2 }}) $$<br>取z非常小 得带电平面的场强为<br>$$E = \frac{\sigma}{2\epsilon_0} $$</li><li>带电直导线周围场强<br>$$E_y = \frac{\lambda}{4\pi \epsilon_0a}(cos\theta_1 - cos\theta_2)$$</li></ul><p>无限长直导线 -&gt; 圆柱<br>$$ E = \frac{\lambda}{2\pi \epsilon a}$$</p><h3 id="电势-amp-amp-静电平衡"><a href="#电势-amp-amp-静电平衡" class="headerlink" title="电势&amp;&amp;静电平衡"></a>电势&amp;&amp;静电平衡</h3><p>$$U_p = \int_P^Q E \cdot dl \tag{定义式}$$</p><p>对于一个点电荷</p><p>$$U = \frac{q}{4\pi \epsilon_0r}$$</p><p>对于均匀带电球面/金属球体</p><p>$$U = \frac{q}{4\pi \epsilon_0R} \tag{r \leq R }$$</p><p>$$U = \frac{q}{4\pi \epsilon_0r} \tag{r \geq R }$$</p><p><img src="/2018/11/14/physics/2.png"></p><p>应用</p><ul><li>直接由E积分 记得选择正确的电势0点</li></ul><p>导体内部场强为0 表面就是等势面</p><h3 id="电容-电介质"><a href="#电容-电介质" class="headerlink" title="电容 电介质"></a>电容 电介质</h3><p>$$C = \frac{Q}{U_A - U_B}$$</p><p>$$U_A - U_B = \int^{R_B}_{R_A} R \cdot dr$$</p><p>对于导体电容器</p><p>$$C = 4\pi\epsilon_0R$$</p><p>平行板电容器</p><p>$$C = \frac{\epsilon_0\epsilon_rS}{d}$$</p><p>电容器串联为各自电容的倒数求和 并联则是定容的求和</p><p>外电场作用下电介质表面出现极化电荷</p><p>$$\epsilon_r = \frac{\vec R_0}{E}$$</p><p>电介质中的高斯定理</p><p>$$\int_S D\cdot d\vec S = \sum_{S} q$$</p><p>电场的能量</p><p>$$U_e = \frac{1}{2} \frac{Q^2}{C} = \frac{1}{2}CV^2$$</p><p>$$\mu_e = \frac{1}{2}\epsilon_0\epsilon_rE^2$$</p><p>$$U_e = \int dU_e = \int_V \frac{1}{2}\epsilon_0 \epsilon_rE^2dV$$</p><p>电荷面密度的场强计算 在计算平行板电容器的作用</p><p>$$E = \frac{\sigma}{\epsilon_0}$$</p><p><strong>电介质相关题目</strong></p><p>$$\sigma = P_n$$</p><p>$$\vec D = \epsilon_o \vec E + \vec P$$</p><p>$$\vec D = \epsilon_r \epsilon_0\vec E = \epsilon \vec E$$</p><h3 id="磁场"><a href="#磁场" class="headerlink" title="磁场"></a>磁场</h3><p>长直导线</p><p>$$ B = \frac{\mu_0 I}{4\pi a}(cos\theta_1 - cos\theta_2)$$<br>$$B = \frac{\mu_0 I}{2\pi a} \tag{无限长直导线}$$</p><p><img src="/2018/11/14/physics/3.png"></p><p>载流圆线圈中的磁场</p><p>$$B = \frac{\mu_0 IR^2}{2(R^2+x^2)^{3/2}}$$</p><p>$$B = \frac{\mu_0 I}{2R} \tag{圆心磁场}$$<br>载流螺线管内磁场<br>$$B = \mu_0 nI$$</p><p><strong>无限大面电流磁场</strong></p><p>$$B = \frac{\mu j}{2}$$</p><p>磁力矩</p><p>$$\vec M = \vec P_m \times \vec B$$<br>$$\vec P_m = NIS\vec n$$</p><p>磁力做的功</p><p>$$A = I\Delta\Phi$$</p><p>磁能密度 &amp;&amp; 磁场能量</p><p>$$w_m = \frac{1}{2} B \cdot H$$<br>$$W_m = \frac{1}{2} L I^2_0 = \frac{1}{2}BHV$$</p><p>注意螺距和涡旋电流</p><p>$$\int E_i \cdot dl = - \int_S \frac{\partial B}{\partial t} \cdot dS$$</p><p>霍尔效应</p><p>$$U_H = (\frac{1}{nq})\frac{IB}{d}$$<br>$$R_H = \frac{1}{nq}$$</p><p>铁磁质的磁化规律</p><p>$$H_c \cdot dl = nI $$</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Physics(A) Ⅱ Mid-Term – Electromagnetism&lt;/li&gt;
&lt;li&gt;Maxwell’s equations &amp;amp;&amp;amp; ε0 μ0 relationship&lt;/li&gt;
&lt;li&gt;明天就加上薛定谔方程！(鸽子)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;すぐに試験に行くつもりですね　魚はちゃんと勉強しなければならないだ～～&lt;/p&gt;
    
    </summary>
    
    
      <category term="Review" scheme="http://yoursite.com/tags/Review/"/>
    
      <category term="Physics" scheme="http://yoursite.com/tags/Physics/"/>
    
      <category term="Electromagnetism" scheme="http://yoursite.com/tags/Electromagnetism/"/>
    
  </entry>
  
  <entry>
    <title>Trick or Treat</title>
    <link href="http://yoursite.com/2018/11/01/halloween/"/>
    <id>http://yoursite.com/2018/11/01/halloween/</id>
    <published>2018-11-01T03:33:08.000Z</published>
    <updated>2019-01-23T22:04:58.648Z</updated>
    
    <content type="html"><![CDATA[<p>忽然想起来前几天有人问 :圣诞节和万圣节有什么区别啊…. emmmmm …. emmmm</p><ul><li>扔上来一些不全的万圣节特典?(盗图)</li><li><a href="https://github.com/fish98/XDownloader">XDownload V1.2</a>新功能完成~可以下载原图了!</li><li>很有意思的歌!<br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="440" height="90" src="//music.163.com/outchain/player?type=2&id=31356680&auto=1&height=66"></iframe><a id="more"></a></li></ul><h1 id="XDownloader-v1-2"><a href="#XDownloader-v1-2" class="headerlink" title="XDownloader v1.2"></a>XDownloader v1.2</h1><p><img align="right" width="180px" src="https://d29fhpw069ctt2.cloudfront.net/icon/image/49283/preview.svg"></p><h2 id="Update-new-Feature-on-Nov-8th"><a href="#Update-new-Feature-on-Nov-8th" class="headerlink" title="Update new Feature on Nov.8th"></a>Update new Feature on Nov.8th</h2><ul><li>Make Multi File Download Avaliable =&gt; Modify type of <code>config.url</code> from Number to Array.</li><li>Require Progress Package to add process bar when downloading instead of logs.</li><li>Fix file detect bugs.</li></ul><h2 id="Update-on-Nov-5th"><a href="#Update-on-Nov-5th" class="headerlink" title="Update on Nov.5th"></a>Update on Nov.5th</h2><p>Due to the demand of origin sized image when embeddig, add new feature for origin sized download option in config file</p><p>check the usage in new T-UI feature and planning to migrate to electronic version with all platform packaged</p><h2 id="Now-Support-Process-Bar-Status-Check-and-Original-Image-Download"><a href="#Now-Support-Process-Bar-Status-Check-and-Original-Image-Download" class="headerlink" title="Now Support Process Bar Status Check and Original Image Download"></a>Now Support Process Bar Status Check and Original Image Download</h2><hr><h1 id="Halloween"><a href="#Halloween" class="headerlink" title="Halloween!"></a>Halloween!</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><ul><li>TTfish @fish * 1h<br>saw a gil dressing up as a FBI yesterday night…that’s is literally the scariest halloween costume i’e ever seen.</li></ul><p><img src="/2018/11/01/halloween/2.jpg"></p><ul><li>TTfish @fish * 55min<br>That’s REALLY SCARY!</li></ul><p><img src="/2018/11/01/halloween/1.jpg"></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><img src="/2018/11/01/halloween/3.jpg"> </p><h2 id="Artist-Unknown"><a href="#Artist-Unknown" class="headerlink" title="Artist: Unknown"></a>Artist: Unknown</h2><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p><img src="/2018/11/01/halloween/4.jpg"></p><h2 id="官方发糖"><a href="#官方发糖" class="headerlink" title="官方发糖?"></a>官方发糖?</h2><p><img src="/2018/11/01/halloween/5.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;忽然想起来前几天有人问 :圣诞节和万圣节有什么区别啊…. emmmmm …. emmmm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扔上来一些不全的万圣节特典?(盗图)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fish98/XDownloader&quot;&gt;XDownload V1.2&lt;/a&gt;新功能完成~可以下载原图了!&lt;/li&gt;
&lt;li&gt;很有意思的歌!&lt;br&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;440&quot; height=&quot;90&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=31356680&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Halloween" scheme="http://yoursite.com/tags/Halloween/"/>
    
  </entry>
  
  <entry>
    <title>About Embed!!!</title>
    <link href="http://yoursite.com/2018/10/28/embed/"/>
    <id>http://yoursite.com/2018/10/28/embed/</id>
    <published>2018-10-28T10:18:55.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<ul><li>咕咕已久的教程上传 讨论一下奇奇怪怪的东西</li><li>要好好学习英语和日语了!!! ( 认 真 )</li><li>梦里什么都有: 成为一体姬以后进军时轴压制!!!<a id="more"></a></li></ul><p>扔了一些古老的教案在上面 还是非常简单的!!! 毕竟不是自己做 </p><p><a href="https://sea.zjuqsc.com/f/bae86eed04a74dde8e3b/?dl=1">Click Me to Download!!!</a></p><h2 id="关于曾经遇到的一些奇特的姿势"><a href="#关于曾经遇到的一些奇特的姿势" class="headerlink" title="关于曾经遇到的一些奇特的姿势"></a>关于曾经遇到的一些奇特的姿势</h2><p>对于全彩半透明 …. emmmm 要有耐心就好了 举最近的一个例子吧 非常的难受 一页里面出现了无数的拟声词</p><p>这里讨论一下对于语气词后促音的对待</p><p><strong>按照惯例</strong>: 语气词后的促音应该擦除!!! (对于黑白的就经常忘记 wwwwww)</p><p><img src="/2018/10/28/embed/2.jpg"></p><ul><li>这个は后面的是あ的片假名 所以应该写成“哈啊”</li></ul><p><img src="/2018/10/28/embed/3.jpg"></p><ul><li>这个ん后面就是个つ 赶紧擦掉!!!</li></ul><p><img src="/2018/10/28/embed/1.jpg"></p><ul><li>那么问题来了 这个は后面的… 是个啥!!! </li><li>以老朽拙见 这个应该是个草体的あ 所以应该翻译成“哈啊”!!! (大雾)</li></ul><h2 id="关于一开始遇到的小问题"><a href="#关于一开始遇到的小问题" class="headerlink" title="关于一开始遇到的小问题"></a>关于一开始遇到的小问题</h2><ul><li>关于photoshop的模仿图章使用 应该选择清晰的网点 然后对准!!! 当网点完全重合的时候 模仿图章就会把网点越做越大<br>这个技能很重要（不然就凉了 </li><li>对于源图层的保存 一般开始工作的时候 先<code>Ctrl + J</code>创建一个复制图层 设置透明度成为50% 这样哪怕之后搞砸了 也可以用模仿图章改回来</li><li>所有的字需要居中对齐… 这个真的好难啊 要瞎了 </li><li>很多时候生成jpg文件的时候会发现有些字被隐藏了 还是得检查一下呢!!</li></ul><p>以上~~~</p><p><img src="/2018/10/28/embed/4.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;咕咕已久的教程上传 讨论一下奇奇怪怪的东西&lt;/li&gt;
&lt;li&gt;要好好学习英语和日语了!!! ( 认 真 )&lt;/li&gt;
&lt;li&gt;梦里什么都有: 成为一体姬以后进军时轴压制!!!&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Embed" scheme="http://yoursite.com/tags/Embed/"/>
    
      <category term="2D" scheme="http://yoursite.com/tags/2D/"/>
    
      <category term="Face" scheme="http://yoursite.com/tags/Face/"/>
    
  </entry>
  
  <entry>
    <title>日本語の文法——補助語</title>
    <link href="http://yoursite.com/2018/10/27/Japan/"/>
    <id>http://yoursite.com/2018/10/27/Japan/</id>
    <published>2018-10-27T11:29:43.000Z</published>
    <updated>2019-08-22T08:09:58.855Z</updated>
    
    <content type="html"><![CDATA[<ul><li>还不快背下来!!!</li></ul><a id="more"></a><p>〔が〕和〔は〕的用法<br>1、两个助词的不同定义<br>由于在句子中「が」和「は」经常处于类似的地位，有些人误认为这两个助词区别不大。孰不知这二者从助词种类上就不属于同一类型。「が」是主格助词，是格助词的一种；而「は」是提示助词，它不仅可以提示主语，还能够提示宾语、状语，在一定条件下还可以提示各种补语。因此，它们有时可以起到类似的作用，但有时完全不相同。 </p><hr><p>2、在主语和谓语的提问中的不同含义<br>请看下面两个例句（判断句）：<br>ａ：「ここは教室です。」<br>ｂ：「ここが教室です。」 </p><p>这两句话译成中文，都是“这里是教室。”但是，在日语中有着不同的含义。<br>a句是说明这个地方是教室，而不是别的什么房间，如：不是教员室或实验室等等。是回答「ここはどこですか。」（这是什么地方？）或「ここは何の部屋ですか」（这是什么房间？）的问题的。也就是说已经知道了主语时对谓语提问的回答。 </p><p>b句是强调说明只有这间是教室，别的都不是教室，如：旁边的或对面的都不是教室。是回答「どこが教室ですか。」（哪里是教室？）的问题的。也就是说已经知道了谓语时对主语提问的回答。<br>为什么形成这样不同的形式呢？从提示助词的特点来看，它只能提示具体的内容，不可能提示疑问词。因此，当疑问词在主语部分时，只能用「が」提问，而不能「は」提问；回答也是这样。<br>相反，疑问词在谓语部分时，提示的内容已经明确，所以用「は」，而不用「が」，回答也一样。所以有一句话说“「が」前「は」后”。这句话在表示疑问词的位置上来说，是可以应用的。<br>不仅是在判断句上，在其他类型的句子中也有相同的作用。 </p><p>描写句 a 「ここは静かです。」译成“这里很安静。”是对这里是否安静的判断，不涉及别处，是「ここはどうですか。」（这里怎样？）的回答。（问谓语）<br>b 「ここが静かです。」也译成“这里很安静。”但是在寻找安静地方时的答话，即对「どこが静かですか。」（哪里安静呀？）的答话。（问主语） </p><p>陈述句 a「私は日本语を勉强しています。」译成“我在学习日语。”是说明我在学习日语，没干别的事情，强调的是我“做的事情”。是对「あなたは何をしていますか。」（你在干什么？）的回答。（问谓语） </p><h2 id="b「私が日本语を勉强しています。」也译成“我在学习日语。”但与上一句不同的是：是我在学习日语，而不是别人在学习日语。这里强调的是“我”在学习日语。是对「谁が日本语を勉强していますか。」（谁在学习日语？）的回答。（问主语）"><a href="#b「私が日本语を勉强しています。」也译成“我在学习日语。”但与上一句不同的是：是我在学习日语，而不是别人在学习日语。这里强调的是“我”在学习日语。是对「谁が日本语を勉强していますか。」（谁在学习日语？）的回答。（问主语）" class="headerlink" title="b「私が日本语を勉强しています。」也译成“我在学习日语。”但与上一句不同的是：是我在学习日语，而不是别人在学习日语。这里强调的是“我”在学习日语。是对「谁が日本语を勉强していますか。」（谁在学习日语？）的回答。（问主语） "></a>b「私が日本语を勉强しています。」也译成“我在学习日语。”但与上一句不同的是：是我在学习日语，而不是别人在学习日语。这里强调的是“我”在学习日语。是对「谁が日本语を勉强していますか。」（谁在学习日语？）的回答。（问主语） </h2><p>3、在存在句中的不同含义<br>请看下面两个例句：<br>a 「教室に机があります。」（教室里有桌子。）<br>b 「机は教室にあります。」（桌子在教室里。） </p><p>第一句话的顺序，首先是用补格助词「に」（也可用「には」）表示的补语，其次是用「が」表示的主语，最后是「あります」（谓语）。即“补、主、谓”的结构。这时，「あります」译成“有”。第二句话的顺序，首先是用提示助词「は」表示的主语，其次是用「に」表示的补语。最后是「あります」（谓语）。即 “主、补，谓”的结构。所以，得出结论是：①在存在句中若是“补、主、谓”结构，主语用「が」表示，「あります」译成“有”。②在存在句中若是“主、补，谓”结构，主语用「は」表示，「あります」译成“在”。 </p><hr><p>4、主谓谓语句中的不同含义<br>主谓谓语句有3种：<br>整体和部分，如：「我が国は歴史が长いです。」（我国历史悠久。）<br>其中，「我が国は」是整个句子的主语，即是“大主语”；「歴史が」是谓语部分的主语，即是“小主语”；「长いです」是「歴史が」的谓语。可以看出：在主谓谓语句中，大主语用「は」，表示整体；小主语用「が」，表示部分。<br>主体的能力、需求、好恶等用小主语表示。 </p><p>如：<br>「李さんは英语が上手です。」（小李擅长英语。）（能力）<br>「私はパソコンが欲しいです。」（我想要电脑。）（需求）<br>「学生は日本语が好きです。」（学生喜欢日语。）（好恶） </p><p>在这些例句中，「李さん」、「私」、「学生」是句中的“主语”用「は」表示；而「英语」、「パソコン」、「日本语」都是“对象语”，用「が」表示。从形式是讲，可以看成是“小主语”。<br>存在句的变形。如：「私は新しい车があります。」（我有一辆新车。） </p><p>存在句中用「が」表示主体时，存在的地点本来应该用「には」；但是表示所有时，主体的所有者变成主语，如句中的「私は」，相当于“大主语”；而主体仍然用「が」表示，相当于“小主语”。 </p><p>2.「で」与「に」 用法举例 :<br>で </p><p>——接续：前接体言或部分副助词 </p><p>表示方式方法、工具、手段<br>バスで行きます。 </p><p>电话で连络します。 </p><p>表示动作进行的场所、范围<br>父は工场で働きます。 </p><p>教室で勉强します。 </p><p>表示原因、理由<br>外出は雨で止めました。 </p><p>病気で学校を休みます。 </p><p>に </p><p>——接续：前接体言等 </p><p>表示方向、位置<br>日本に行きます。 </p><p>家に帰ります。 </p><p>机の上に置きます。 </p><p>表示确切的时间<br>三时に行きます。 </p><p>表示动作的对象、动作的着落点<br>先生に花を赠ります。 </p><p>田中さんに頼みます。 </p><p>东京に着きます。 </p><p>表示作用、状态、变化的结果（强调结果） </p><p>先生に成ります。　//　九时になります。　//　日本円を人民币に両替しました。 </p><p>3.日语格助词「の」的用法 :<br>日语格助词の的用法 </p><p>　　１、　名词と名词を结びつける「の」<br>　　　　　　これは李さんの本です。<br>　　　　　　こちらは担任の田中先生です。<br>　　　　　　黒い革の鞄です。<br>　　　　　　ソウルの冬は寒いです。<br>　　　　　　明日の试験は大丈夫ですか。 </p><p>　　２、　名词の働きをしたり、名词句を作る「の」<br>　　　　　　「これは谁の本ですか」「私のです」<br>　　　　　　私が买ったのはこれです。<br>　　　　　　私は本を読むのが好きです。<br>　　　　　　子供が游んでいるのが见えます。<br>　　　　　　友だちが来るのを待っています。 </p><p>　　３、　「～のだ」の形で说明．断定の感情を加える「の」<br>　　　　　　「どうしたんですか」「お腹が痛いんです」 </p><p>　　休みたいんですが、いいでしょうか。<br>　　　　　　今は忙しいんだ。后にしてくれ。 </p><p>　　４、　名词句の中で主语を表す「の」<br>　　　　　　私の（．が）住んでいるところは、駅の近くです。<br>　　　　　　君の（．が）探している物は、これですか。<br>　　　　　　桜の（．が）咲く顷、もう一度来たいですね。 </p><p>５、 句中做状语修饰时，が可以换做の </p><p>　　　　　　仲の（が）良い　 </p><p>之所以贴上这个，是因为曾经遇到过の和が混用的，- -，の和が可以互换，但不是所有的地方都可以换， </p><p>4.助词【を】用法举例 :<br>格助词“を”在大部分情况下是宾格助词，例如： </p><p>「私は食堂で朝ご饭を食べます。」<br>因为句中「食べる」是他动词，所以「朝ご饭（あさごはん）」作宾语，用宾格助词「を」来表示。<br>但是，在不太多的情况下，在自动词作谓语的句子中，会出现用「を」作补语的情况。在一般文法书上提到：在移动性动词作谓语时，移动的起点和移动的范围，需要用「を」来表示，这时「を」不是宾格助词，而是补格助词。例如： </p><p>「山田さんは明日成田（なりた–东京新国际空港）をたってアメリカへ行きます。」<br>「王さんは去年大学を卒业（そつぎょう）しました。」<br>「タクシーを降りて、家に入ります。」<br>「飞行机は青空を飞んでいます。」 </p><p>上述的4个例句中，前3句是用「を」表示移动起点的例子，而第4个是表示移动范围的例子。 </p><p>除上述移动性自动词以外，还有一些特殊的自动词，也用 「を」来表示与动词本身的关系。<br>例如：<br>小林さんは、病気で学校を休みました。<br>银行の角を右に曲がる（まがる）と、映画馆が见えます。<br>这里的「休む」和「曲がる」都是自动词，但是与其发生关系的「学校」和「角」，都用「を」来表示，而且，这里的「を」是补格助词。 </p><p>这一类特殊的自动词的要求很没有规律，必须记住。 </p><p>5.日语助词特殊用法总结 ：<br>在学习日语的过程中，经常遇到一些助词很相近，不知道该用哪一个。这里挑选了一些容易弄错的成对词语做些比较，供网友学习时参考。 </p><p>1，上车用に，下车用を </p><p>上下车辆、船只、飞机等时注意“上车用に，下车用を”。这里に表示动作的着落点，を表示移动动作的起点。这里使用的动词主要有「乗る、乗り込む、飞び乗る、滑り込む、押し乗る和降りる、飞び降りる」等等动词，其共同点是自动词。因此，请注意这时的を不是宾格助词，而是补格助词，所以，表示动作起点的车辆、船只、飞机等都是补语而不是宾语。这里名词带补格助词”に”做补语，没有人不理解；但是，名词带を（补格助词）做补语是经常困绕初学者的问题。有的人说：用から代替を行不行，当然不是不行，不过，这样的用法比较少。 </p><p>①　毎日バスに乗って出勤します。\<br>②　朝寝坊したので、时间ぎりぎりに电车に飞び乗りました。\<br>③　飞行机に乗るのは、今回が初めてです。\<br>④　悪いことだと知りながら、ラッシュの时はバスに押し乗りする。\<br>⑤　バスを降りて１０分歩くと学校に着きます。<br>⑥　もうすぐ授业の时间なので、电车を飞び降りて走って来た。<br>⑦　皆の出迎えの中、新婚夫妇は手を繋いで、船のタラップを降りてきた。 </p><p>1） 我每天乘公共汽车上班。<br>2） 因为早晨睡过头了，跳上了即将开车的电车。<br>3） 乘飞机，这次是第一次。<br>4） 明知不好，但是在上班高峰期，硬是挤进公共汽车里。<br>5） 下了公共汽车走10分钟就到学校。<br>6） 马上就要上课了，我跳下电车就跑来了。<br>7） 在大家的欢迎当中，新婚夫妇手扦手，从船的舷梯走下来。 </p><p>2，前面用に，后面用で </p><p>在动作的先后顺序上，经常使用带有定语的“前”“后”词汇（这里的规律不包括空间的前和后）。这时在一般情况下，用“前に，后で”的规律。为什么不都用に或者で，我也讲不出道理，但是实际情况就是这样，所以这里指出来，引起大家的重视。 </p><p>例句：<br>①　御饭の前に、手を洗います。<br>②　回答をする前に、良く考えます。<br>③　风吕に入る前に、食事をします。<br>④　手を洗った后で、食事をします<br>⑤　良く考えた后で、解答をします。<br>⑥　食事をした后で、风吕に入ります。 </p><p>其实，过去时连体形+后で=连用形+てから。另外，从习惯来说，后で是补语，但是不用这个补格助词で，只用“……后”，以状语的形式出现也是可以的，即在④－⑥的句子中去掉で，句子是完全成立的。 </p><p>1） 饭前洗手。<br>2） 回答问题之前，要认真思考。<br>3） 洗澡之前吃饭。<br>4） 洗手后吃饭。<br>5） 认真思考后，回答问题。<br>6） 吃饭后再洗澡。<br>3，勤める用に、働く用で </p><p>关于工作和上班，过去日语中是分成脑力劳动和体力劳动的。脑力劳动用“……に勤める”和体力劳动用“……で働く”。但是现在已经不分脑力劳动和体力劳动，但是选择的动词与助词的关系仍然保留。 </p><p>①　私は银行に勤めています。<br>②　兄は父の会社で働いています。<br>③　结婚前は学校で働いていましたが、今は何処にも勤めていません。 </p><p>1） 我在银行工作（上班）。<br>2） 我的哥哥在父亲的公司工作。<br>3） 结婚前，我在学校工作，但是现在（哪儿也）没有工作。 </p><p>4，自己决定用にする、别人决定用になる </p><p>决定做某一件事情，自己主观决定，用名词+ にする或者动词+ことにする；别人（领导、上级、集体）客观决定，用名词+になる或者动词+ことになる。有时自己也在决定事情的成员里，但是客观地描述这一事情也用名词+になる或者动词+ことになる。 </p><p>自己决定做一件事情之后，确实一直进行，则用名词+ にしている或者动词+ことにしている。客观决定后一直进行，则用名词+になっている或者动词+ことになっている，一般译成“规定为……”。<br>从下面的日汉对照的句子中，可以发现翻译时要灵活。<br>①　大学を卒业して、教师になりました。<br>②　子供を大学生にしたいです。<br>③　休暇を取って北京へ旅行することにしました。<br>④　明日から北京へ出张することになりました。<br>⑤　私は毎日2时间日本语を勉强する事にしています。<br>⑥　学校は夜10时が门限になっています。 </p><p>1） 大学毕业后当了教师。<br>2） 我想让孩子上大学。<br>3） 申请了休假，决定去北京旅行。<br>4） 从明天起，我要去北京出差了。<br>5） 我（自己决定）每天学习日语2个小时。<br>6） 学校规定晚上10时关大门。 </p><p>5，往高走，过程用を，目的地用に </p><p>我们平时说“登山”，说「山に登る」，但是也会遇到「山を登る」，有人感到奇怪。其实，这里的登る是自动词，を是补格助词，表示移动动词移动的范围。那么这2句有什么不同呢？前者是强调登山的目的，力求登顶；而后者是强调登山的过程，登不登顶是无所谓的。但是有一条要注意，如果说「山に行く」是表示行动的方向，也可以说「山へ行く」，但是绝对不能说「山を行く」。 </p><p>①　夏休みに山に登りました。<br>②　日曜日に山を登りましたが、顶上には到达しませんでした。<br>③　阶段を上って（のぼって）二阶に上（あ）がる。 </p><p>1） 暑假里我去登山了。<br>2） 星期日我去登山了，但是没有登顶。<br>3） 登上楼梯，上了二楼。 </p><p>6，友达と相谈する、先生に相谈する </p><p>补格助词と的一个功能是表示必须有2个人的动作的对手。如练习会话、打乒乓球、商量、打架等动词在执行时必须有对手，而且2个人之间是平等的。但是，有时，只有一方的要求，而另一方没有这样要求时，と就改成に，即：双向用と、单向用に。这里注意，不一定所有的双向动作都改成单向，要考虑是否合理。 </p><p>①　来周の旅行の件について、友达と相谈した。<br>②　今后の进学について先生に相谈に乗って顶いた。\<br>③　やくざが别の组の若者と喧哗をした。<br>④　やくざのような青年が知らない若者に喧哗を吹っかけてきた。<br>⑤　クラスメートと会话の练习をした。<br>⑥　先生に会话の练习をお愿いした。 </p><p>1） 与朋友们商量了下周旅行的事情。<br>2） 就今后升学问题，请教了老师（请老师出了主意）。<br>3） <strong>和别的组织的</strong>打架了。<br>4） 象个**样子的青年向不认识的青年挑衅。<br>5） 和同班同学进行会话练习。<br>6） 向老师请求进行会话练习。 </p><p>7，言表内容具体用と，抽象用を </p><p>言う、思う、考える、话す、感じる、申す、存じる、书く、呼ぶ等都称作言表动词，它所表示的内容，有抽象的概念，也有具体的内容。这里强调一下：抽象的概念用を，具体的内容用と。可能有的网友分不清什么是抽象的概念，什么是具体的内容，这里解释一下：如：我的名字叫孙沈请。日语说: 「私は名前を孙沈清と申します（言います）。」　一般情况下，把“名前を”省略掉。但是如果说“请你把名字写在纸上。”这时只要抽象的不要具体的，于是说：「名前を纸に书いてください。」如果是说“请在纸上写‘孙沈请’。”这时就是要具体的，而不要抽象的，日语就说：「纸に孙沈清と书いてください。」所以，名字是抽象的概念，而孙沈请就是具体的内容了。另外，补充一下。如果用补助动词てある时，表示抽象概念的部分，名词+を变成名词+が，而名词+と的部分不变。 </p><p>①　ここに电话番号を书いてください。<br>②　部屋のドアに（部屋番号が）３０１と书いてあります。<br>③　明日は良い天気になると思います。<br>④　明日の天気を心配します。<br>⑤　先生が学生の名前を呼んでいます。<br>⑥　先生が「王さん、王さん」と呼んでいます。<br>　<br>1） 请在这里写下电话号码。<br>2） 房间的门上写着（房间号码）301。<br>3） 我想明天会变成好天气。<br>4） 我担心明天的天气。<br>5） 老师在喊学生的名字。<br>6） 老师喊：“小王，小王。” </p><p>8，バスに乗り换える、バスを乗り换える </p><p>换える和乗り换える的用法很有意思：同一类的物品进行更换用を，不同的物品之间的更换用に。如：在某个车站公共汽车换乘另外的公共汽车用を，而如果是由无轨电车换乘公共汽车就用に；但是如果是由1路电车换乘2路电车，虽然都是电车，但是前后是不同的电车，所以还得用に。 </p><p>①　新年になったので、日记帐を换えた。新しいのに换えた。<br>②　家に帰ると普段着に换える。<br>③　大连まで飞行机で飞んで、そこから船に乗り换える。<br>④　私は南门でバスを乗り换える、３番バスから１番バスに乗り换える。<br>　<br>1） 到了新的一年，所以更换了日记本，换成了新的。<br>2） 一回家，就换成平时的衣服。<br>3） 乘飞机飞到大连，然后再换乘轮船。<br>4） 我在南门换公共汽车，由3路车换乘1路车。 </p><p>9，庭に椅子を作る、庭で椅子を作る </p><p>表示场地的に和で、很有文章。表示空间时に用来表示动作的落脚点，译成中文可用“往、向”；而用で表示动作的场所，一般都译成“在”。 </p><p>下面讨论“庭に椅子を作る”和“庭で椅子を作る”具体有什么不同的含义。 </p><p>“庭に椅子を作る”表示在一个院子里安装椅子。这里的に表示椅子的落脚点。至于这把椅子是在哪里做的，没有说明：可以在别的地方做，也可以在这个院子里做。“庭で椅子を作る” 表示做椅子的动作在院子里进行，而不在房间里。至于做好了的椅子拿到哪里去，没有说明。<br>把上面的2个句子合在一起，可以说这样的句子：“为了在院子里安装椅子，所以在院子里做了一天椅子。” 「庭に椅子を作るために、一日庭で椅子を作ったのだ。」 </p><p>类似上述的句子，还有： </p><p>①　客间で荷物を広げないでよ。<br>②　客间にカーペットを敷いたらどうですか。<br>③　机の上で和服を広げたら、もう畳めなくなった。 </p><p>1） 不要在客厅摊开行李。<br>2） 在客厅铺上地毯怎么样？<br>3） 在桌子上摊开了和服，就再也叠不起来了。<br>6.日语口语常用语气助词<br>日语口语の语气助词<br>な「终助词] </p><p>1,接在动词连用形下,表示轻微的命令.是[～なさい」的简略形.　　　　　<br>*早く言いな。/快点说. </p><p>2,接在动词终止形下,表示禁止.相当于中文的”不要…..”.<br>*动くな。/不要动. </p><p>かな：「终助词] </p><p>1,表示疑问或怀疑的语气.常用在自言自语的场合.<br>*手纸、送ったかな。/我把信寄出去了吧? </p><p>2,表示自己的希望和愿望.通常会以[～ないかな」的形式出现.相当于中文的”这么还不…..呢?]<br>*バス、早く来ないかな。/公共汽车这么还不快来呢? </p><p>の：[终助词] </p><p>1,表示质问或疑问.(语调上扬)<br>*まだ分からないの。/你还不懂吗? </p><p>2,表示轻微的断定.(语调下降)<br>*明日は行かないの。/明天不去啦! </p><p>なんて：「副助词」 </p><p>表示感到意外的语气,大概是以下说法的口语简略形. </p><p>1などと言って<br><em>自分で「清纯派」などといって、厚かましい。 </em>自分で「清纯派」なんて、厚かましい。/竟然说自己是清纯派,真是厚颜无耻. </p><p>2,などとは<br><em>全部食べちゃうなどとはひどいよ。 </em>全部食べちゃうなんてひどいよ。/你竟然把它全部吃光,真是太过分了. </p><p>3,など（举例说明时）<br><em>いやだよ、一绪になって骗すなど。 </em>いやだよ、一绪になって骗すなんて。/我才不要和你一起骗人呢. </p><p>4,などと<br><em>今日テストなどと闻いてないよ。 </em>今日テストなんて闻いてないよ。/我这么没听说今天要考试啊! </p><p>のに「连续助词」 </p><p>1,接在活用语连体形下,连接前后两句,有责怪,不满或感到意外的语气.通常表示结果出乎意料或不合常理.<br>*何回も言ったのに、何でまだ分からないの。/我已经说过很多遍了,为何你还是不懂呢? </p><p>2,作为[终助词]放在句末时,含有遗憾,惋惜,不满,责怪的语气或埋怨对方不了解自己的心情.<br>*何で食べないの。わざわざ料理を作ってあげたのに。/为何不吃呢?我特地为你下厨,你竟然…… </p><p>なんか：「副助词」 </p><p>1,「なにか」的口语说法<br><em>なにか得することでもある。 </em>なんか得することでもある。/有啥好处吗? </p><p>2,「なんだか」的口语说法.说不出个啥,但总觉得……<br><em>なんだか、やっぱり上海の方が暮らしやすいと思うよ。 </em>なんか、やっぱり上海の方が暮らしやすいと思うよ。/总觉得还是在上海容易生活! </p><p>3,「など」的口语说法.表示列举事例.<br><em>お茶などどう？ </em>お茶なんかどう？/要不要喝杯茶啊? </p><p>もん「终助词」 </p><p>为女性或小孩用语,放在句末,表示原因.常与「だって」一起出现,有撒娇的语气.<br><em>どうして太郎という名をつけたの？/为啥取太郎这个名字呢? </em>だってかわいいんだもん。/因为很可爱呀! </p><p>わけ </p><p>当名词用,表示”意思”.放在句尾使之成为疑问句时,表示确认或质问对方表达的意思.相当于中文的”你是说……吗?”、”你的意思是……吗?”<br>*コピーしてから出すと言うわけ？/你是说复印之后再寄出去吗? </p><p>わけがない </p><p>动词连体形+わけがない」表示”不可能……”,”不会……”.<br>*知るわけがないじゃない。/我不是不知道.(我是知道的.) </p><p>わけではない<br>「动词连体形+わけではない」表示”并不是……”,”又不是……”.<br>*贵方だけが悪いと言うわけではない。/并不只是你的错. </p><p>よ、さ、ぜ、か、のか、かな、わ </p><p>「よ、さ、ぜ、わ」等是表示传达语气的终助词 </p><p>「な、かな」等则是表示“确认、咏叹”的终助词 </p><p>よ：表示说话人认为听话人应该认识到谈话的内容。基本上是对听话人使用，表示说话人所思考的事情，认为听话人对此应有所认识。 男女都可以使用。 </p><p>さ：表示说话人并非对所作的判断负责，而是作为理所当然的事情或暂且的判断表示提示。 作为终助词时一般是男性使用，作为间投助词时则男女通用。 </p><p>ぜ：用于说话人单方面向听话人传达语句的内容。想要改变听话人对某事情认识的意图并不强。 一般是男性使用。 </p><p>わ：基本用法是表示说话人在表达对说话内容的认识时常伴随着自己强烈的感情或惊讶等。如果是对听话人使用的话，则作为说话人对说话内容的个人认识或经验。 升调「わ」主要是女性使用；降调「わ」则在地方方言中是男女共用。 </p><p>な：降调的「な」可用于独语，表示说话人再次确认自己的感情等。有时在有听话人存在的模拟独语中也可使用不将调的「な」。与「ね」相近的「な」用于独语时和「ね」一样，有边表示与某种认识相一致边叙述的性质。 用于对话的「な」一般是男性用的比较多，在独语或接近于独语的发话中女性也可使用。 </p><p>かな：是「か」和「な」的复合性终助词，后面一般接「思う」之类的动词。这种发话听起来像独语。 男女都可使用</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;还不快背下来!!!&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Japanese" scheme="http://yoursite.com/tags/Japanese/"/>
    
      <category term="Language" scheme="http://yoursite.com/tags/Language/"/>
    
  </entry>
  
  <entry>
    <title>Painting(偽物) と Ebedding ??</title>
    <link href="http://yoursite.com/2018/10/24/managacraft/"/>
    <id>http://yoursite.com/2018/10/24/managacraft/</id>
    <published>2018-10-24T14:32:35.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<p>Update on 8102.10.24! </p><ul><li><strong>Groobum Princess怎么可以这么可爱!!!</strong></li><li>終於不寫技術博客了呢 看來跳跳魚要跑路了（大霧）</li><li>最近做的一些小东西(伪·搬运)</li></ul><a id="more"></a><h1 id="About-Embedding"><a href="#About-Embedding" class="headerlink" title="About Embedding"></a>About Embedding</h1><p>嵌字真的很累呢！ 翻譯快出來捱打！！！ 過幾天有空考虑把教程放上来<br>　<br>唉 终究还是暴露了 emmm 前几天接了刀剑乱舞的一本漫画 神仙翻译居然把所有的字都给我翻译了~ </p><p>然鹅翻译还有一些错误… 这里就不拿出来表了… 翻译酱么么嗒!</p><p><img src="/2018/10/24/managacraft/translate.jpg"></p><ul><li>这张图我要做多久咧 ~~！！</li></ul><p><img src="/2018/10/24/managacraft/complete.png"></p><ul><li>做完了嘤嘤嘤 然而还有好多其他锅…</li></ul><hr><h1 id="Groobum-Princess-！！"><a href="#Groobum-Princess-！！" class="headerlink" title="Groobum Princess ！！"></a>Groobum Princess ！！</h1><p>前几日在Reddit看到了Groobum Princess的同人(物?)作品 太妙了 稍微处理了一下 忍不住想扔上来</p><p><img src="/2018/10/24/managacraft/g1.png"><br><img src="/2018/10/24/managacraft/g2.png"><br><img src="/2018/10/24/managacraft/g3.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Update on 8102.10.24! &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Groobum Princess怎么可以这么可爱!!!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;終於不寫技術博客了呢 看來跳跳魚要跑路了（大霧）&lt;/li&gt;
&lt;li&gt;最近做的一些小东西(伪·搬运)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Embed" scheme="http://yoursite.com/tags/Embed/"/>
    
      <category term="2D" scheme="http://yoursite.com/tags/2D/"/>
    
      <category term="Face" scheme="http://yoursite.com/tags/Face/"/>
    
      <category term="Groobum" scheme="http://yoursite.com/tags/Groobum/"/>
    
  </entry>
  
  <entry>
    <title>AI Manga Colorize Attempt</title>
    <link href="http://yoursite.com/2018/10/14/virt/"/>
    <id>http://yoursite.com/2018/10/14/virt/</id>
    <published>2018-10-14T03:57:23.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<ul><li>TTfish博客大更新！！！ 嘟噜噜噜噜~</li></ul><p>今天介绍一下<a href="https://github.com/lllyasviel">一喵</a>做的人工智能<a href="http://paintstransfer.com/">PaintsTransfer</a>上色 感覺如果有美術功底的話 還是挺好玩的（然而跳跳魚沒有）</p><p>这几天进了一喵的社区玩耍 一半是程序员 一半是画师 hhhhhh</p><p>说好的嵌字教程又咕咕咕啦~~~</p><a id="more"></a><h1 id="From-Style2Paint-to-PaintTransfer"><a href="#From-Style2Paint-to-PaintTransfer" class="headerlink" title="From Style2Paint to PaintTransfer"></a>From Style2Paint to PaintTransfer</h1><p>一喵是苏州大学的大四学生 一年前开源了<a href="https://github.com/lllyasviel/style2paints">Style2Paints</a> 现在已经6000多星星了 还听说投了一篇Siggraph的paper 之后一直在做<a href="http://mangacraft.net/">MangaCraft</a> 目前新产品<a href="http://paintstransfer.com/">PaintTransfer</a> 做的是迁移学习 虽然还是闭源的 但是非常厉害的工程师呢~</p><h2 id="上两张非常糟糕的尝试-导致彩化任务彻底失败"><a href="#上两张非常糟糕的尝试-导致彩化任务彻底失败" class="headerlink" title="上两张非常糟糕的尝试 导致彩化任务彻底失败"></a>上两张非常糟糕的尝试 导致彩化任务彻底失败</h2><p>之前简单的做了一会儿的MangaCraft 花了一页 最大的感觉就是不懂配色真的很难受~ 甚至需要google篮球架的颜色来乱涂…</p><p><img src="/2018/10/14/virt/show.jpg"> </p><p>这是训练完的效果</p><p><img src="/2018/10/14/virt/train.jpg"></p><p>这是训练的色彩填充</p><p>第一次看到这个项目也是之前 组里面的一本漫画是用了这个做了彩化 然鹅其实应该先嵌字再彩化？（太狠了）<br>组里后来说这个的配色在程序员的手中变得难以忍受（确实——）<br>感觉这个比较适合用来玩耍八~~~ 嘻嘻 并不是很能够用来做正经工作</p><p>Emmmmmm 对于实际的操作使用 其实还是有技巧之说 首先 漫画不是很适合 尤其是修完图后的 </p><p>线稿上色就比较稳健 迁移学习也能够做的很开心 一般展示里都是线稿…可以去找来看看</p><p>emmmm 上两张图呗~~</p><p><img src="/2018/10/14/virt/cat.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;TTfish博客大更新！！！ 嘟噜噜噜噜~&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天介绍一下&lt;a href=&quot;https://github.com/lllyasviel&quot;&gt;一喵&lt;/a&gt;做的人工智能&lt;a href=&quot;http://paintstransfer.com/&quot;&gt;PaintsTransfer&lt;/a&gt;上色 感覺如果有美術功底的話 還是挺好玩的（然而跳跳魚沒有）&lt;/p&gt;
&lt;p&gt;这几天进了一喵的社区玩耍 一半是程序员 一半是画师 hhhhhh&lt;/p&gt;
&lt;p&gt;说好的嵌字教程又咕咕咕啦~~~&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="2D" scheme="http://yoursite.com/tags/2D/"/>
    
      <category term="Art" scheme="http://yoursite.com/tags/Art/"/>
    
  </entry>
  
  <entry>
    <title>Virtual Machine Bugs</title>
    <link href="http://yoursite.com/2018/10/10/paint/"/>
    <id>http://yoursite.com/2018/10/10/paint/</id>
    <published>2018-10-10T15:25:16.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<ul><li>好久沒有更新博客了呢!!! 你這條魚爲什麼這麼怠惰啊…</li></ul><p>最近在忙一些奇奇怪怪的事情 看來還是得好好記錄一些好玩的事兒呢</p><p>爲了能在寫代碼的時候能夠使用QQ 安裝了上古Windows7 結果折騰了好多時間…</p><p><s>羊可愛：所以你不能看手機咩?</s></p><a id="more"></a><p><s>先挖一個坑 明天填（咕咕咕）</s></p><h1 id="About-Virt-Manager"><a href="#About-Virt-Manager" class="headerlink" title="About Virt-Manager"></a>About Virt-Manager</h1><p>emmmmm 用虛擬機還是一件非常好的事情 然而之前嘗試自己配置自己的kvm 被qemu各種奇怪的配置弄暈了… 然而屈服了Virt-Manager以後 終於在圖形化界面中找到了新世界（大霧———）然而有很多神仙錯誤 例如鼠標移動的神奇卡噸 分辨率和網速更是像一臺裝了Windows XP的2000年計算機 </p><p>途中在建立共享文件夾的時候 點擊小標籤“shared files”根本不理睬我 反而報錯<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unsupported configuration: shared access <span class="keyword">for</span> disk <span class="string">'xxx'</span> requires use of supported storage format</span><br></pre></td></tr></table></figure></p><p>嘛 看來文件格式不能夠讓他滿意呢 面向Google搜索後 發現大體有兩種方法</p><ul><li>第一種是用libguestfs工具 修復上面的問題 實現share file</li></ul><h2 id="小插曲"><a href="#小插曲" class="headerlink" title="小插曲"></a>小插曲</h2><p>在裝libguestfs的時候 出現了報錯</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cannot run pkg-config to check libvirt version at Makefile.PL line 8.</span><br><span class="line">==&gt; ERROR: A failure occurred <span class="keyword">in</span> build().</span><br><span class="line">    Aborting...</span><br><span class="line">Error making: perl-sys-virt</span><br></pre></td></tr></table></figure><p>emmmmm 總而言之就是沒有pkg-config導致perl-sys-virt的build失敗了</p><p>這可真是丟人… 於是馬上安裝必須包base-devel 解決上述問題 arch上還是非常需要的</p><ul><li>第二種是用qemu-nbd 直接掛載了在/var/lib/libvirt/images裏的qcow2文件</li></ul><p>具體不詳細說了 跳跳魚已經放棄了!!!</p><p>可能kvm不是很適合來跑圖形界面 還是換一個工具吧 於是</p><p><img src="/2018/10/10/paint/bear.jpg"></p><h1 id="About-VirtualBox"><a href="#About-VirtualBox" class="headerlink" title="About VirtualBox"></a>About VirtualBox</h1><p>剛上手virtualBox的時候 跳跳魚非常偷稅!! 這是什麼天使?! 爲什麼速度那麼快 界面那麼流暢… 而且有很多都幫你封裝好了 例如共享文件夾之類的</p><p>還有好多優點 例如 动态分配硬盤空間 這讓我之前被kvm吃掉的20G可以少一些使用</p><p>按住F8進入安全模式後 打開了3D加速 CD Drive Guest Addition很棒</p><p>還有一個就是神奇的Seamless Mode 成功的把導航欄裝了起來 感覺就像在使用Windows導航的Arch Linux</p><p>點名表扬~ 雖然有一些Bug 不過可以理解…</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;好久沒有更新博客了呢!!! 你這條魚爲什麼這麼怠惰啊…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在忙一些奇奇怪怪的事情 看來還是得好好記錄一些好玩的事兒呢&lt;/p&gt;
&lt;p&gt;爲了能在寫代碼的時候能夠使用QQ 安裝了上古Windows7 結果折騰了好多時間…&lt;/p&gt;
&lt;p&gt;&lt;s&gt;羊可愛：所以你不能看手機咩?&lt;/s&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="KVM" scheme="http://yoursite.com/tags/KVM/"/>
    
  </entry>
  
  <entry>
    <title>Notes For Archlinux Installation</title>
    <link href="http://yoursite.com/2018/08/28/note/"/>
    <id>http://yoursite.com/2018/08/28/note/</id>
    <published>2018-08-28T13:34:19.000Z</published>
    <updated>2019-01-23T22:04:58.648Z</updated>
    
    <content type="html"><![CDATA[<ul><li>感谢著名画师<a href="https://weibo.com/u/1829854847?refer_flag=1001030101_">电波墙</a>授权的Banner和缩略图！！！</li><li>最近重新安裝了Arch Linux 非常的開心 記錄一些小細節(感謝<a href="https://blog.yoitsu.moe/">约伊兹的萌狼乡手札</a>！)</li><li>增加了幾個之前很想尋找但是忘記了的命令</li><li>圖片過多導致博客更新頻率降低 之後儘量減少圖片吧/(- O -)/</li></ul><p><img src="/2018/08/28/note/cat.gif"><br><a id="more"></a></p><h1 id="About-Time-SetUp"><a href="#About-Time-SetUp" class="headerlink" title="About Time SetUp"></a>About Time SetUp</h1><p>因爲之前是第一次使用非圖形化操作系統（在自己的電腦上） 有些操作有些亂來 現在想來仍十分愧疚 於是乎有一些環境被污染<br>例如npm和pip 這些包管理工具和pacman 於是乎重新安裝了Arch （然鵝忘記備份了.ssh文件夾 丟了openvpn的配置 嗚嗚嗚）</p><p>剛安裝完系統以後 一般會先校對時間 而有些電腦的時間會有一些問題 想起了貴潮去年的納新短信 跳跳魚收到的顯示:”請在晚上23:00參加第二輪面試” 當時就懵了（hhhh） 當然我的電腦也有同樣的問題 記錄一下直接更改時間的方法（當然也可以在<code>timedatectl</code>中更改~）</p><h3 id="情况不容乐观"><a href="#情况不容乐观" class="headerlink" title="情况不容乐观"></a>情况不容乐观</h3><p>重启了Windows以后可能把我的硬盘时间更改了 导致再此进入Linux的时候 时间又是英国时间</p><p>可能的解决方法: </p><ul><li>改Windows的注册表（哭）</li><li>暴力设置.bashrc的配置</li><li><s>再也不用Windows</s>(真香)</li></ul><p>關於跳跳魚神奇的網卡驅動問題 下次再細說</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm /etc/localtime</span><br><span class="line">$ ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p><code>date</code>命令可以查看時間 例如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ date</span><br><span class="line">Tue Aug 28 23:49:17 CST 2018</span><br></pre></td></tr></table></figure></p><h3 id="更新于2018-9-30-17-50"><a href="#更新于2018-9-30-17-50" class="headerlink" title="更新于2018/9/30 17:50"></a>更新于2018/9/30 17:50</h3><p>然而上述方法在经历了长期的重启后 完全失效了 当然<code>sudo hwclock --localtime</code>显示的是格林尼治时间 然鹅<code>sudo hwclock --utc</code>却是东八区的时间 这就很奇怪 于是安装openntpd 并且enable 于是就很快乐 </p><p>双倍的快乐！！</p><hr><h1 id="記錄一些容易忘記的花裏胡哨沒有實用的命令"><a href="#記錄一些容易忘記的花裏胡哨沒有實用的命令" class="headerlink" title="記錄一些容易忘記的花裏胡哨沒有實用的命令"></a>記錄一些容易忘記的花裏胡哨沒有實用的命令</h1><ul><li><p>Figlet<br>將字符按一定字體輸出(ASCII FONT ART?)<br>記得有個拓展叫”Toilet”不是很想介紹 顏色比較難以接受</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ figlet <span class="string">"TTfish"</span></span><br><span class="line"> _____ _____ _____ ___ ____  _   _ </span><br><span class="line">|_   _|_   _|  ___|_ _/ ___|| | | |</span><br><span class="line">  | |   | | | |_   | |\___ \| |_| |</span><br><span class="line">  | |   | | |  _|  | | ___) |  _  |</span><br><span class="line">  |_|   |_| |_|   |___|____/|_| |_|</span><br></pre></td></tr></table></figure></li><li><p>Cowsay/Cowthink<br>一隻牛在說話或者在思考（並不一定是牛）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cowsay -l // -c指定模型 -l查看模型</span><br><span class="line">$ cowsay <span class="string">"ttfish"</span></span><br><span class="line"> ________ </span><br><span class="line">&lt; ttfish &gt;</span><br><span class="line"> -------- </span><br><span class="line">        \   ^__^</span><br><span class="line">         \  (oo)\_______</span><br><span class="line">            (__)\       )\/\</span><br><span class="line">                ||----w |</span><br><span class="line">                ||     ||</span><br></pre></td></tr></table></figure></li><li><p>Sl<br>日本開發者寫的懲罰工具 打錯ls的下場 一輛火車跑出來 跑完之前無法被停止（跳跳魚經常被氣死）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sl</span><br><span class="line">火車長什麼樣自己看~</span><br></pre></td></tr></table></figure></li><li><p>Asciiquarium<br>水族館 有些奇奇怪怪的魚游來游去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ asciiquarium</span><br></pre></td></tr></table></figure></li><li><p>Xmas<br>Npm 的彩蛋？不是很清楚</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm xmas</span><br><span class="line">會出來一顆樹</span><br></pre></td></tr></table></figure></li><li><p>Ponysay/Ponythink<br>ponies版本的cowsay/cowthink</p></li><li><p>Doge<br>一隻doge並且胡言亂語</p></li><li><p>Cmatrix<br>從天而降的莫名其妙的字符（用來裝蒜？）</p></li><li><p>Fortune<br>隨機的段子（不然爲什麼叫fortune呢）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fortune //包名叫cowfortune</span><br></pre></td></tr></table></figure></li><li><p>Lolcat<br>彩虹貓的導出格式（顏色有時候慘不忍睹）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"ttfish"</span> | lolcat</span><br></pre></td></tr></table></figure></li><li><p>Xeyes<br>兩隻眼睛跟隨鼠標移動 然而是窗口模式的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xeyes //包名叫xorg-xeyes</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;感谢著名画师&lt;a href=&quot;https://weibo.com/u/1829854847?refer_flag=1001030101_&quot;&gt;电波墙&lt;/a&gt;授权的Banner和缩略图！！！&lt;/li&gt;
&lt;li&gt;最近重新安裝了Arch Linux 非常的開心 記錄一些小細節(感謝&lt;a href=&quot;https://blog.yoitsu.moe/&quot;&gt;约伊兹的萌狼乡手札&lt;/a&gt;！)&lt;/li&gt;
&lt;li&gt;增加了幾個之前很想尋找但是忘記了的命令&lt;/li&gt;
&lt;li&gt;圖片過多導致博客更新頻率降低 之後儘量減少圖片吧/(- O -)/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2018/08/28/note/cat.gif&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Note for Electron &amp;&amp; Vue.js</title>
    <link href="http://yoursite.com/2018/08/15/electron/"/>
    <id>http://yoursite.com/2018/08/15/electron/</id>
    <published>2018-08-15T12:03:39.000Z</published>
    <updated>2019-01-23T22:04:58.666Z</updated>
    
    <content type="html"><![CDATA[<ul><li>最近写了一点点Electron 开发体验一般(然鹅在Arch上非常的痛苦)</li><li>贵潮的纳新系统用Vue来写 遇到了一些坑</li><li>TypeScript很棒 Golang很妙 Vue是个什么玩意儿</li></ul><p><img src="/2018/08/15/electron/rm.gif"></p><a id="more"></a><h1 id="Electron-js"><a href="#Electron-js" class="headerlink" title="Electron.js"></a>Electron.js</h1><p>Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库 2014年开源的</p><p><img src="/2018/08/15/electron/electron.png"></p><h2 id="About-Installation-Bugs"><a href="#About-Installation-Bugs" class="headerlink" title="About Installation Bugs"></a>About Installation Bugs</h2><blockquote><p>安装会卡在<code>node install.js</code>上 然后报错退出 </p></blockquote><p>这个问题很多人都会遇到 当然TTfish也遇到了 看到别人用黑魔法直接解包用了 这里还是写一下比较友好的方法:</p><ul><li>换个国内镜像 浙大源 淘宝源 QSC源</li><li><code>npm install -g electron</code>后的参数<code>--unsafe-perm=true --allow-root</code>这个就是全局安装的权限问题了(头疼)</li></ul><blockquote><p><strong>不知为何我的Arch安装了Electron以后输入<code>electron .</code>以后石沉大海 啥事都不会发生 遂怒转Windows开发</strong></p></blockquote><h2 id="Electron-Development"><a href="#Electron-Development" class="headerlink" title="Electron Development"></a>Electron Development</h2><p>安装完包以后 就可以进行开发 package.json的配置不可缺少<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"main": "main.js",</span><br><span class="line">"scripts": &#123;</span><br><span class="line">    "start": "electron ."</span><br><span class="line">  &#125;,</span><br><span class="line">"homepage":".",</span><br><span class="line">"dependencies": &#123;</span><br><span class="line">      "electron": "^",</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>当然 直接<code>electron .</code>执行也没有问题 前提是npm全局安装了electron并在环境变量里有</p><h2 id="Hello-World-amp-amp-A-little-More"><a href="#Hello-World-amp-amp-A-little-More" class="headerlink" title="Hello World &amp;&amp; A little More"></a>Hello World &amp;&amp; A little More</h2><p>Elecreon有集成好的 需要记忆的API (不喜欢记API) 稍微写一点在这里 这是个简单的Hello World<br>以下是<code>Main.js</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="keyword">const</span> electron = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"><span class="keyword">const</span> Menu = electron.Menu</span><br><span class="line"><span class="keyword">const</span> app = electron.app</span><br><span class="line"><span class="keyword">const</span> BrowserWindow = electron.BrowserWindow</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mainWindow</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWindow</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">    mainWindow = <span class="keyword">new</span> BrowserWindow(&#123;<span class="attr">backgroundColor</span>: <span class="string">'white'</span>, <span class="attr">width</span>: <span class="number">1200</span>, <span class="attr">height</span>: <span class="number">800</span>&#125;)</span><br><span class="line"></span><br><span class="line">    mainWindow.loadURL(url.format(&#123;</span><br><span class="line">    pathname: path.join(__dirname, <span class="string">'index.html'</span>),</span><br><span class="line">    protocol: <span class="string">'file:'</span>,</span><br><span class="line">    slashes: <span class="literal">true</span></span><br><span class="line">  &#125;))</span><br><span class="line">    mainWindow.on(<span class="string">'closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    mainWindow = <span class="literal">null</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'ready'</span>, createWindow)</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'window-all-closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (process.platform !== <span class="string">'darwin'</span>) &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'activate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (mainWindow === <span class="literal">null</span>) &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>那么这样的效果就是创建一个1200*800的窗口 并且加载了本地的<code>index.html</code>的代码 </p><blockquote><p>关于<code>BrowserWindow</code>的一些参数 </p></blockquote><ul><li><code>autoHideMenuBar: true</code>会隐藏页面的菜单栏 按下<code>Ctrl</code>后会显示</li><li><code>fullscreen: true</code> 全屏(有点难受 关闭按钮被顶出去了)</li><li><code>frame: false</code> 那边框就全没了</li><li><code>transparent: true</code> 这个很有意思 会变成透明的底板(去年的潮毕 薯米君好像就是这样写的弹幕)</li></ul><p>还有很多属性 不写了 </p><p>关于Electron重要的是它只用了Chromium的渲染库而不是其全部组件 多进程就很喵 狠狠的写路由可以写很好的工程 比如正在使用的VSCode(你怎么还在用VSCode写博客?)</p><p>Note:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="built_in">require</span>(<span class="string">'./haha.js'</span>)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h1><p><img src="/2018/08/15/electron/vue.png"></p><p>嘛 之前用React 写的还算是开心？ 写微信小程序的时候 用过Wepy 和Vue非常的像 而因为微信的Api实在是太糟糕了 当时写的不舒服到也没有很大的怨气 还很高兴 但是真正要写Vue的时候 感觉不是很舒服了(当然开发效率很快 Route之类的裸犇君也写得很好)</p><h2 id="About-Installation"><a href="#About-Installation" class="headerlink" title="About Installation"></a>About Installation</h2><p>打包工具很不错 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g vue-cli</span><br></pre></td></tr></table></figure><p>然而一开始de了一小时的bug 才发现少装了四个包 眼泪流下来 所以 这个很重要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g babel-plugin-syntax-dynamic-import</span><br></pre></td></tr></table></figure><p>如果遇到Vue异步组件的懒加载报语法错误的时候 就是没有装这个包的锅 别问我怎么知道的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">      &#123; <span class="attr">path</span>: <span class="string">'/'</span>, <span class="attr">component</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'./components/Home.vue'</span>) &#125;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p><p>非常妙的语法</p><h2 id="About-Data"><a href="#About-Data" class="headerlink" title="About Data"></a>About Data</h2><p>之前写微信小程序就被Data弄得晕头转向 并不像React的State一样管理方便 于是小项目小数据的话 一般还是不放在Data里 直接在script标签里定义 更改也是暴力的用<code>this.xxx = xxx</code>来更改</p><ul><li>Typescript =&gt; 声明一堆对象的数组: let TTfish : object[] </li><li>object 不能大写 </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;最近写了一点点Electron 开发体验一般(然鹅在Arch上非常的痛苦)&lt;/li&gt;
&lt;li&gt;贵潮的纳新系统用Vue来写 遇到了一些坑&lt;/li&gt;
&lt;li&gt;TypeScript很棒 Golang很妙 Vue是个什么玩意儿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2018/08/15/electron/rm.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Electron" scheme="http://yoursite.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>Some Linux Command &amp;&amp; Tools</title>
    <link href="http://yoursite.com/2018/07/27/linux/"/>
    <id>http://yoursite.com/2018/07/27/linux/</id>
    <published>2018-07-26T16:17:50.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Record Some of the Linux Commands and Useful Tools For further use</li><li>Ready to insert some code with other language (Web Assamblely? No idea yet~)</li></ul><a id="more"></a><hr><h1 id="Linux-Commands-amp-amp-Packages-Tools-Used-Recently"><a href="#Linux-Commands-amp-amp-Packages-Tools-Used-Recently" class="headerlink" title="Linux Commands &amp;&amp; Packages/Tools Used Recently"></a>Linux Commands &amp;&amp; Packages/Tools Used Recently</h1><h2 id="Linux-PATH-Configure"><a href="#Linux-PATH-Configure" class="headerlink" title="Linux $PATH Configure"></a>Linux $PATH Configure</h2><p><strong>Normally written in <code>.bashrc</code> or <code>.bash_profile</code></strong><br>The $PATH is really important for searching for excutable commands and as for configuration, we should not forget to avoid over-writting the origin PATH<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span>  // For check the present path</span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="string">"xx/xx/xxx/bin:<span class="variable">$PATH</span>"</span> // Add the new path <span class="keyword">in</span> the front</span><br></pre></td></tr></table></figure></p><ul><li>Do not forget the $PATH </li><li>“:” is used for seperate two paths and conbine into the new path</li></ul><p><img src="/2018/07/27/linux/pop.jpg"></p><h2 id="Python-Environment-amp-amp-Pip-amp-amp-Conda"><a href="#Python-Environment-amp-amp-Pip-amp-amp-Conda" class="headerlink" title="Python Environment &amp;&amp; Pip &amp;&amp; Conda"></a>Python Environment &amp;&amp; Pip &amp;&amp; Conda</h2><p>The Anaconda Provides the feature to set a virtual environment for python development. </p><ul><li>Be aware of the difference between <code>python -m xxxx</code> and <code>python xxxx</code></li><li><p>The python environment create =&gt; </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n XXXXX python=X.X</span><br></pre></td></tr></table></figure></li><li><p>The Usage of the environment =&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> activate XXXX(The name you created before)</span><br><span class="line">$ conda install -n XXXX [package]</span><br><span class="line">$ <span class="built_in">source</span> disactivate XXXX</span><br><span class="line">$ conda remove -n XXXX -all </span><br><span class="line">$ ...</span><br></pre></td></tr></table></figure></li></ul><ul><li>The Installation of the Packages from Third Party is Recommanded to install in the Virtual Environment instead of Global SUDO commands !!! (impoertant) </li></ul><h2 id="Nload"><a href="#Nload" class="headerlink" title="Nload"></a>Nload</h2><p>Display the network usage status with TUI </p><h2 id="Objdump"><a href="#Objdump" class="headerlink" title="Objdump"></a>Objdump</h2><p>Displays information about one or more object files.  The options control what particular information to display.</p><h2 id="Du-amp-amp-Df"><a href="#Du-amp-amp-Df" class="headerlink" title="Du &amp;&amp; Df"></a>Du &amp;&amp; Df</h2><p>List the size of a dir and the file.</p><h2 id="Convert-JPG-gt-GIF"><a href="#Convert-JPG-gt-GIF" class="headerlink" title="Convert (.JPG -&gt; .GIF)"></a>Convert (.JPG -&gt; .GIF)</h2><p>Well, a well known command line tool from ImageMagick</p><p>This time for the jpgs to transform into gif =&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ convert -delay 20 -loop 0 *.jpg ttfish.gif</span><br></pre></td></tr></table></figure><p><img src="/2018/07/27/linux/imagemagick.png"></p><h2 id="Ffmpeg"><a href="#Ffmpeg" class="headerlink" title="Ffmpeg"></a>Ffmpeg</h2><p>A Useful Stream Video Convertor (.m3u8 FILE transition)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i <span class="string">"remote_address"</span> -c copy ttfish.mp4</span><br></pre></td></tr></table></figure><h2 id="File"><a href="#File" class="headerlink" title="File"></a>File</h2><p>Check the specific type of a file.</p><h2 id="Nm"><a href="#Nm" class="headerlink" title="Nm"></a>Nm</h2><p>List the symbols from object files objfile. If no object files are listed as arguments, nm assumes the file a.out.</p><h1 id="To-be-continued…"><a href="#To-be-continued…" class="headerlink" title="To be continued…"></a>To be continued…</h1>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Record Some of the Linux Commands and Useful Tools For further use&lt;/li&gt;
&lt;li&gt;Ready to insert some code with other language (Web Assamblely? No idea yet~)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Breif Record of SCT_Summer Course</title>
    <link href="http://yoursite.com/2018/07/16/summmer/"/>
    <id>http://yoursite.com/2018/07/16/summmer/</id>
    <published>2018-07-16T04:52:27.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Forgetable-Knowledge-Records-Recently-Updated"><a href="#Forgetable-Knowledge-Records-Recently-Updated" class="headerlink" title="Forgetable Knowledge Records Recently (Updated)"></a>Forgetable Knowledge Records Recently (Updated)</h1><blockquote><p>Finish Simple Linear Matrix Operation with MPI/CUDA/OpenMP in C (C++ is too hard!!!)<br><a href="https://github.com/fish98/C-programing/tree/master/SCT_summer">Source Code</a></p></blockquote><ul><li>正在好好考虑需不需要解析一个一个子域名… 好像阿里云域名要到期了来着 /思考</li><li><strong>魚は最近少し怠けるですか？</strong></li></ul><a id="more"></a><hr><h1 id="SCT-Summer-Tasks-And-Notes"><a href="#SCT-Summer-Tasks-And-Notes" class="headerlink" title="SCT Summer Tasks And Notes"></a>SCT Summer Tasks And Notes</h1><h2 id="MakeFile"><a href="#MakeFile" class="headerlink" title="MakeFile"></a>MakeFile</h2><p>File used for compile codes</p><p>A not good makefile for MPI =&gt; </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">matrix.o : matrix.h</span><br><span class="line">truempicc matrix.c -c -lm  </span><br><span class="line">truemake main</span><br><span class="line">main : main.c matrix.o</span><br><span class="line">truempicc main.c matrix.o -o main -lm -O2 -march=native</span><br><span class="line">true<span class="built_in">echo</span> -e <span class="string">"\nExcute main to Start\n"</span></span><br><span class="line">truerm matrix.o</span><br><span class="line">clean: </span><br><span class="line">truerm main</span><br></pre></td></tr></table></figure><ul><li>The makefile usually contain the Pseudo-class(like clean or install) </li><li>the privilege can be modefied due to the compile dependency</li><li>gcc compile optimitation (Further Deeper…)</li></ul><h2 id="Basic-Linear-Matrix-Operation-in-C"><a href="#Basic-Linear-Matrix-Operation-in-C" class="headerlink" title="Basic Linear Matrix Operation in C"></a>Basic Linear Matrix Operation in C</h2><p>Use new Struct for storing Matirx<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">matrix</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> *data;</span><br><span class="line">    <span class="keyword">int</span> row;</span><br><span class="line">    <span class="keyword">int</span> col;</span><br><span class="line">&#125; Matrix;</span><br></pre></td></tr></table></figure></p><p>Then we just need to set All the date into the one dim data pointer.</p><ul><li><strong>Segment Fault Warnning</strong> Plaese check if data is well malloced ！</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initMatrix</span><span class="params">(Matrix * M)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Scan the number and set into the Matrix(the first two are column and row integer)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadMatrix</span><span class="params">(<span class="keyword">char</span>* Filename, Matrix * M)</span></span>; <span class="comment">// Read the Matrix file while the two first integers are column and row</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddMatrix</span><span class="params">(Matrix * M1, Matrix * M2, Matrix * M3)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintMatrix</span><span class="params">(Matrix * M)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Print the Matrix out </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MiltiplyMatrix</span><span class="params">(Matrix * M1, Matrix * M2, Matrix * M3)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FunctionMatrix</span><span class="params">(Matrix * M1, Matrix * M3)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MemberWise the Matrix and make function(x) for every element in the Matrix</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TransposeMatrix</span><span class="params">(Matrix * M)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="MPI-for-Multi-process-Tasks"><a href="#MPI-for-Multi-process-Tasks" class="headerlink" title="MPI for Multi-process Tasks"></a><a href="https://www.open-mpi.org/doc/">MPI for Multi-process Tasks</a></h2><ul><li><code>#include &lt;mpi.h&gt;</code></li></ul><p><img src="/2018/07/16/summmer/mpi.jpg"></p><p>Open MPI is A High Performance Message Passing Library for multi-process Tasks.</p><ul><li>Some Simple Commands</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ lscpu  // check <span class="keyword">for</span> cpu details and check the number of the cores</span><br><span class="line">$ mpicc xxx.c -o xxx                // hostfile is the details of your machine </span><br><span class="line">$ mpirun xxx --hostfile xxx -np x   //the np equals the number of the processes you want to use</span><br></pre></td></tr></table></figure><ul><li>Conclusion =&gt; </li></ul><ul><li>MPI IS Just A Piece Of %*&amp;#$?</li><li>For every process, cut the Matrix and send the data for calculation (MPI_SCATTER)</li><li>Gather the data back with MPI_GATHER</li><li>int MPI_Barrier(MPI_Comm_World) Useful and Tricky</li><li><strong>Use the provided functions by MPI as little as possible for better performace!!!</strong></li></ul><h2 id="CUDA-amp-amp-Nvidia"><a href="#CUDA-amp-amp-Nvidia" class="headerlink" title="CUDA &amp;&amp; Nvidia"></a><a href="https://docs.nvidia.com/cuda/">CUDA &amp;&amp; Nvidia</a></h2><p><img src="/2018/07/16/summmer/cuda.png"></p><p>Well, the speed of GPU is much faster than CPUs. The Multi-Threads Programming is also much comfortable than MPI. </p><p>Some Simple Commands</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvidia-smi // check the gpu status (Not correct but useful)</span><br><span class="line">$ nvcc xxx.cu -o xxx</span><br></pre></td></tr></table></figure><p>Simply run the code with gpu running</p><ul><li>A lot of Things with CUDA</li></ul><ul><li>the <code>blocks</code>, <code>threads</code> and <code>grids</code>!!! </li><li><code>__global__</code> and <code>__host__</code> functions calling in different situation </li><li>calling function is like <code>Function&lt;&lt;&lt;blocks, threads&gt;&gt;&gt;(a, b, c)</code> for GPU calculation</li><li><code>cudaMalloc((void**)&amp;GPU_data, sizeof(double) * area)</code> </li><li><code>cudaMemcpy(GPU_data, CPU-&gt;data, sizeof(double) * area, cudaMemcpyHostToDevice)</code></li><li><code>cudaDeviceReset()</code> is Really important and do not forget to free the memory on the GPU! </li></ul><h2 id="OpenMP-Optimization"><a href="#OpenMP-Optimization" class="headerlink" title="OpenMP Optimization"></a><a href="https://www.openmp.org/">OpenMP Optimization</a></h2><ul><li><code>#include &lt;omp.h&gt;</code></li></ul><p><img src="/2018/07/16/summmer/openmp.jpg"></p><p>Well designed multi-threads optimization tool(Comfortable to write)</p><ul><li><code>#pragma omp parallel for num_threads(MAX_T)</code> deal with for loops and distribute threads</li></ul><h1 id="Warnning-of-above"><a href="#Warnning-of-above" class="headerlink" title="Warnning of above"></a>Warnning of above</h1><ul><li><p>The gcc tool for version over 8.3.1 will not include math.h while compiling. Should add <code>-ld</code> for inclusion. </p></li><li><p>gcc compile parameter ： optimization O[1-3] -march or other options</p></li><li><p>The time.h in C Standard Library =&gt; <code>typeof time_t</code> is unsigned long or long. SO the minus of the start and the final should be type trasnformed first </p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">time_t</span> start, final;</span><br><span class="line"><span class="keyword">double</span> time;</span><br><span class="line"></span><br><span class="line">start = clock();</span><br><span class="line"></span><br><span class="line">...functions...</span><br><span class="line"></span><br><span class="line">final = clock();</span><br><span class="line"><span class="comment">// get time by seconds</span></span><br><span class="line">time = (<span class="keyword">double</span>)(final - start)/<span class="number">1000</span></span><br></pre></td></tr></table></figure><p><img src="/2018/07/16/summmer/spc.png"></p><h1 id="Notes-from-Mr-gg"><a href="#Notes-from-Mr-gg" class="headerlink" title="Notes from Mr.gg"></a>Notes from Mr.gg</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">RISC</span><br><span class="line">CISC</span><br><span class="line">SIMD</span><br><span class="line">SIMT</span><br><span class="line"></span><br><span class="line">rax eax ax ah al </span><br><span class="line">rbx</span><br><span class="line">rcx </span><br><span class="line">rdx </span><br><span class="line"></span><br><span class="line">rdi    string </span><br><span class="line">rsi </span><br><span class="line"></span><br><span class="line">cs     16* </span><br><span class="line">ds</span><br><span class="line">es    </span><br><span class="line">fs </span><br><span class="line">gs </span><br><span class="line">ss</span><br><span class="line">cr0~ce3</span><br><span class="line">r8~r15 </span><br><span class="line"></span><br><span class="line">MMX</span><br><span class="line">SSE</span><br><span class="line">AVX </span><br><span class="line"></span><br><span class="line">rbp</span><br><span class="line">rsp</span><br><span class="line">ring kernel mode</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Forgetable-Knowledge-Records-Recently-Updated&quot;&gt;&lt;a href=&quot;#Forgetable-Knowledge-Records-Recently-Updated&quot; class=&quot;headerlink&quot; title=&quot;Forgetable Knowledge Records Recently (Updated)&quot;&gt;&lt;/a&gt;Forgetable Knowledge Records Recently (Updated)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Finish Simple Linear Matrix Operation with MPI/CUDA/OpenMP in C (C++ is too hard!!!)&lt;br&gt;&lt;a href=&quot;https://github.com/fish98/C-programing/tree/master/SCT_summer&quot;&gt;Source Code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;正在好好考虑需不需要解析一个一个子域名… 好像阿里云域名要到期了来着 /思考&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;魚は最近少し怠けるですか？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Review" scheme="http://yoursite.com/tags/Review/"/>
    
      <category term="SCT" scheme="http://yoursite.com/tags/SCT/"/>
    
  </entry>
  
  <entry>
    <title>Switch backEnd &amp;&amp; Wechat Applet</title>
    <link href="http://yoursite.com/2018/06/12/6-12/"/>
    <id>http://yoursite.com/2018/06/12/6-12/</id>
    <published>2018-06-12T01:13:01.000Z</published>
    <updated>2019-01-23T22:04:58.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Review-for-the-Bugs-created-last-week"><a href="#Review-for-the-Bugs-created-last-week" class="headerlink" title="Review for the Bugs created last week"></a>Review for the Bugs created last week</h1><blockquote><ul><li>QSC management training project </li><li>Wechat Applets for competition</li><li>Plan for futher develpment</li></ul></blockquote><p><img src="/2018/06/12/6-12/wechat.jpg"></p><a id="more"></a><p>Finish 2018 QSC Graduation Project with 3 fontEnd Project and 4 “Swith” backEnd.<br>Half finish Wechat Applets compitition task (based on designer contribution@Maphilius)<br>Well, the response can be not that satisfying<br>A week without sleep can be not bareable.</p><p><img src="/2018/06/12/6-12/sleep.jpg"></p><h1 id="QSC-Project"><a href="#QSC-Project" class="headerlink" title="QSC Project"></a>QSC Project</h1><h2 id="For-frontEnd"><a href="#For-frontEnd" class="headerlink" title="For frontEnd"></a>For frontEnd</h2><p>前端遇到了几个小坑 虽然之前都遇到过：</p><ul><li>部署项目的时候 create-react-app不支持相对路径 需要更改成绝对路径（以后还是自己写webpack靠谱 </li><li>实现<code>：hover</code>伪类的时候 需要使用奇技淫巧 以后再写文章讨论（自己手写监听函数也行</li><li>小型项目的react并不是很理想 以后考虑其他框架或者裸写 </li></ul><h2 id="For-backEnd"><a href="#For-backEnd" class="headerlink" title="For backEnd"></a>For backEnd</h2><p>At least finish the basic requirement while the vote system broke down because the backEnd do not support break-point reconnection protection and the database storage feature. The backEnd is total a “swifter” for simple socket messages. The concept should be build that the backEnd should contain router and get the logical storage center. PLease do not make your backEnd a swift again</p><p><img src="/2018/06/12/6-12/switch.jpg"></p><p>注册Reduis PUB/SUB 服务 并做数据储存处理 （ttfish不是很适合写后端</p><p><strong>Mark :</strong> <code>ws.clients.forEach</code> 是否可以找到每一个用户的uuid? </p><h1 id="Wechat-Applet"><a href="#Wechat-Applet" class="headerlink" title="Wechat Applet"></a>Wechat Applet</h1><p>这个锅是逃不掉的 毕竟已经在老师面前夸下了海口（所以你到底在干嘛TTfish？！） 周五完成了QSC潮毕项目,周日晚上12时需要上交小程序，强忍微信没有人性的api极限操作 最后完成一个假的小程序（逃 还是总结一下小程序的注意事项吧 下次注意（没有下一次了！</p><p>微信小程序的组件库非常的少 但是还是应该试用一下 至少熟悉一下怎么填写配置文件</p><p>json中的配置文件与组件的属性并不是一一对应的 不必浪费时间（我真傻 真的</p><h2 id="使用WEPY-会有相对能忍受的开发体验-你怎么回事？"><a href="#使用WEPY-会有相对能忍受的开发体验-你怎么回事？" class="headerlink" title="使用WEPY 会有相对能忍受的开发体验 (你怎么回事？"></a>使用WEPY 会有相对能忍受的开发体验 (你怎么回事？</h2><p>对于<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;&#125;&#125;"</span></span><br></pre></td></tr></table></figure></p><p>之类的使用 所有都是字符串限制作用域并使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>调用Page中的Data的数据（千万要在Data中 假装是React.State</p><p>剩下的以后再说（以后最好不说了</p><h1 id="Remember"><a href="#Remember" class="headerlink" title="Remember"></a>Remember</h1><ul><li><strong>Do not type ‘wx’ as ‘ws’!!!</strong></li><li><strong>Do not write Wechat Applet Again!!!</strong></li></ul><h1 id="Add-上传本篇post时-如果md文件存在双括号会报错！！！"><a href="#Add-上传本篇post时-如果md文件存在双括号会报错！！！" class="headerlink" title="Add : 上传本篇post时 如果md文件存在双括号会报错！！！"></a>Add : 上传本篇post时 如果md文件存在双括号会报错！！！</h1><h1 id="Add-TItle-出现冒号会显示报错"><a href="#Add-TItle-出现冒号会显示报错" class="headerlink" title="Add : TItle 出现冒号会显示报错~"></a>Add : TItle 出现冒号会显示报错~</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Review-for-the-Bugs-created-last-week&quot;&gt;&lt;a href=&quot;#Review-for-the-Bugs-created-last-week&quot; class=&quot;headerlink&quot; title=&quot;Review for the Bugs created last week&quot;&gt;&lt;/a&gt;Review for the Bugs created last week&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;QSC management training project &lt;/li&gt;
&lt;li&gt;Wechat Applets for competition&lt;/li&gt;
&lt;li&gt;Plan for futher develpment&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2018/06/12/6-12/wechat.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
      <category term="Stack" scheme="http://yoursite.com/tags/Stack/"/>
    
  </entry>
  
  <entry>
    <title>Summary for Full Stack Project(I)</title>
    <link href="http://yoursite.com/2018/05/17/stack/"/>
    <id>http://yoursite.com/2018/05/17/stack/</id>
    <published>2018-05-17T07:52:22.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Review-for-Bilding-A-Simplest-Full-Stack-Project-FrontEnd"><a href="#Review-for-Bilding-A-Simplest-Full-Stack-Project-FrontEnd" class="headerlink" title="Review for Bilding A Simplest Full Stack Project(FrontEnd)"></a>Review for Bilding A Simplest Full Stack Project(FrontEnd)</h1><p>项目地址: <a href="https://github.com/fish98/journey">Journey</a></p><p>这次犯了大错误 把后端放在Host branch了 糟糕的工程习惯 下次一定要将他们分开repo</p><p>For full stack projects, the basic components are frontEnd for display, backEnd for process and a Database for storage. We all know that information transfering in the network contain dozens of requests and responses. Based on different protocols, we are able to connect and enjoy Internet. Through different requests and responses, We are able to get a project alive.</p><p>Ah, Seems a little away from the topic~~No problem!</p><blockquote><p>Create a simple frontEnd with <a href="https://github.com/facebook/create-react-app">Create-react-App</a></p></blockquote><blockquote><p>Create a simple backEnd with <a href="https://koajs.com/">Koa.js</a></p></blockquote><blockquote><p>Create a simple dataBase with <a href="https://mariadb.com/">mariadb</a></p></blockquote><blockquote><p>这篇主要总结前端踩到的坑 附赠征文系统的主题 自由的鸡</p></blockquote><p><img src="/2018/05/17/stack/thumbnail.png"></p><a id="more"></a><h2 id="About-the-Project"><a href="#About-the-Project" class="headerlink" title="About the Project"></a>About the Project</h2><p>本次项目是实现在线征文上传系统 说白了是富文本编辑 需求非常的简单 对于数据库的操作也只需要INSERT即可 整体业务逻辑就是 前端发送请求到后端 后端收到信息 并发送至数据库存储起来 就这样 没有了 没有了 没有了</p><h2 id="Front-End"><a href="#Front-End" class="headerlink" title="Front End"></a>Front End</h2><p>Create-react-app 是一个非常方便的集成开发包 package都帮你配好了 直接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install create-react-app</span><br><span class="line">$ npm start</span><br></pre></td></tr></table></figure></p><p>就可以使用 查看demo<br>当然 在安装了serve以后 可以<code>serve -s build</code>开启局域网服务(又扯远了)</p><p>Braft-Editor 非常良心的富文本编辑开源库 对于富文本编辑的支持非常的详细 省了不少力</p><h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><h3 id="对于JSX的CSS设置"><a href="#对于JSX的CSS设置" class="headerlink" title="对于JSX的CSS设置"></a>对于JSX的CSS设置</h3><ul><li>在标签中嵌入属性 需要应用驼峰命名法 例如 <code>className</code> <code>onClick</code></li><li>在设置 <code>outline: none</code>和<code>border: 0px 0px</code>的冲突</li><li>对于<code>position: relative</code>的相对设置 以及危险的<code>absolute</code></li><li><strong>移动端的css设定</strong>: 对于这个棘手的问题 我的解决方法是</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isMobile = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.innerWidth &lt;= <span class="number">600</span>)&#123;</span><br><span class="line">    isMobile = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非常不优雅的解决方式 但是将这个设置进入state更是一件丢人的事 更好的解决方法应该是使用css的Media Query 然后再糊一些stylus 这边偷懒了… (并不想写CSS)</p><p>对于判别完的CSS进行了三目表达式操作 感觉应该优化</p><h3 id="Bind事件函数"><a href="#Bind事件函数" class="headerlink" title="Bind事件函数"></a>Bind事件函数</h3><p>在设置<code>this</code>的触发函数时 不能忘了添加<code>bind</code><br>例如:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.sendRequest = <span class="keyword">this</span>.sendRequest.bind(<span class="keyword">this</span>)</span><br></pre></td></tr></table></figure></p><h3 id="React组件化"><a href="#React组件化" class="headerlink" title="React组件化"></a>React组件化</h3><p>这次实现了将Footer和Input进行了组件化处理 尽量减少全局变量的使用 (毕竟是LVVM)<br>具体还有坑 以后再补充</p><h3 id="对后端的通信"><a href="#对后端的通信" class="headerlink" title="对后端的通信"></a>对后端的通信</h3><p>这里就要提一下 对于Braft Editor 官方Doc里虽然很详细 但是使用原生XML Request写的 用起来不是很舒服 也不能await. 于是这里用了Fetch(用法详细参照前几篇关于爬虫的post) 还是挺好的 之后就是 POST request至后端 关于Media图片上传的坑: </p><ul><li>后端需要运行Nginx 并且在/etc/nginx.conf中进行修改 才能实现图片上传<br>这里是一个大坑 对于执行的root可能不允许超级管理员访问 于是暴力的将配置文件中的用户强行改成了当前用户fish </li></ul><p>上传图片：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">uploadFn = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> formData = <span class="keyword">new</span> FormData()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> name <span class="keyword">in</span> param) &#123;</span><br><span class="line">    formData.append(name, param[name]);</span><br><span class="line">&#125;</span><br><span class="line">    fetch(<span class="string">`<span class="subst">$&#123;config.url&#125;</span><span class="subst">$&#123;config.imagePort&#125;</span>`</span>, &#123;</span><br><span class="line">        method: <span class="string">'POST'</span>,</span><br><span class="line">        body: formData</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">        <span class="keyword">if</span>(res.status === <span class="number">200</span>)&#123;</span><br><span class="line">        successFn(res)</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        errorFn(res)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> successFn = <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">      response.json().then(<span class="function"><span class="params">txt</span> =&gt;</span> &#123;</span><br><span class="line">        param.success(&#123;</span><br><span class="line">            url: <span class="string">`http://localhost/<span class="subst">$&#123;txt&#125;</span>`</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="number">2000</span>)</span><br><span class="line">        windows.location = config.navSite</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> progressFn = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">        param.progress(event.loaded / event.total * <span class="number">100</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> errorFn = <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        alert(<span class="string">"error"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>非常粗略的重现了一下 大致是这样的逻辑</p><ul><li>图片上传失败会导致资料库无法添加 而对于Braft-Editor的数据获取 就是在editorProps里的content(和RawContent相应)</li></ul><p>最后总结前端架构: 整个项目时间消耗太多 而且并不美观 希望能更熟练使用CSS 对于平面页面的设计 能够更好</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Review-for-Bilding-A-Simplest-Full-Stack-Project-FrontEnd&quot;&gt;&lt;a href=&quot;#Review-for-Bilding-A-Simplest-Full-Stack-Project-FrontEnd&quot; class=&quot;headerlink&quot; title=&quot;Review for Bilding A Simplest Full Stack Project(FrontEnd)&quot;&gt;&lt;/a&gt;Review for Bilding A Simplest Full Stack Project(FrontEnd)&lt;/h1&gt;&lt;p&gt;项目地址: &lt;a href=&quot;https://github.com/fish98/journey&quot;&gt;Journey&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这次犯了大错误 把后端放在Host branch了 糟糕的工程习惯 下次一定要将他们分开repo&lt;/p&gt;
&lt;p&gt;For full stack projects, the basic components are frontEnd for display, backEnd for process and a Database for storage. We all know that information transfering in the network contain dozens of requests and responses. Based on different protocols, we are able to connect and enjoy Internet. Through different requests and responses, We are able to get a project alive.&lt;/p&gt;
&lt;p&gt;Ah, Seems a little away from the topic~~No problem!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a simple frontEnd with &lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create-react-App&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a simple backEnd with &lt;a href=&quot;https://koajs.com/&quot;&gt;Koa.js&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a simple dataBase with &lt;a href=&quot;https://mariadb.com/&quot;&gt;mariadb&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这篇主要总结前端踩到的坑 附赠征文系统的主题 自由的鸡&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2018/05/17/stack/thumbnail.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
      <category term="Stack" scheme="http://yoursite.com/tags/Stack/"/>
    
  </entry>
  
  <entry>
    <title>Network Note</title>
    <link href="http://yoursite.com/2018/05/08/5-8/"/>
    <id>http://yoursite.com/2018/05/08/5-8/</id>
    <published>2018-05-08T00:31:18.000Z</published>
    <updated>2019-01-23T22:04:58.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Daily-Note"><a href="#Daily-Note" class="headerlink" title="Daily Note"></a>Daily Note</h1><h2 id="Netstat"><a href="#Netstat" class="headerlink" title="Netstat"></a>Netstat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ netstat</span><br><span class="line">-a : All Ports</span><br><span class="line">-at : TCP Ports</span><br><span class="line">-au : UDP Ports</span><br><span class="line">-l : List Listened Ports</span><br><span class="line">-p : List PID &amp;&amp; Name</span><br><span class="line">-ie : Network List </span><br><span class="line">-s : Statistic Data</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="TCP-amp-amp-UDP"><a href="#TCP-amp-amp-UDP" class="headerlink" title="TCP &amp;&amp; UDP"></a>TCP &amp;&amp; UDP</h2><p>TCP: 三次握手 connect() (Stream Type)<br>     ACK ACKnum SYN seq<br>     close() 四次挥手<br>     FIN seq</p><pre><code> 优化: KeepAlive =&gt; avoid half-connection usage waste send package to check whether the connection is alive Disadvantage: - More useless wlan transition               - Fail when process unit is 100%优化： 超时重传、累计重传 SYN攻击(Netstat 检测)</code></pre><p>UDP: 不可靠的文件传输协议 (报文 长度Limit)<br>     拥塞不支持<br>     假的校验头<br>     数据不备份<br>     无连接</p><pre><code>But =&gt; 速度快 方便 容错(TFTP)</code></pre><p>优化： DCCP</p><h2 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lsof</span><br></pre></td></tr></table></figure><p>-u: search for user</p><p>-attach with files(exp. /bin/bash)</p><p>-c $argv === | grep $argv</p><p>-i network list</p><p>-n nfs files list</p><h2 id="Linux-environment-path-and-stat-command"><a href="#Linux-environment-path-and-stat-command" class="headerlink" title="Linux environment path and stat command"></a>Linux environment path and stat command</h2><p>All the command can be run in the terminal must be registed in the environment path.</p><p>use nlof to get back rm-ed files seems unpromising…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Daily-Note&quot;&gt;&lt;a href=&quot;#Daily-Note&quot; class=&quot;headerlink&quot; title=&quot;Daily Note&quot;&gt;&lt;/a&gt;Daily Note&lt;/h1&gt;&lt;h2 id=&quot;Netstat&quot;&gt;&lt;a href=&quot;#Netstat&quot; class=&quot;headerlink&quot; title=&quot;Netstat&quot;&gt;&lt;/a&gt;Netstat&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ netstat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-a : All Ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-at : TCP Ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-au : UDP Ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-l : List Listened Ports&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-p : List PID &amp;amp;&amp;amp; Name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-ie : Network List &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-s : Statistic Data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>SuperComputer Basic Attempt &amp;&amp; Linux Terminal Tests</title>
    <link href="http://yoursite.com/2018/05/06/spc/"/>
    <id>http://yoursite.com/2018/05/06/spc/</id>
    <published>2018-05-06T14:08:20.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Problems-Appeared-On-The-Cluster-These-Days"><a href="#Problems-Appeared-On-The-Cluster-These-Days" class="headerlink" title="Problems Appeared On The Cluster These Days"></a>Problems Appeared On The Cluster These Days</h1><blockquote><ul><li>近几日在南昌进行ASC2018比赛 学校内的集群暂时交由TTfish维护 遇到了不少问题 先把锅放在这里 以后希望能补充解决</li></ul></blockquote><blockquote><ul><li>关于Linux Terminal操作的一些尝试</li></ul></blockquote><p><img src="/2018/05/06/spc/haha.jpg"></p><a id="more"></a><h2 id="ASC2018"><a href="#ASC2018" class="headerlink" title="ASC2018"></a>ASC2018</h2><p>“著名开机员” TTfish(<s>丢人</s>) 遇到的问题:</p><ul><li>浪潮倚天超级计算机的开机系统问题 </li><li>NFS 长时间挂起导致睡眠 (事实证明随时可能挂) 系统卡死情况</li></ul><p>NFS(Network File System) 良心的开源分布式文件系统协议 支持不同系统的文件共享 当然维护是一件非常令人难受的事情(还好现在不是我) </p><p><strong>NFS数据传输为明文</strong><br><strong>性能 速度有限</strong></p><h3 id="ps-关于-Lasture-amp-amp-GPFS的学习-备忘"><a href="#ps-关于-Lasture-amp-amp-GPFS的学习-备忘" class="headerlink" title="ps.关于 Lasture &amp;&amp; GPFS的学习 (备忘)"></a>ps.关于 Lasture &amp;&amp; GPFS的学习 (备忘)</h3><p><a href="https://www.centos.org/forums/viewtopic.php?t=54405">Problem Discuss</a></p><p><img src="/2018/05/06/spc/error.jpg"></p><p>查询后 得知设置auto mount似乎可以解决问题 但是 这也是以后再尝试的事情了 </p><p>另外 在浪潮倚天super00的启动中 需要在boot manager中选择正确的启动盘 不然会报错而不断重启 </p><p> <em>吐槽倚天超级计算机 戴上3M-105 还是吵到头疼 风扇很给力 但是整个机器拆装不易 又重又麻烦 网卡在风口 早上松动 中午完全掉下来 太不稳了</em></p><h2 id="Linux-Terminal-Tests"><a href="#Linux-Terminal-Tests" class="headerlink" title="Linux Terminal Tests"></a>Linux Terminal Tests</h2><p>农生环的集群今日遭到黑客袭击 种了个马 帮忙挖矿 还顺带删除History 只能查到肉鸡的ip</p><p>私底下思考 获得root权限可以为所欲为 而删除历史记录 可能有更佳的操作方式</p><p>备注： 查看Linux使用记录 Log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /var/<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>查看ssh登陆记录 需要<code>sudo less secure</code></p><p>而其他记录 都可以较为方便找到 </p><p>而对于”隐身”操作Linux系统 可以</p><ul><li>输入空格 再操作命令<br>当然前提是 环境变量是正确的 </li></ul><p><code>export HISTCONTROL = ignorespace</code></p><p>一般应该是OK的</p><pre><code class="bash">$  [space]******</code></pre><ul><li>关闭当前会话历史记录</li></ul><p><code>export HISTSIZE=0</code></p><ul><li>工作结束后清除整个历史</li></ul><p><code>history -cw</code></p><p><strong>在不同的shell中 history是不同的储存 例如fish中执行<code>type history</code>可以发现是一个fish函数 而在bash中 就显示是buildin命令 <code>man</code>一下也是不一样的</strong></p><ul><li>只针对你的工作关闭历史记录</li></ul><p><code>[space]set +o history</code></p><p>同理 重新设定就是</p><p><code>[space]set -o history</code></p><ul><li>每一个history前都有标号 只要执行<code>history -d $argv</code> 就可以删除指定的命令</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Problems-Appeared-On-The-Cluster-These-Days&quot;&gt;&lt;a href=&quot;#Problems-Appeared-On-The-Cluster-These-Days&quot; class=&quot;headerlink&quot; title=&quot;Problems Appeared On The Cluster These Days&quot;&gt;&lt;/a&gt;Problems Appeared On The Cluster These Days&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;近几日在南昌进行ASC2018比赛 学校内的集群暂时交由TTfish维护 遇到了不少问题 先把锅放在这里 以后希望能补充解决&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;关于Linux Terminal操作的一些尝试&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2018/05/06/spc/haha.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="SCT" scheme="http://yoursite.com/tags/SCT/"/>
    
  </entry>
  
  <entry>
    <title>NodeSpider2</title>
    <link href="http://yoursite.com/2018/04/11/NodeSpider2/"/>
    <id>http://yoursite.com/2018/04/11/NodeSpider2/</id>
    <published>2018-04-11T14:27:54.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-Spider-Finish-！！！"><a href="#Node-Spider-Finish-！！！" class="headerlink" title="Node Spider Finish ！！！"></a>Node Spider Finish ！！！</h1><p>Source Code: <a href="https://github.com/fish98/NodeSpider_classrooms">https://github.com/fish98/NodeSpider_classrooms</a></p><p>对于这次工程的反思 最大问题的就是对于纯函数的使用缺失 在工程实现的一开始 使用了太多的全局变量 导致在最后的调试和函数合并的时候出现了一些不优雅的地方 这以后一定要改 函数尽量写成纯函数 或者科里化 </p><p>本次主要延续上一次的话题 稍微深入的扯几句</p><p><img src="/2018/04/11/NodeSpider2/promise.png"></p><a id="more"></a><hr><p>上次讲到最简单的爬虫 因为爬虫就是对于网站的请求 处理返回response和解析数据 那么 第一步的请求还是很重要的 像<a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch">Fetch</a>这样的钦定API就非常推荐使用 具体使用参见官方文档 不加赘述 而对于<a href="https://developer.mozilla.org/en-US/docs/Web/API/Request">Request</a> 与Fetch之间的互相调用 两者都是web内置的模块 在node.js中使用还是需要import </p><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>这个是个重点 非常的重要 对于Promise对象的调用 可以调用Promise.all()来维护一个队列</p><h2 id="拓展-对于用户验证FormData的教务网体验"><a href="#拓展-对于用户验证FormData的教务网体验" class="headerlink" title="拓展: 对于用户验证FormData的教务网体验"></a>拓展: 对于用户验证FormData的教务网体验</h2><h2 id="拓展-对于用户登陆的Cookie的Piviv的尝试"><a href="#拓展-对于用户登陆的Cookie的Piviv的尝试" class="headerlink" title="拓展: 对于用户登陆的Cookie的Piviv的尝试"></a>拓展: 对于用户登陆的Cookie的Piviv的尝试</h2><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>对于工程上的爬虫 实在是应该做成分布式的 或者多线程 添加算法来提高速度 以上对于Node简单的尝试只是小打小闹 之后的博客 会尝试分布式爬虫 或者更大规模的试验 还有就是对于反爬虫的应对(ip封禁等等)</p><p><img src="/2018/04/11/NodeSpider2/ruri.gif"></p><p>以上 </p><p>玩的开心</p><p>说好的更新呢 ？这么几个字糊弄谁啊 ？!</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-Spider-Finish-！！！&quot;&gt;&lt;a href=&quot;#Node-Spider-Finish-！！！&quot; class=&quot;headerlink&quot; title=&quot;Node Spider Finish ！！！&quot;&gt;&lt;/a&gt;Node Spider Finish ！！！&lt;/h1&gt;&lt;p&gt;Source Code: &lt;a href=&quot;https://github.com/fish98/NodeSpider_classrooms&quot;&gt;https://github.com/fish98/NodeSpider_classrooms&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于这次工程的反思 最大问题的就是对于纯函数的使用缺失 在工程实现的一开始 使用了太多的全局变量 导致在最后的调试和函数合并的时候出现了一些不优雅的地方 这以后一定要改 函数尽量写成纯函数 或者科里化 &lt;/p&gt;
&lt;p&gt;本次主要延续上一次的话题 稍微深入的扯几句&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/04/11/NodeSpider2/promise.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Basic Node.js (Node Spider1)</title>
    <link href="http://yoursite.com/2018/04/06/NodeSpider/"/>
    <id>http://yoursite.com/2018/04/06/NodeSpider/</id>
    <published>2018-04-06T07:24:18.000Z</published>
    <updated>2019-01-23T22:04:58.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node的基础与Node-jsの爬虫-上"><a href="#Node的基础与Node-jsの爬虫-上" class="headerlink" title="Node的基础与Node.jsの爬虫(上)"></a>Node的基础与<s>Node.jsの爬虫(上)</s></h1><hr><p>说到爬虫，一般会先想到<a href="https://scrapy.org/">Scarpy</a>或者<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">BeautifulSoup</a>这样的python库 但是 当工程量比较小的时候 不需要像Scarpy这样的企业级分布式爬虫的时候 虽然TTfish非常的咸鱼 身为前端工程师 还是用Nodejs比较舒服(才没有表扬Node呢 口亨) 这篇blog主要总结一下之前的经验 尤其是对于学校教务网的探索心得(逃)</p><p><img src="/2018/04/06/NodeSpider/nodejs.png"></p><p>本文包括以下内容：</p><blockquote><ul><li>Nodejs的使用</li><li>NPM的简易操作</li><li>Node爬虫</li><li>Fetch 和 Promise请求队列</li><li>万恶的教务网!</li></ul></blockquote><p>TTfish自己都没想到会有这么多要写 一篇根本写不完 要不还是分开写吧….</p><a id="more"></a><hr><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p><a href="https://nodejs.org/en/docs/">Node.js</a>是一个基于 Chrome V8 引擎的 JavaScript 运行环境 Javasrcipt是一门动态类型，面向对象的解释型语言 和Java有相似之处 但是还是有很多的区别(明明叫Livescript 为了蹭Java热度才改的名) 人们发现将它即时编译有非常大的应用前景 于是就有了Node.js这样的前后端兼吃的环境 Node.js不支持多线程(<s>不像Python那样的假多线程</s>) 但是它是非阻塞的 支持并发(<s>不像世界上最好的语言</s>) 它是事件驱动的 带有优秀的npm 包管理器</p><p>要用Node.js写爬虫 首先得有node环境 </p><p><a href="https://nodejs.org/en/download/package-manager/">Download Node.js</a> 根据不同的操作系统下载并安装Node.js </p><p>安装好以后 无论在<code>Terminal / Konsole</code> 还是在 <code>cmd \ powershell</code>(可能需要允许环境变量) 中 都可以运行Node.js了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ node -v // 查看版本</span><br><span class="line">$ node   //运行node</span><br><span class="line">&gt; console.log(<span class="string">"hello ttfish!"</span>)  //相当于在Chrome里的Console状态</span><br></pre></td></tr></table></figure><p>简单的完成了<code>hello ttfish</code>的打印 如果需要用node执行以.js结尾的文件 只需要<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node ttfish.js</span><br></pre></td></tr></table></figure></p><p>这样简单的node环境就搭建完成了 一般会用server来实现nodejs的<code>hello world</code> 这里跳过</p><h2 id="NPM的简易使用"><a href="#NPM的简易使用" class="headerlink" title="NPM的简易使用"></a>NPM的简易使用</h2><p><a href="https://www.npmjs.com/">NPM</a>(Node Package Manager)是Node.js的包管理库 方便模块管理 就像PEAR-&gt;PHP一样的概念</p><p>下载Node的时候 其实已经把npm装好了 可以输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v // 查看版本</span><br></pre></td></tr></table></figure></p><p><img src="/2018/04/06/NodeSpider/kirino.gif"></p><p>对于npm最多的操作 就是<code>npm install</code>安装包 并在<code>js</code>文件中引用 但是 首先应该先初始化npm并生成<code>package.json</code> <strong><em> 这个是个坑 </em></strong> npm会根据package.json配置安装项 优秀的开源工程一般都只需要在<code>git clone</code>以后 一键<code>npm install</code>就安装完成所有的所需项 (就速度而言 推荐设置淘宝源)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$npm</span> init // 初始化 生成package.json  // 请认真填写！！ 不然会凉</span><br></pre></td></tr></table></figure><p>正常的话 会发现多了package.json文件 默认情况下 npm install的文件会保存在node_modules文件夹中</p><p>Node爬虫需要引入的包有许多 先写一个最简单的 ： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ttfish.js</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install cheerio // 一个自认为长的像jQuery就很厉害 其实比jQuery还猥琐的库 解析html作用</span><br><span class="line">$ npm install fetch  // 处理http请求</span><br></pre></td></tr></table></figure><p>(关于 -save和–save-dev的区别 请注意)</p><p>使用Fetch 简要的爬取zhihu首页html</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>)</span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">'node-fetch'</span>)</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">'https://www.zhihu.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 箭头函数的使用 还有好多能加的参数 具体参考官方文档 </span></span><br><span class="line"></span><br><span class="line">fetch(url， &#123;</span><br><span class="line">  method: POST,</span><br><span class="line">  header: &#123;</span><br><span class="line">    <span class="comment">// some Headers</span></span><br><span class="line">    &#125;</span><br><span class="line">  body: <span class="comment">// 假装有body</span></span><br><span class="line">    &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> res.text()) </span><br><span class="line">  .then(<span class="function"><span class="params">body</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> $ = cheerio.load(body)  <span class="comment">// 这里开始迷之cheerio 蜜汁jQuery既视感</span></span><br><span class="line">    $(<span class="string">'***'</span>).map(<span class="function">(<span class="params">i, item</span>) =&gt;</span> &#123;  <span class="comment">// 这里必须吐槽 这个map居然是需要将index作为第一个参数传入的！震惊.jpg</span></span><br><span class="line">    <span class="comment">// 假装要提取DOM元素进行操作</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="comment">// 以上只是框架 具体代码可以在我的Github上寻找</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node ttfish.js //运行即可</span><br></pre></td></tr></table></figure><p><a href="https://github.com/fish98/Spider">Github 源码</a></p><h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><p>向对象添加键值对的方法： A[b] = C  —踩坑已久<br>删除对象键值对： delete D.e<br>map forEach对于数组的操作 不作用于对象<br>对于FormData的append 不适用于一般对象</p><h2 id="假的小结"><a href="#假的小结" class="headerlink" title="假的小结"></a>假的小结</h2><p>先讲到这里吧 写不动 写不动 至少最简单的内模块Fetch可以使用了 当然 SuperAgent库也是没有问题的 爬虫的本质就是向服务端发送请求并对Response进行解析 Node.js写爬虫其实不是很稳 虽然写的爽 但是用起来不是很优雅 之前跑了3000张图片流爬虫 如果全部异步node就会炸 维持10个一组的队列勉勉强强跑了六组跑完了 感觉这样在python的情况下可能会更舒服 等下次再写Promise队列和教务网的爬虫 Promise真是个好东西 hhhh</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node的基础与Node-jsの爬虫-上&quot;&gt;&lt;a href=&quot;#Node的基础与Node-jsの爬虫-上&quot; class=&quot;headerlink&quot; title=&quot;Node的基础与Node.jsの爬虫(上)&quot;&gt;&lt;/a&gt;Node的基础与&lt;s&gt;Node.jsの爬虫(上)&lt;/s&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;说到爬虫，一般会先想到&lt;a href=&quot;https://scrapy.org/&quot;&gt;Scarpy&lt;/a&gt;或者&lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&quot;&gt;BeautifulSoup&lt;/a&gt;这样的python库 但是 当工程量比较小的时候 不需要像Scarpy这样的企业级分布式爬虫的时候 虽然TTfish非常的咸鱼 身为前端工程师 还是用Nodejs比较舒服(才没有表扬Node呢 口亨) 这篇blog主要总结一下之前的经验 尤其是对于学校教务网的探索心得(逃)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/04/06/NodeSpider/nodejs.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;本文包括以下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Nodejs的使用&lt;/li&gt;
&lt;li&gt;NPM的简易操作&lt;/li&gt;
&lt;li&gt;Node爬虫&lt;/li&gt;
&lt;li&gt;Fetch 和 Promise请求队列&lt;/li&gt;
&lt;li&gt;万恶的教务网!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;TTfish自己都没想到会有这么多要写 一篇根本写不完 要不还是分开写吧….&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://yoursite.com/tags/Tech/"/>
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
</feed>
