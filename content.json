{"meta":{"title":"TT Fish | On Sale","subtitle":"TTfish","description":"TTfish Blog Tech Hexo fish qsc","author":"TT Fish","url":"http://yoursite.com"},"pages":[{"title":"Machine Learning && Neural Networks","date":"2018-04-18T15:41:44.000Z","updated":"2018-11-19T08:27:32.630Z","comments":true,"path":"ML/index.html","permalink":"http://yoursite.com/ML/index.html","excerpt":"","text":"TTfish来瞎扯机器学习和神经网络TTfish学习神经网络还没多久，对于很多问题都还是一知半解的状态，还需要向薯米西西这样的专业炼丹师多多学习。前些日子有人问TTfish，机器学习和人工智能的区别到底是什么？其实这些概念堆积起来，有时候确实很令人头疼。TTfish今天主要介绍几个比较酷的机器学习框架，顺便浅浅的讲一下神经网络的科普知识。 记得在春纳的时候，有面试者对于人工智能非常的感兴趣，想必大家也很感兴趣罢。神经网络这个东西现在很热乎，并不像TTfish那么凉（虽然还有不是很见的了光的地方）。那么对于人工智能，其实可以想象成大鱼吃小鱼的游戏: 人工智能的定义非常的宽泛，从图灵机到深度学习都在人工智能的范围内，机器学习就是其中一种实现方式，机器学习算法会尝试优化一项特定的指标：它们一般会努力将预测的误差最小化，或者说将预测正确的概率最大化。而神经网络就是借鉴了生物学中神经元的概念，作为一种优化算法，更好的提高机器的学习效率和完成任务的能力。同时，深度学习是一个神经网络中神经层（Layer）的数量，浅层神经网络就只有一个隐藏层 整个神经网络的工作就是，建立在数据回馈和收集的过程中，生成属于自己的result向量(学习笔记) 然后之后就可以根据学习笔记 来考试 =&gt; 根据生成的预测函数等来进行数据处理 一层神经元一般来说 是不够的 需要多层进行线性或者非线性结合 拟合数据 层数多了，维数就上去了，这有好处也有坏处（过拟合等）有许多神经网络的框架，最常见的有RNN、CNN(开始吹.jpg) R-CNN 前馈型的修正 废话讲到这里 PlayGround 欢迎玩耍 一个可视化训练网站 简要讲一下有意思的前沿 关于YoloYOLO 华盛顿大学的大佬 非常神奇的论文风格 特立独行 非常厉害 论文: Box提取码: Yolo 链接有效: 5 days 关于 GANGenerative Adversarial Networks 论文: Box提取码: Gan 链接有效: 5 days 3篇论文 关于 TLDTLD 论文: Box提取码: TLD 链接有效: 5 days 关于 LyrebirdLyreBird 关于 顶级会议薯米现身说法 讲一讲CVPR与IJCAI、NIPS 和薯米的故事~~"},{"title":"Breif Introduction","date":"2018-04-13T14:28:54.000Z","updated":"2018-11-19T08:27:32.620Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Name: TT FishLocation: HangzhouGithub: TTFish 某三本大学某神奇专业の学生 一条咸鱼 懒 宅 重量级精神相扑专家 习惯放鸽 + 咸鱼 什么都想学 当然 无论什么都很凉呢"},{"title":"game","date":"2018-04-09T00:01:57.000Z","updated":"2018-11-19T08:27:32.620Z","comments":true,"path":"game/index.html","permalink":"http://yoursite.com/game/index.html","excerpt":"","text":""},{"title":"Share Area","date":"2018-04-13T13:42:09.000Z","updated":"2018-11-19T08:27:32.643Z","comments":true,"path":"share/index.html","permalink":"http://yoursite.com/share/index.html","excerpt":"","text":"A Image Downlaod Tool XDownloader Download Link v1.2Update on Nov. 5thDue to the demand of origin sized image when embeddig, add new feature for origin sized download option in config file check the usage in new T-UI feature and planning to migrate to electronic version with all platform packaged XDownloader v1.1Written in node.js but work not that sufficient. Will be transform into native electron recently Will be pack into npm package and publish recently Will support terminal config setting recently(With some dependencies) Why do you write this tool ?As we all know, to download manga from Ex sometimes can be difficult. First, the thread you want to download must contain a torrent resource. However, there are no torrent file shared anywhere in most cases. Moreover, the speed of the downloading torrent stream would be restricted by the number of the host providers nearby. Clearly, the speed is unpromising. So, why not just set a spider and pipe the images into the local dir which also reduces the time and space for zipped files. It’s much faster and much more convinient. Great apology to the website maintainer. Some Warnning The images download requires the pipe operation. So you must ensure your WLAN connection is stable and fast. IMPORTANT!!! especially when in origin mode The download process requests the cookie setting. So please be patient if the download process is not successful. Please get me alert so I can refresh the cookies Due to the website page design. Bugs exist when requiring page number is more than 10.Please Check Carefully When Downloading More Than 10 Pages! Please ! Please ! Select your view mode as normal size / huge size. Or, your download process can be painful. Usage DocPlease download this project in npmjs.org ! deleted three month ago… This project requires several dependencies cheerio fetch fs request I tried to use as few dependencies as possible. To Run this downloader12$ npm install $ npm start Please ensure you have Node.js environment on your computerOr you can download by yourself Also dont forget to change your config in config.jsYou can view your config status by typing: 1$ npm run fish then it will print out the present status of your download config Code Example =&gt; config.jsConfigure config.js 1234567891011module.exports = &#123; dir: 'xxxxxxx', url: `https://xxxxxxxxxx.org/g/xxxxxxxxx`, opt: false, origin: true, // new feature !! page: &#123; start: 1, end: 10 &#125;, viewMode: 'huge' &#125; You can set config and do some simple option dir : set all the images into the ./[dirname] (Create one if not exist) url : the url from the home page you want to download opt : set whether you want to download the selected page[default false] page : (if the opt is set to true) =&gt; set the download mission start page and the end page viewMode: select view mode as huge or normal origin: Download the original sized image instead of the zipped image displayed on the page(When aviliable) More Config Will Be Exported Out Soon Please have fun enjoying downloading and Take care of yourself :) LicenseThis project uses WTFPL License"},{"title":"白い龍のチュートリアル","date":"2018-11-12T09:00:10.000Z","updated":"2018-11-19T08:27:32.620Z","comments":true,"path":"dragon/index.html","permalink":"http://yoursite.com/dragon/index.html","excerpt":"The content has been encrypted, enter the password to read.","text":"あなたがパスワードを知りたいなら、魚さんとPYしてください Decrypt "},{"title":"Let's Start Our Web Develop Topic!","date":"2018-06-11T14:22:43.000Z","updated":"2018-11-19T08:27:32.626Z","comments":true,"path":"Learn/index.html","permalink":"http://yoursite.com/Learn/index.html","excerpt":"","text":"Day 00 From the Beginning我们开始讲一讲web开发吧 TTfish会在接下来的几篇post中 介绍一下Web前端（front End）和Web后端（back End） 当然我们会从头开始 也就是有很多的东西需要自己写出来 （例如现在已经没有人手写的网络请求…） 现在已经2018年了 这些复杂的东西已经有封装好的package 我们在实际开发中 只需要调用包装简便的package就可以加速我们的开发 但是 为了弄清楚他们到底是怎么运作的 我们在学习的时候不能偷懒 今天是第0天 TTfish会推荐进行开发的基本概念和思想 优秀的开发思想和习惯比代码更重要！ 无论是以后选择移动端开发（IOS\\Android）还是继续web开发 都是挺重要的东西呢 (。・∀・)ノ QSC的宗旨就是Leading the tide~ 我们尝试着世界上最新的计算机技术 实践最有创意的工程！ 如果遇到什么问题欢迎随时询问TTfish~TTfish可能不会直接回答你的问题但是会告诉你哪里能找到你的答案这个更重要呢(现任QSC站长对TTfish的谆谆教诲)Start from Web Pages我们平时看到的web page 一般都由三个大部分组成 HTML CSS JavaScript 其中每一个部分都有自己的语法，HTML包含着页面的元素(Elements) 通过CSS选择器 我们可以设置页面中每一个元素的样式（Style）而为了处理用户的操作，我们使用javascript（js）作为脚本（script）进行编程 我们可以在任何一个网页右键 选择检查（inspect）然后查看每一个元素 随便举一个例子 如果使用了Chrome的话 在extension store中有更多的小工具可以帮助开发 具体下次再说~ About Develop Environment那么 既然我们已经做好了进行web开发的准备（真的吗？） 我们的电脑是否做好了足够的准备呢？ 首先 需要一个文本编辑器或者集成开发环境（IDE） 用来编辑你的代码 推荐安装Visual Studio Code 这是一个文本编辑器 有非常优秀的extension可以安装 用来做网页开发足够了! Download and write your codes! 其次 我们需要找到一个自主学习的地方 我们在开发的过程中会遇到各种各样的问题 我们需要自己去寻找答案 有很多地方能够帮助我们 Google (毫无疑问是万能的老师 你能搜索到几乎所有你能够遇到的问题) StackOverflow (有许多有意思的问题都在上面得到了讨论) MDN (web developer的家 Mozilla基金会的web开发) Github (全球最大的同性交友网站 程序员的开源仓库 你可以找到各种各样的源代码和相关的issue) … 因为我们进行着开发 所以我们不可能指望所有的问题都能够被别人所解决 也不可能指望所有的技术都由老师教给我们 参与论坛的讨论 自我学习提高才是开发者应该做的事 Start our First Project说了那么多的啰嗦的话 我们可以考虑开始我们的第一个project了 第一个project 我们需要完成一个网页制作 我们平时在浏览器看到的网页 其实是我们的电脑 向我们希望能够访问的网页的服务器（server） 发送了一个请求（request） 我们的浏览器解析了对方的服务器发回的response 渲染（render）成为了我们看到的网页 这里我们需要HTML的帮助~ Let’s Write HTMLHTML是超文本标记语言 是我们和浏览器交流的语言 假设我们想告诉浏览器:”ttfish是一条鱼” 而浏览器往往需要知道更具体的信息 那么我们把名字标注出来 我们可以这样写 &lt;name&gt;ttfish&lt;/name&gt;是一条鱼 而如果浏览器需要得到更多信息 我们就不妨把更多信息告诉浏览器 我们就这样写 &lt;name&gt;tt&lt;species&gt;fish&lt;/species&gt;&lt;/name&gt;是一条鱼这样 浏览器就不仅知道了ttfish的name 更知道了ttfish的species是fish 例如 我们先来看一段代码 12345678910111213141516&lt;!DOCTYPE HTML&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt; TTFish &lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello Developer&lt;/h1&gt; &lt;p&gt;TTfish is on sale!&lt;/p&gt; &lt;div&gt; &lt;p&gt;ttfish is here&lt;/p&gt; &lt;a href=\"http://ttfish.top\"&gt;Click ME TO BUY&lt;/a&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 显示如下: 我们可以很开心的看到 有一些元素被渲染了出来我们可能很头疼 因为在源代码中看到了很多不认识的东西 &lt;!DOCTYPE HTML&gt; 这个不是标签 这一行告诉浏览器我们的文本格式是HTML html 这个是html文件最外层的标签 head 这里一般存放一些不显示在页面主体的代码块 body 这里存放着网页主题显示的内容 HTML 语法要求所有的标签都完好地闭合 请注意(￣▽￣)” &lt;div&gt;标签是一个非常重要的标签 我们可以把它理解为一个通用的容器 可以在div标签中 包含一些其他标签 并将这样的div看成一个块(block) 这样对于我们之后的调节CSS与大规模的项目开发有非常多的好处 HTML还有非常多的标签 比如: &lt;title&gt; 我们的网页的标题 一般放在&lt;header&gt;&lt;/header&gt;中 显示在浏览器的标签卡上 &lt;p&gt; 段落元素 用来存放文字 &lt;a&gt; 链接元素 &lt;img&gt; 图片元素 &lt;button&gt; 按钮元素 &lt;h1&gt; 一级标题 当然能猜到&lt;h2&gt;&lt;h3&gt;之类的标签是什么意思 每一个标签还可以有属于自己的属性（attribute） 例如&lt;a href=&quot;http://ttfish.top&quot; class=&quot;button&quot;&gt;Click ME TO BUY&lt;/a&gt; 表示”a”标签的”class”（类别）是”button” 链接地址是”ttfish.top” 标签中的文字是”Click ME TO BUY” 我们点击了链接标签 我们就会跳转到那个页面 具体关于html标签请查询MDN上的介绍~ 如果你之前就有编程基础 对于物理计算、粒子渲染有兴趣的话 可以看一下&lt;canvas&gt;标签 尝试手写一些简单的canvas Continue with CSS完成了之前的页面之后 我们是不是觉得少了些什么~ 嗯 我们没有设定样式（style） 所有的元素都非常”朴素”的排布在页面上 不好看 于是我们需要CSS的帮助来拯救我们的眼镜！ 在html页面中引入了css后 我们可以通过css选择器选中html中的元素（element） 并且设置它的style 使得它更加漂亮 o(￣▽￣)o 请自行查询如何在html中引入css文件 （有多种方法） hint: &lt;link&gt;/&lt;style&gt;/style=&quot;&quot; ... 12345678h1&#123; color: white; font-size: 72px;&#125;.button&#123; height: 30px; width: 80px;&#125; css选择器中 xx 选择了element name #xx选择了id name .xx 选择了class name 请自行Google css selector的相关知识~頑張ります! 有关于CSS 有非常多的属性 这里根本讲不完（有些你可能也不会遇到）而例如伪类（例如:hover属性 很有用） 可能使用很多请加油哦~~ Update on 6.28 CSS补充 在自行搜索HTML标签的时候 请注意在MDN上的标签建议 类似于&lt;font&gt;这样的标签已经被废弃 （前端的api变的比变天还快 对于页面元素布局的CSS 有一些比较常用 123456div&#123; position: relative/fixed/absolute....; display: inline/flex/block.....; margin: 0 0 0 0; padding: 0 0 0 0 ;&#125; 每一个属性都有各自适合的地方 用的多了就熟悉了~ 具体作用请自行查询MDN flex是一个不错的方法 Finally goes the Homework!讲了那么多 其实还没有涉及对于javascript的讲解 我们先夯实基础吧！ 那么我们有小小的作业了 （毕竟TTfish写了那么久 wuwuwu） 请实现一个 你觉得很漂亮的网页！这个作业不限时间 目的是熟悉html和css的操作！！！ 你可以实现一个自己的个人简历 也可以自己设计一份报名表单 如果你觉得TTfish的blog太丑陋了 你也可以做一个TTfish的主页的替换品 ~~ 实在没有什么想法的话 只能偷偷的去设计师网站Dribbble查找 （偷偷的！别让TTfish知道） 在写网页的时候 你一定会发现有一些想要实现的功能并不能用HTML和CSS来解决 请不要伤心 这就是javascript的作用所在了 下一课会好好讲一讲它~ 如果写完了小作业 你的心中有了一些想要开发的欲望【（欸？我是不是可以做一个xxx样的网页呢？）】这样的想法 请在评论中提出来呢 说不定是一个非常有价值的想法 每一个有创意有需求的想法都值得实现 总之 请加油哦！！！"}],"posts":[{"title":"High-temperature Superconductivity Data","slug":"superconduct","date":"2018-11-26T11:28:18.000Z","updated":"2018-12-04T02:34:28.020Z","comments":true,"path":"2018/11/26/superconduct/","link":"","permalink":"http://yoursite.com/2018/11/26/superconduct/","excerpt":"前些日子查詢了CRC Handbook of Chemistry and Physics上的物理化學數據 這裏存一下主要的高溫超導體和有機超導體的Tc值 忽然想起了高中的時候在玉泉做高溫超導體的科研 沒能作出什麼成果真的很可惜 但是TTfish仍然堅信凝聚態物理的未來離開不了超導體 無論是量子計算機(小時候做的夢)還是常溫超導體 高分子超導體 肯定會有突破點 肯定會有一天超導體研究實現突破","text":"前些日子查詢了CRC Handbook of Chemistry and Physics上的物理化學數據 這裏存一下主要的高溫超導體和有機超導體的Tc值 忽然想起了高中的時候在玉泉做高溫超導體的科研 沒能作出什麼成果真的很可惜 但是TTfish仍然堅信凝聚態物理的未來離開不了超導體 無論是量子計算機(小時候做的夢)還是常溫超導體 高分子超導體 肯定會有突破點 肯定會有一天超導體研究實現突破 因爲可能還要進行學習 存儲一下 高温超导体 超導材料 結構性質 臨界溫度 Tc/K La2CuO4+δ Bmab; a = 5.355, b = 5.401, c = 13.15 Å 39 La2-xSrx(Bax)CuO4 I4/mmm; a = 3.779, c = 13.23 Å 35 La2Ca1-xSrxCu2O6 I4/mmm; a = 3.825, c = 19.42 Å 60 YBa2Cu3O7 Pmmm; a = 3.821, b = 3.885, c = 11.676 Å 93 YBa2Cu4O8 Ammm; a = 3.84, b = 3.87, c = 27.24 Å 80 Y2Ba4Cu7O15 Ammm; a = 3.851, b = 3.869, c = 50.29 Å 93 Bi2Sr2CuO6 Amaa; a = 5.362, b = 5.374, c = 24.622 Å 10 Bi2CaSr2Cu2O8 A2aa; a = 5.409, b = 5.420, c = 30.93 Å 92 Bi2Ca2Sr2Cu3O10 A2aa; a = 5.39, b = 5.40, c = 37 Å 110 Bi2Sr2(Ln1-xCex)2Cu2O10 P4/mmm; a = 3.888, c = 17.28 Å 25 Tl2Ba2CuO6 A2aa; a = 5.468, b = 5.472, c = 23.238 Å; I4/mmm; a = 3.866, c = 23.239 Å 92 Tl2CaBa2Cu2O8 I4/mmm; a = 3.855, c = 29.318 Å 119 Tl2Ca2Ba2Cu3O10 I4/mmm; a = 3.85, c = 35.9 Å 128 Tl(BaLa)CuO5 P4/mmm; a = 3.83, c = 9.55 Å 40 Tl(SrLa)CuO5 P4/mmm; a = 3.7, c = 9 Å 40 (Tl0.5Pb0.5)Sr2CuO5 P4/mmm; a = 3.738, c = 9.01 Å 40 TlCaBa2Cu2O7 P4/mmm; a = 3.856, c = 12.754 Å 103 (Tl0.5Pb0.5)CaSr2Cu2O7 P4/mmm; a = 3.80, c = 12.05 Å 90 TlSr2Y0.5Ca0.5Cu2O7 P4/mmm; a = 3.80, c = 12.10 Å 90 TlCa2Ba2Cu3O8 P4/mmm; a = 3.853, c = 15.913 Å 110 (Tl0.5Pb0.5)Sr2Ca2Cu3O9 P4/mmm; a = 3.81, c = 15.23 Å 120 TlBa2(La1-xCex)2Cu2O9 I4/mmm; a = 3.8, c = 29.5 Å 40 Pb2Sr2La0.5Ca0.5Cu3O8 Cmmm; a = 5.435, b = 5.463, c = 15.817 Å 70 Pb2(Sr,La)2Cu2O6 P2212; a = 5.333, b = 5.421, c = 12.609 Å 32 (Pb,Cu)Sr2(La,Ca)Cu2O7 P4/mmm; a = 3.820, c = 11.826 Å 50 (Pb,Cu)(Sr,Eu)(Eu,Ce)Cu2Ox I4/mmm; a = 3.837, c = 29.01 Å 25 Nd2-xCexCuO4 I4/mmm; a = 3.95, c = 12.07 Å 30 Ca1-xSrxCuO2 P4/mmm; a = 3.902, c = 3.35 Å 110 Sr1-xNdxCuO2 P4/mmm; a = 3.942, c = 3.393 Å 40 Ba0.6K0.4BiO3 Pm3m; a = 4.287 Å 31 Rb2CsC60 a =14.493 Å 31 NdBa2Cu3O7 Pmmm; a = 3.878, b = 3.913, c = 11.753 58 SmBaSrCu3O7 I4/mmm; a = 3.854, c = 11.62 84 EuBaSrCu3O7 I4/mmm; a = 3.845, c = 11.59 88 GdBaSrCu3O7 I4/mmm; a = 3.849, c = 11.53 86 DyBaSrCu3O7 Pmmm; a = 3.802, b = 3.850, c = 11.56 90 HoBaSrCu3O7 Pmmm; a = 3.794, b = 3.849, c = 11.55 87 ErBaSrCu3O7 Pmmm; a = 3.787, b = 3.846, c = 11.54 82 TmBaSrCu3O7 Pmmm; a = 3.784, b = 3.849, c = 11.55 88 YBaSrCu3O7 Pmmm; a = 3.803, b = 3.842, c = 11.54 84 HgBa2CuO4 I4/mmm; a = 3.878, c = 9.507 94 HgBa2CaCu2O6 (annealed in O2) I4/mmm; a = 3.862, c = 12.705 127 HgBa2Ca2Cu3O8 Pmmm; a = 3.85, c = 15.85 133 HgBa2Ca3Cu4O10 Pmmm; a = 3.854, c = 19.008 126 有機超導體 超導材料 臨界壓強 Pc/kbar 臨界溫度Tc/K (TMTSF)2PF6 6.5 1.2 (TMTSF)2AsF6 9 1.3 (TMTSF)2SbF6 11 0.4 (TMTSF)2TaF6 12 1.4 (TMTSF)2ClO4 0 1.4 (TMTSF)2ReO4 9.5 1.3 (TMTSF)2FSO3 5 3 (ET)4(ReO4)2 4.5 2 βL-(ET)2I3 0 1.4 βH-(ET)2I3 0 8.1 γ-(ET)3I2.5 0 2.5 ε-(ET)2I3(I8)0.5 0 2.5 α-(ET)2I3I2-doped 0 3.3 αt-(ET)2I3 0 8 ε→β-(ET)2I3 0 6 θ-(ET)2I3 0 3.6 κ-(ET)2I3 0 3.6 β-(ET)2IBr2 0 2.8 β-(ET)2AuI2 0 4.8 (ET)4Hg2.89Cl8 0 4.2 (ET)4Hg2.89Br8 12 1.8 (ET)3Cl2(H2O)2 16 2 κ-(ET)2Cu(NCS)2 0 10.4 κ-(d-ET)2Cu(NCS)2 0 11.4 (DMET)2Au(CN)2 1.5 0.9 (DMET)2AuI2 5 0.6 (DMET)2AuBr2 0 1.9 (DMET)2AuCl2 0 0.9 (DMET)2I3 0 0.6 (DMET)2lBr2 0 0.7 (MDT-TTF)2AuI2 0 3.5 TTF[Ni(dmit)2]2 2 1.6 TTF[Pd(dmit)2]2 20 6.5 (CH3)4N[Ni(dmit)2]2 7 5 References Ginsburg, D. M., Ed., Physical Properties of High-Temperature Superconductors, Vols. I–III, World Scientific, Singapore, 1989–1992. Rao, C. N. R., Ed., Chemistry of High-Temperature Superconductors, World Scientific, Singapore, 1991. Shackelford, J. F., The CRC Materials Science and Engineering Handbook, CRC Press, Boca Raton, FL, 1992, 98–99 and 122–123. Kaldis, E., Ed., Materials and Crystallographic Aspects of HTc-Superconductivity, Kluwer Academic Publ., Dordrecht, the Netherlands, 1992. Malik, S. K. and Shah, S. S., Ed., Physical and Material Properties of High Temperature Superconductors, Nova Science, Commack, NY, 1994. Chmaissem, O. et al., Physica, C230, 231–238, 1994. Antipov, E. V. et al., Physica, C215, 1–10, 1993. Ishigura, T. and Yamaji, K., Organic Superconductors, Springer-Verlag, Berlin, 1990. Williams, J. M. et al., Organic Superconductors (Including Fullerenes), Prentice Hall, Englewood Cliffs NJ, 1992. The Fullerenes, Ed.: Krato, H. W., Fisher, J. E., and Cox, D. E., Pergammon Press, Oxford, 1993. Schluter, M. et al., in The Fullerenes (Ref. 3), p. 303.","categories":[],"tags":[{"name":"Physics","slug":"Physics","permalink":"http://yoursite.com/tags/Physics/"},{"name":"Data","slug":"Data","permalink":"http://yoursite.com/tags/Data/"},{"name":"Superconductor","slug":"Superconductor","permalink":"http://yoursite.com/tags/Superconductor/"}]},{"title":"Outline for PhysicsChemistry (Thermodynamics)","slug":"phy-chem","date":"2018-11-15T04:28:07.000Z","updated":"2018-11-26T13:52:44.495Z","comments":true,"path":"2018/11/15/phy-chem/","link":"","permalink":"http://yoursite.com/2018/11/15/phy-chem/","excerpt":"文学历史知识? 凉掉的热力学 11.26知识整理","text":"文学历史知识? 凉掉的热力学 11.26知识整理 History? 唐诗三百首只有310首的原因 -&gt; 诗经有311首 李白的静夜思 在东亚各国藏本中 皆为 床前看月光疑是地上霜举头望山月低头思故乡 Outline for PhysicsChemistry (Thermodynamics)单个分子的能级结构平动能级 势阱箱粒子的平动 太累了 公式统统不打了… 平动能级是量子化的 孤立的 非连续的 平动能总是大于0 粒子不会停留在任意一个位置 箱子尺寸的增大 能级密度增大 不再提供量子边缘化条件 宏观可测量V的注意 转动能级 振动与转动相对于分子质心的运动 与容器的大小无关 对于一个N核分子 核自由度为 = 3N 平动自由度 = 3 转动自由度由分子结构决定 振动自由度为求差得出 斯特林近似 lnx! = xlnx - x 玻尔兹曼方程 S = k ln W 对于一个系统的性质 正比于系统的大小 -&gt; 广度性质对于一个系统的性质 与系统的大小无关 -&gt; 强度性质 物质之间不做功的能量传递 -&gt; 传热 玻尔兹曼因子!!! 配分函数 = 1 / p(0) 基本能隙 = \\epsilon_1 - \\epsilon_0 权重和熵的关系 -&gt; 理想气体的体积取决于边界条件理想液体的体积取决于分子间作用力 $$G_{混} - G_{纯} = n_ARTln\\tau_A - n_BRTln\\tau_B$$ 理想气体由于分子间相互作用力相等 体积形态不可分 因此熵的变化主要为位置熵的变化 $$\\mu_i = \\mu^* + RTlnX_i$$ 纯态的化学势 = $\\mu^*$ 特别注意 $$\\mu = \\mu_0 + RTlnP^*$$ 相图 $$Q_{液} \\approx 2Q_{气}$$$$C_{p液} \\approx 2C_{p气}$$ 溶液作为反应介质的特性 分子起到的是传热和熵补偿的作用","categories":[],"tags":[{"name":"PhysicsChemistry","slug":"PhysicsChemistry","permalink":"http://yoursite.com/tags/PhysicsChemistry/"},{"name":"Thermodynamics","slug":"Thermodynamics","permalink":"http://yoursite.com/tags/Thermodynamics/"},{"name":"Review","slug":"Review","permalink":"http://yoursite.com/tags/Review/"}]},{"title":"Physics Mid-Term Review (Electromagnetism)","slug":"physics","date":"2018-11-14T05:56:13.000Z","updated":"2018-11-20T01:29:43.037Z","comments":true,"path":"2018/11/14/physics/","link":"","permalink":"http://yoursite.com/2018/11/14/physics/","excerpt":"Physics(A) Ⅱ Mid-Term – Electromagnetism Maxwell’s equations &amp;&amp; ε0 μ0 relationship 明天就加上薛定谔方程！(鸽子) すぐに試験に行くつもりですね 魚はちゃんと勉強しなければならないだ～～","text":"Physics(A) Ⅱ Mid-Term – Electromagnetism Maxwell’s equations &amp;&amp; ε0 μ0 relationship 明天就加上薛定谔方程！(鸽子) すぐに試験に行くつもりですね 魚はちゃんと勉強しなければならないだ～～ General Concept 麦克斯韦方程组 $$\\int_l \\cdot dl = \\int_sJ \\cdot ds + \\int_s \\frac{\\partial D}{\\partial t}\\cdot ds$$ $$ \\nabla \\times H = J + \\frac{\\partial D}{\\partial t}$$ 磁场强度H沿任意闭合曲线的线积分，等于穿过此曲线限定面积的全电流 $$E \\cdot dl = - \\frac{d}{dt}\\int_SB \\cdot ds$$ $$\\nabla \\times E = -\\frac{\\partial B}{\\partial t}$$电场强度E沿任意闭合曲线的线积分等于穿过由该曲线所限定面积的磁通对时间的变化率的负值 $$\\int_S B \\cdot ds = 0$$$$\\nabla \\cdot B = 0$$对于任意一个闭合曲面，有多少磁通进入曲面就有同样数量的磁通离开 $$D \\cdot ds = \\int_S \\rho dv$$$$\\nabla \\cdot D = \\rho$$在时变的条件下，从任意一个闭合曲面出来的D的净通量，应等于该闭曲面所包围的体积内全部自由电荷之总和 根据麦克斯韦方程组推测 电磁波以光速传播 然后对真空磁导率进行定义 : 1948年 单位长度的安培力 $$|F_m| = \\frac{\\mu_0}{2\\pi} \\frac{|I|^2}{|r|}$$ 求得 $$\\mu_0 = 4\\pi \\times 10^{-7} (N/A^2)\\approx 1.2566 \\times 10^{-6}(N/A^2)$$ 真空介电常数与其它物理常数的关系 $$\\epsilon_0 = \\frac{1}{\\mu_0 c^2}$$ 于是求得真空介电常数 $$\\epsilon_0 = 8.854 \\times 10^{-12}F/M$$ 库仑定律中k的替换 $$ k = 8.99 \\times 10^8N \\cdot m^2 / C^2 $$取 $ k = \\frac{1}{4\\pi\\epsilon_0}$ 得$$ \\epsilon_0 = \\frac{1}{4\\pi k} = 8.85 \\times 10^{-12} C^2 / (N \\cdot m^2)$$ 场强的计算$$ \\vec E = \\frac {\\vec F}{q_0} \\tag{定义式} $$ $$ \\vec E = \\frac {1}{4\\pi\\epsilon_0} \\frac{q}{r^2} \\hat r \\tag{叠加法} $$ $$ \\Phi_e = \\int \\vec E · d\\vec S = \\frac{1}{\\epsilon_0} \\sum_{s内}{q_i}\\tag{高斯法} $$ $$ \\vec E = -grad U\\tag{静电场的梯度} $$ 应用 半径为R的均匀带电圆环 带电量q 竖直距离z$$dE = \\frac{\\lambda dl}{4\\pi \\epsilon_0(z^2 + R^2)^{1/2}}$$$$E = \\frac{qz}{4\\pi \\epsilon_0(z^2 + R^2)^{3/2}}$$拓展到一整个圆盘 就做一次积分$$ E = \\frac{\\sigma}{2\\epsilon_0}(1-\\frac{z}{\\sqrt{z^2 + R^2 }}) $$取z非常小 得带电平面的场强为$$E = \\frac{\\sigma}{2\\epsilon_0} $$ 带电直导线周围场强$$E_y = \\frac{\\lambda}{4\\pi \\epsilon_0a}(cos\\theta_1 - cos\\theta_2)$$ 无限长直导线 -&gt; 圆柱$$ E = \\frac{\\lambda}{2\\pi \\epsilon a}$$ 电势&amp;&amp;静电平衡$$U_p = \\int_P^Q E \\cdot dl \\tag{定义式}$$ 对于一个点电荷 $$U = \\frac{q}{4\\pi \\epsilon_0r}$$ 对于均匀带电球面/金属球体 $$U = \\frac{q}{4\\pi \\epsilon_0R} \\tag{r \\leq R }$$ $$U = \\frac{q}{4\\pi \\epsilon_0r} \\tag{r \\geq R }$$ 应用 直接由E积分 记得选择正确的电势0点 导体内部场强为0 表面就是等势面 电容 电介质$$C = \\frac{Q}{U_A - U_B}$$ $$U_A - U_B = \\int^{R_B}_{R_A} R \\cdot dr$$ 对于导体电容器 $$C = 4\\pi\\epsilon_0R$$ 平行板电容器 $$C = \\frac{\\epsilon_0\\epsilon_rS}{d}$$ 电容器串联为各自电容的倒数求和 并联则是定容的求和 外电场作用下电介质表面出现极化电荷 $$\\epsilon_r = \\frac{\\vec R_0}{E}$$ 电介质中的高斯定理 $$\\int_S D\\cdot d\\vec S = \\sum_{S} q$$ 电场的能量 $$U_e = \\frac{1}{2} \\frac{Q^2}{C} = \\frac{1}{2}CV^2$$ $$\\mu_e = \\frac{1}{2}\\epsilon_0\\epsilon_rE^2$$ $$U_e = \\int dU_e = \\int_V \\frac{1}{2}\\epsilon_0 \\epsilon_rE^2dV$$ 电荷面密度的场强计算 在计算平行板电容器的作用 $$E = \\frac{\\sigma}{\\epsilon_0}$$ 电介质相关题目 $$\\sigma = P_n$$ $$\\vec D = \\epsilon_o \\vec E + \\vec P$$ $$\\vec D = \\epsilon_r \\epsilon_0\\vec E = \\epsilon \\vec E$$ 磁场长直导线 $$ B = \\frac{\\mu_0 I}{4\\pi a}(cos\\theta_1 - cos\\theta_2)$$$$B = \\frac{\\mu_0 I}{2\\pi a} \\tag{无限长直导线}$$ 载流圆线圈中的磁场 $$B = \\frac{\\mu_0 IR^2}{2(R^2+x^2)^{3/2}}$$ $$B = \\frac{\\mu_0 I}{2R} \\tag{圆心磁场}$$载流螺线管内磁场$$B = \\mu_0 nI$$ 无限大面电流磁场 $$B = \\frac{\\mu j}{2}$$ 磁力矩 $$\\vec M = \\vec P_m \\times \\vec B$$$$\\vec P_m = NIS\\vec n$$ 磁力做的功 $$A = I\\Delta\\Phi$$ 磁能密度 &amp;&amp; 磁场能量 $$w_m = \\frac{1}{2} B \\cdot H$$$$W_m = \\frac{1}{2} L I^2_0 = \\frac{1}{2}BHV$$ 注意螺距和涡旋电流 $$\\int E_i \\cdot dl = - \\int_S \\frac{\\partial B}{\\partial t} \\cdot dS$$ 霍尔效应 $$U_H = (\\frac{1}{nq})\\frac{IB}{d}$$$$R_H = \\frac{1}{nq}$$ 铁磁质的磁化规律 $$H_c \\cdot dl = nI $$","categories":[],"tags":[{"name":"Review","slug":"Review","permalink":"http://yoursite.com/tags/Review/"},{"name":"Physics","slug":"Physics","permalink":"http://yoursite.com/tags/Physics/"},{"name":"Electromagnetism","slug":"Electromagnetism","permalink":"http://yoursite.com/tags/Electromagnetism/"}]},{"title":"Trick or Treat","slug":"halloween","date":"2018-11-01T03:33:08.000Z","updated":"2018-11-19T08:27:32.656Z","comments":true,"path":"2018/11/01/halloween/","link":"","permalink":"http://yoursite.com/2018/11/01/halloween/","excerpt":"忽然想起来前几天有人问 :圣诞节和万圣节有什么区别啊…. emmmmm …. emmmm 扔上来一些不全的万圣节特典?(盗图) XDownload V1.2新功能完成~可以下载原图了! 很有意思的歌!","text":"忽然想起来前几天有人问 :圣诞节和万圣节有什么区别啊…. emmmmm …. emmmm 扔上来一些不全的万圣节特典?(盗图) XDownload V1.2新功能完成~可以下载原图了! 很有意思的歌! XDownloader v1.2 Update new Feature on Nov.8th Make Multi File Download Avaliable =&gt; Modify type of config.url from Number to Array. Require Progress Package to add process bar when downloading instead of logs. Fix file detect bugs. Update on Nov.5thDue to the demand of origin sized image when embeddig, add new feature for origin sized download option in config file check the usage in new T-UI feature and planning to migrate to electronic version with all platform packaged Now Support Process Bar Status Check and Original Image Download Halloween!1 TTfish @fish * 1hsaw a gil dressing up as a FBI yesterday night…that’s is literally the scariest halloween costume i’e ever seen. TTfish @fish * 55minThat’s REALLY SCARY! 2 Artist: Unknown3 官方发糖?","categories":[],"tags":[{"name":"Halloween","slug":"Halloween","permalink":"http://yoursite.com/tags/Halloween/"}]},{"title":"About Embed!!!","slug":"embed","date":"2018-10-28T10:18:55.000Z","updated":"2018-11-19T08:27:33.213Z","comments":true,"path":"2018/10/28/embed/","link":"","permalink":"http://yoursite.com/2018/10/28/embed/","excerpt":"咕咕已久的教程上传 讨论一下奇奇怪怪的东西 要好好学习英语和日语了!!! ( 认 真 ) 梦里什么都有: 成为一体姬以后进军时轴压制!!!","text":"咕咕已久的教程上传 讨论一下奇奇怪怪的东西 要好好学习英语和日语了!!! ( 认 真 ) 梦里什么都有: 成为一体姬以后进军时轴压制!!! 扔了一些古老的教案在上面 还是非常简单的!!! 毕竟不是自己做 Click Me to Download!!! 关于曾经遇到的一些奇特的姿势对于全彩半透明 …. emmmm 要有耐心就好了 举最近的一个例子吧 非常的难受 一页里面出现了无数的拟声词 这里讨论一下对于语气词后促音的对待 按照惯例: 语气词后的促音应该擦除!!! (对于黑白的就经常忘记 wwwwww) 这个は后面的是あ的片假名 所以应该写成“哈啊” 这个ん后面就是个つ 赶紧擦掉!!! 那么问题来了 这个は后面的… 是个啥!!! 以老朽拙见 这个应该是个草体的あ 所以应该翻译成“哈啊”!!! (大雾) 关于一开始遇到的小问题 关于photoshop的模仿图章使用 应该选择清晰的网点 然后对准!!! 当网点完全重合的时候 模仿图章就会把网点越做越大这个技能很重要（不然就凉了 对于源图层的保存 一般开始工作的时候 先Ctrl + J创建一个复制图层 设置透明度成为50% 这样哪怕之后搞砸了 也可以用模仿图章改回来 所有的字需要居中对齐… 这个真的好难啊 要瞎了 很多时候生成jpg文件的时候会发现有些字被隐藏了 还是得检查一下呢!! 以上~~~","categories":[],"tags":[{"name":"Embed","slug":"Embed","permalink":"http://yoursite.com/tags/Embed/"},{"name":"2D","slug":"2D","permalink":"http://yoursite.com/tags/2D/"},{"name":"Face","slug":"Face","permalink":"http://yoursite.com/tags/Face/"}]},{"title":"Painting(偽物) と Ebedding ??","slug":"managacraft","date":"2018-10-24T14:32:35.000Z","updated":"2018-11-20T01:30:48.794Z","comments":true,"path":"2018/10/24/managacraft/","link":"","permalink":"http://yoursite.com/2018/10/24/managacraft/","excerpt":"Update on 8102.10.24! Groobum Princess怎么可以这么可爱!!! 終於不寫技術博客了呢 看來跳跳魚要跑路了（大霧） 最近做的一些小东西(伪·搬运)","text":"Update on 8102.10.24! Groobum Princess怎么可以这么可爱!!! 終於不寫技術博客了呢 看來跳跳魚要跑路了（大霧） 最近做的一些小东西(伪·搬运) About Embedding嵌字真的很累呢！ 翻譯快出來捱打！！！ 過幾天有空考虑把教程放上来 唉 终究还是暴露了 emmm 前几天接了刀剑乱舞的一本漫画 神仙翻译居然把所有的字都给我翻译了~ 然鹅翻译还有一些错误… 这里就不拿出来表了… 翻译酱么么嗒! 这张图我要做多久咧 ~~！！ 做完了嘤嘤嘤 然而还有好多其他锅… Groobum Princess ！！前几日在Reddit看到了Groobum Princess的同人(物?)作品 太妙了 稍微处理了一下 忍不住想扔上来","categories":[],"tags":[{"name":"Embed","slug":"Embed","permalink":"http://yoursite.com/tags/Embed/"},{"name":"2D","slug":"2D","permalink":"http://yoursite.com/tags/2D/"},{"name":"Face","slug":"Face","permalink":"http://yoursite.com/tags/Face/"},{"name":"Groobum","slug":"Groobum","permalink":"http://yoursite.com/tags/Groobum/"}]},{"title":"AI Manga Colorize Attempt","slug":"virt","date":"2018-10-14T03:57:23.000Z","updated":"2018-11-19T08:27:32.880Z","comments":true,"path":"2018/10/14/virt/","link":"","permalink":"http://yoursite.com/2018/10/14/virt/","excerpt":"TTfish博客大更新！！！ 嘟噜噜噜噜~ 今天介绍一下一喵做的人工智能PaintsTransfer上色 感覺如果有美術功底的話 還是挺好玩的（然而跳跳魚沒有） 这几天进了一喵的社区玩耍 一半是程序员 一半是画师 hhhhhh 说好的嵌字教程又咕咕咕啦~~~","text":"TTfish博客大更新！！！ 嘟噜噜噜噜~ 今天介绍一下一喵做的人工智能PaintsTransfer上色 感覺如果有美術功底的話 還是挺好玩的（然而跳跳魚沒有） 这几天进了一喵的社区玩耍 一半是程序员 一半是画师 hhhhhh 说好的嵌字教程又咕咕咕啦~~~ From Style2Paint to PaintTransfer一喵是苏州大学的大四学生 一年前开源了Style2Paints 现在已经6000多星星了 还听说投了一篇Siggraph的paper 之后一直在做MangaCraft 目前新产品PaintTransfer 做的是迁移学习 虽然还是闭源的 但是非常厉害的工程师呢~ 上两张非常糟糕的尝试 导致彩化任务彻底失败之前简单的做了一会儿的MangaCraft 花了一页 最大的感觉就是不懂配色真的很难受~ 甚至需要google篮球架的颜色来乱涂… 这是训练完的效果 这是训练的色彩填充 第一次看到这个项目也是之前 组里面的一本漫画是用了这个做了彩化 然鹅其实应该先嵌字再彩化？（太狠了）组里后来说这个的配色在程序员的手中变得难以忍受（确实——）感觉这个比较适合用来玩耍八~~~ 嘻嘻 并不是很能够用来做正经工作 Emmmmmm 对于实际的操作使用 其实还是有技巧之说 首先 漫画不是很适合 尤其是修完图后的 线稿上色就比较稳健 迁移学习也能够做的很开心 一般展示里都是线稿…可以去找来看看 emmmm 上两张图呗~~","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"2D","slug":"2D","permalink":"http://yoursite.com/tags/2D/"},{"name":"Art","slug":"Art","permalink":"http://yoursite.com/tags/Art/"}]},{"title":"Virtual Machine Bugs","slug":"paint","date":"2018-10-10T15:25:16.000Z","updated":"2018-11-19T08:27:32.880Z","comments":true,"path":"2018/10/10/paint/","link":"","permalink":"http://yoursite.com/2018/10/10/paint/","excerpt":"好久沒有更新博客了呢!!! 你這條魚爲什麼這麼怠惰啊… 最近在忙一些奇奇怪怪的事情 看來還是得好好記錄一些好玩的事兒呢 爲了能在寫代碼的時候能夠使用QQ 安裝了上古Windows7 結果折騰了好多時間… 羊可愛：所以你不能看手機咩?","text":"好久沒有更新博客了呢!!! 你這條魚爲什麼這麼怠惰啊… 最近在忙一些奇奇怪怪的事情 看來還是得好好記錄一些好玩的事兒呢 爲了能在寫代碼的時候能夠使用QQ 安裝了上古Windows7 結果折騰了好多時間… 羊可愛：所以你不能看手機咩? 先挖一個坑 明天填（咕咕咕） About Virt-Manageremmmmm 用虛擬機還是一件非常好的事情 然而之前嘗試自己配置自己的kvm 被qemu各種奇怪的配置弄暈了… 然而屈服了Virt-Manager以後 終於在圖形化界面中找到了新世界（大霧———）然而有很多神仙錯誤 例如鼠標移動的神奇卡噸 分辨率和網速更是像一臺裝了Windows XP的2000年計算機 途中在建立共享文件夾的時候 點擊小標籤“shared files”根本不理睬我 反而報錯1unsupported configuration: shared access for disk 'xxx' requires use of supported storage format 嘛 看來文件格式不能夠讓他滿意呢 面向Google搜索後 發現大體有兩種方法 第一種是用libguestfs工具 修復上面的問題 實現share file 小插曲在裝libguestfs的時候 出現了報錯 1234cannot run pkg-config to check libvirt version at Makefile.PL line 8.==&gt; ERROR: A failure occurred in build(). Aborting...Error making: perl-sys-virt emmmmm 總而言之就是沒有pkg-config導致perl-sys-virt的build失敗了 這可真是丟人… 於是馬上安裝必須包base-devel 解決上述問題 arch上還是非常需要的 第二種是用qemu-nbd 直接掛載了在/var/lib/libvirt/images裏的qcow2文件 具體不詳細說了 跳跳魚已經放棄了!!! 可能kvm不是很適合來跑圖形界面 還是換一個工具吧 於是 About VirtualBox剛上手virtualBox的時候 跳跳魚非常偷稅!! 這是什麼天使?! 爲什麼速度那麼快 界面那麼流暢… 而且有很多都幫你封裝好了 例如共享文件夾之類的 還有好多優點 例如 动态分配硬盤空間 這讓我之前被kvm吃掉的20G可以少一些使用 按住F8進入安全模式後 打開了3D加速 CD Drive Guest Addition很棒 還有一個就是神奇的Seamless Mode 成功的把導航欄裝了起來 感覺就像在使用Windows導航的Arch Linux 點名表扬~ 雖然有一些Bug 不過可以理解…","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"KVM","slug":"KVM","permalink":"http://yoursite.com/tags/KVM/"}]},{"title":"Notes For Archlinux Installation","slug":"note","date":"2018-08-28T13:34:19.000Z","updated":"2018-11-19T08:27:32.656Z","comments":true,"path":"2018/08/28/note/","link":"","permalink":"http://yoursite.com/2018/08/28/note/","excerpt":"感谢著名画师电波墙授权的Banner和缩略图！！！ 最近重新安裝了Arch Linux 非常的開心 記錄一些小細節(感謝约伊兹的萌狼乡手札！) 增加了幾個之前很想尋找但是忘記了的命令 圖片過多導致博客更新頻率降低 之後儘量減少圖片吧/(- O -)/","text":"感谢著名画师电波墙授权的Banner和缩略图！！！ 最近重新安裝了Arch Linux 非常的開心 記錄一些小細節(感謝约伊兹的萌狼乡手札！) 增加了幾個之前很想尋找但是忘記了的命令 圖片過多導致博客更新頻率降低 之後儘量減少圖片吧/(- O -)/ About Time SetUp因爲之前是第一次使用非圖形化操作系統（在自己的電腦上） 有些操作有些亂來 現在想來仍十分愧疚 於是乎有一些環境被污染例如npm和pip 這些包管理工具和pacman 於是乎重新安裝了Arch （然鵝忘記備份了.ssh文件夾 丟了openvpn的配置 嗚嗚嗚） 剛安裝完系統以後 一般會先校對時間 而有些電腦的時間會有一些問題 想起了貴潮去年的納新短信 跳跳魚收到的顯示:”請在晚上23:00參加第二輪面試” 當時就懵了（hhhh） 當然我的電腦也有同樣的問題 記錄一下直接更改時間的方法（當然也可以在timedatectl中更改~） 情况不容乐观重启了Windows以后可能把我的硬盘时间更改了 导致再此进入Linux的时候 时间又是英国时间 可能的解决方法: 改Windows的注册表（哭） 暴力设置.bashrc的配置 再也不用Windows(真香) 關於跳跳魚神奇的網卡驅動問題 下次再細說 12$ rm /etc/localtime$ ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime date命令可以查看時間 例如12$ dateTue Aug 28 23:49:17 CST 2018 更新于2018/9/30 17:50然而上述方法在经历了长期的重启后 完全失效了 当然sudo hwclock --localtime显示的是格林尼治时间 然鹅sudo hwclock --utc却是东八区的时间 这就很奇怪 于是安装openntpd 并且enable 于是就很快乐 双倍的快乐！！ 記錄一些容易忘記的花裏胡哨沒有實用的命令 Figlet將字符按一定字體輸出(ASCII FONT ART?)記得有個拓展叫”Toilet”不是很想介紹 顏色比較難以接受 123456$ figlet \"TTfish\" _____ _____ _____ ___ ____ _ _ |_ _|_ _| ___|_ _/ ___|| | | | | | | | | |_ | |\\___ \\| |_| | | | | | | _| | | ___) | _ | |_| |_| |_| |___|____/|_| |_| Cowsay/Cowthink一隻牛在說話或者在思考（並不一定是牛） 12345678910$ cowsay -l // -c指定模型 -l查看模型$ cowsay \"ttfish\" ________ &lt; ttfish &gt; -------- \\ ^__^ \\ (oo)\\_______ (__)\\ )\\/\\ ||----w | || || Sl日本開發者寫的懲罰工具 打錯ls的下場 一輛火車跑出來 跑完之前無法被停止（跳跳魚經常被氣死） 12$ sl火車長什麼樣自己看~ Asciiquarium水族館 有些奇奇怪怪的魚游來游去 1$ asciiquarium XmasNpm 的彩蛋？不是很清楚 12$ npm xmas會出來一顆樹 Ponysay/Ponythinkponies版本的cowsay/cowthink Doge一隻doge並且胡言亂語 Cmatrix從天而降的莫名其妙的字符（用來裝蒜？） Fortune隨機的段子（不然爲什麼叫fortune呢） 1$ fortune //包名叫cowfortune Lolcat彩虹貓的導出格式（顏色有時候慘不忍睹） 1$ echo \"ttfish\" | lolcat Xeyes兩隻眼睛跟隨鼠標移動 然而是窗口模式的 1$ xeyes //包名叫xorg-xeyes","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Note for Electron && Vue.js","slug":"electron","date":"2018-08-15T12:03:39.000Z","updated":"2018-11-19T08:27:32.686Z","comments":true,"path":"2018/08/15/electron/","link":"","permalink":"http://yoursite.com/2018/08/15/electron/","excerpt":"最近写了一点点Electron 开发体验一般(然鹅在Arch上非常的痛苦) 贵潮的纳新系统用Vue来写 遇到了一些坑 TypeScript很棒 Golang很妙 Vue是个什么玩意儿","text":"最近写了一点点Electron 开发体验一般(然鹅在Arch上非常的痛苦) 贵潮的纳新系统用Vue来写 遇到了一些坑 TypeScript很棒 Golang很妙 Vue是个什么玩意儿 Electron.jsElectron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库 2014年开源的 About Installation Bugs 安装会卡在node install.js上 然后报错退出 这个问题很多人都会遇到 当然TTfish也遇到了 看到别人用黑魔法直接解包用了 这里还是写一下比较友好的方法: 换个国内镜像 浙大源 淘宝源 QSC源 npm install -g electron后的参数--unsafe-perm=true --allow-root这个就是全局安装的权限问题了(头疼) 不知为何我的Arch安装了Electron以后输入electron .以后石沉大海 啥事都不会发生 遂怒转Windows开发 Electron Development安装完包以后 就可以进行开发 package.json的配置不可缺少12345678\"main\": \"main.js\",\"scripts\": &#123; \"start\": \"electron .\" &#125;,\"homepage\":\".\",\"dependencies\": &#123; \"electron\": \"^\", &#125; 当然 直接electron .执行也没有问题 前提是npm全局安装了electron并在环境变量里有 Hello World &amp;&amp; A little MoreElecreon有集成好的 需要记忆的API (不喜欢记API) 稍微写一点在这里 这是个简单的Hello World以下是Main.js1234567891011121314151617181920212223242526272829303132333435\"use strict\"const electron = require('electron')const Menu = electron.Menuconst app = electron.appconst BrowserWindow = electron.BrowserWindowlet mainWindowfunction createWindow () &#123; mainWindow = new BrowserWindow(&#123;backgroundColor: 'white', width: 1200, height: 800&#125;) mainWindow.loadURL(url.format(&#123; pathname: path.join(__dirname, 'index.html'), protocol: 'file:', slashes: true &#125;)) mainWindow.on('closed', function () &#123; mainWindow = null &#125;)&#125;app.on('ready', createWindow)app.on('window-all-closed', function () &#123; if (process.platform !== 'darwin') &#123; app.quit() &#125;&#125;)app.on('activate', function () &#123; if (mainWindow === null) &#123; createWindow() &#125;&#125;) 那么这样的效果就是创建一个1200*800的窗口 并且加载了本地的index.html的代码 关于BrowserWindow的一些参数 autoHideMenuBar: true会隐藏页面的菜单栏 按下Ctrl后会显示 fullscreen: true 全屏(有点难受 关闭按钮被顶出去了) frame: false 那边框就全没了 transparent: true 这个很有意思 会变成透明的底板(去年的潮毕 薯米君好像就是这样写的弹幕) 还有很多属性 不写了 关于Electron重要的是它只用了Chromium的渲染库而不是其全部组件 多进程就很喵 狠狠的写路由可以写很好的工程 比如正在使用的VSCode(你怎么还在用VSCode写博客?) Note:123&lt;script&gt; require('./haha.js') &lt;/script&gt; Vue.js 嘛 之前用React 写的还算是开心？ 写微信小程序的时候 用过Wepy 和Vue非常的像 而因为微信的Api实在是太糟糕了 当时写的不舒服到也没有很大的怨气 还很高兴 但是真正要写Vue的时候 感觉不是很舒服了(当然开发效率很快 Route之类的裸犇君也写得很好) About Installation打包工具很不错 1$ npm install -g vue-cli 然而一开始de了一小时的bug 才发现少装了四个包 眼泪流下来 所以 这个很重要 1$ npm install -g babel-plugin-syntax-dynamic-import 如果遇到Vue异步组件的懒加载报语法错误的时候 就是没有装这个包的锅 别问我怎么知道的123routes: [ &#123; path: '/', component: () =&gt; import('./components/Home.vue') &#125;, ] 非常妙的语法 About Data之前写微信小程序就被Data弄得晕头转向 并不像React的State一样管理方便 于是小项目小数据的话 一般还是不放在Data里 直接在script标签里定义 更改也是暴力的用this.xxx = xxx来更改 Typescript =&gt; 声明一堆对象的数组: let TTfish : object[] object 不能大写","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Electron","slug":"Electron","permalink":"http://yoursite.com/tags/Electron/"}]},{"title":"Some Linux Command && Tools","slug":"linux","date":"2018-07-26T16:17:50.000Z","updated":"2018-11-20T01:32:00.554Z","comments":true,"path":"2018/07/27/linux/","link":"","permalink":"http://yoursite.com/2018/07/27/linux/","excerpt":"Record Some of the Linux Commands and Useful Tools For further use Ready to insert some code with other language (Web Assamblely? No idea yet~)","text":"Record Some of the Linux Commands and Useful Tools For further use Ready to insert some code with other language (Web Assamblely? No idea yet~) Linux Commands &amp;&amp; Packages/Tools Used RecentlyLinux $PATH ConfigureNormally written in .bashrc or .bash_profileThe $PATH is really important for searching for excutable commands and as for configuration, we should not forget to avoid over-writting the origin PATH12$ echo $PATH // For check the present path$ export PATH=\"xx/xx/xxx/bin:$PATH\" // Add the new path in the front Do not forget the $PATH “:” is used for seperate two paths and conbine into the new path Python Environment &amp;&amp; Pip &amp;&amp; CondaThe Anaconda Provides the feature to set a virtual environment for python development. Be aware of the difference between python -m xxxx and python xxxx The python environment create =&gt; 1$ conda create -n XXXXX python=X.X The Usage of the environment =&gt; 12345$ source activate XXXX(The name you created before)$ conda install -n XXXX [package]$ source disactivate XXXX$ conda remove -n XXXX -all $ ... The Installation of the Packages from Third Party is Recommanded to install in the Virtual Environment instead of Global SUDO commands !!! (impoertant) NloadDisplay the network usage status with TUI ObjdumpDisplays information about one or more object files. The options control what particular information to display. Du &amp;&amp; DfList the size of a dir and the file. Convert (.JPG -&gt; .GIF)Well, a well known command line tool from ImageMagick This time for the jpgs to transform into gif =&gt; 1$ convert -delay 20 -loop 0 *.jpg ttfish.gif FfmpegA Useful Stream Video Convertor (.m3u8 FILE transition) 1$ ffmpeg -i \"remote_address\" -c copy ttfish.mp4 FileCheck the specific type of a file. NmList the symbols from object files objfile. If no object files are listed as arguments, nm assumes the file a.out. To be continued…","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Breif Record of SCT_Summer Course","slug":"summmer","date":"2018-07-16T04:52:27.000Z","updated":"2018-11-20T01:28:42.330Z","comments":true,"path":"2018/07/16/summmer/","link":"","permalink":"http://yoursite.com/2018/07/16/summmer/","excerpt":"Forgetable Knowledge Records Recently (Updated) Finish Simple Linear Matrix Operation with MPI/CUDA/OpenMP in C (C++ is too hard!!!)Source Code 正在好好考虑需不需要解析一个一个子域名… 好像阿里云域名要到期了来着 /思考 魚は少し怠け者でしょうていいですか？","text":"Forgetable Knowledge Records Recently (Updated) Finish Simple Linear Matrix Operation with MPI/CUDA/OpenMP in C (C++ is too hard!!!)Source Code 正在好好考虑需不需要解析一个一个子域名… 好像阿里云域名要到期了来着 /思考 魚は少し怠け者でしょうていいですか？ SCT Summer Tasks And NotesMakeFileFile used for compile codes A not good makefile for MPI =&gt; 123456789matrix.o : matrix.htruempicc matrix.c -c -lm truemake mainmain : main.c matrix.otruempicc main.c matrix.o -o main -lm -O2 -march=nativetrueecho -e \"\\nExcute main to Start\\n\"truerm matrix.oclean: truerm main The makefile usually contain the Pseudo-class(like clean or install) the privilege can be modefied due to the compile dependency gcc compile optimitation (Further Deeper…) Basic Linear Matrix Operation in CUse new Struct for storing Matirx12345typedef struct matrix &#123; double *data; int row; int col;&#125; Matrix; Then we just need to set All the date into the one dim data pointer. Segment Fault Warnning Plaese check if data is well malloced ！ 12345678910111213141516171819void initMatrix(Matrix * M); // Scan the number and set into the Matrix(the first two are column and row integer)void ReadMatrix(char* Filename, Matrix * M); // Read the Matrix file while the two first integers are column and rowvoid AddMatrix(Matrix * M1, Matrix * M2, Matrix * M3);void PrintMatrix(Matrix * M);// Print the Matrix out void MiltiplyMatrix(Matrix * M1, Matrix * M2, Matrix * M3);void FunctionMatrix(Matrix * M1, Matrix * M3);// MemberWise the Matrix and make function(x) for every element in the Matrixvoid TransposeMatrix(Matrix * M); MPI for Multi-process Tasks #include &lt;mpi.h&gt; Open MPI is A High Performance Message Passing Library for multi-process Tasks. Some Simple Commands 123$ lscpu // check for cpu details and check the number of the cores$ mpicc xxx.c -o xxx // hostfile is the details of your machine $ mpirun xxx --hostfile xxx -np x //the np equals the number of the processes you want to use Conclusion =&gt; MPI IS Just A Piece Of %*&amp;#$? For every process, cut the Matrix and send the data for calculation (MPI_SCATTER) Gather the data back with MPI_GATHER int MPI_Barrier(MPI_Comm_World) Useful and Tricky Use the provided functions by MPI as little as possible for better performace!!! CUDA &amp;&amp; Nvidia Well, the speed of GPU is much faster than CPUs. The Multi-Threads Programming is also much comfortable than MPI. Some Simple Commands 12$ nvidia-smi // check the gpu status (Not correct but useful)$ nvcc xxx.cu -o xxx Simply run the code with gpu running A lot of Things with CUDA the blocks, threads and grids!!! __global__ and __host__ functions calling in different situation calling function is like Function&lt;&lt;&lt;blocks, threads&gt;&gt;&gt;(a, b, c) for GPU calculation cudaMalloc((void**)&amp;GPU_data, sizeof(double) * area) cudaMemcpy(GPU_data, CPU-&gt;data, sizeof(double) * area, cudaMemcpyHostToDevice) cudaDeviceReset() is Really important and do not forget to free the memory on the GPU! OpenMP Optimization #include &lt;omp.h&gt; Well designed multi-threads optimization tool(Comfortable to write) #pragma omp parallel for num_threads(MAX_T) deal with for loops and distribute threads Warnning of above The gcc tool for version over 8.3.1 will not include math.h while compiling. Should add -ld for inclusion. gcc compile parameter ： optimization O[1-3] -march or other options The time.h in C Standard Library =&gt; typeof time_t is unsigned long or long. SO the minus of the start and the final should be type trasnformed first 1234567891011#include &lt;time.h&gt;time_t start, final;double time;start = clock();...functions...final = clock();// get time by secondstime = (double)(final - start)/1000 Notes from Mr.gg1234567891011121314151617181920212223242526272829RISCCISCSIMDSIMTrax eax ax ah al rbxrcx rdx rdi string rsi cs 16* dses fs gs sscr0~ce3r8~r15 MMXSSEAVX rbprspring kernel mode","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Review","slug":"Review","permalink":"http://yoursite.com/tags/Review/"},{"name":"SCT","slug":"SCT","permalink":"http://yoursite.com/tags/SCT/"}]},{"title":"Switch backEnd && Wechat Applet","slug":"6-12","date":"2018-06-12T01:13:01.000Z","updated":"2018-11-19T08:27:32.843Z","comments":true,"path":"2018/06/12/6-12/","link":"","permalink":"http://yoursite.com/2018/06/12/6-12/","excerpt":"Review for the Bugs created last week QSC management training project Wechat Applets for competition Plan for futher develpment","text":"Review for the Bugs created last week QSC management training project Wechat Applets for competition Plan for futher develpment Finish 2018 QSC Graduation Project with 3 fontEnd Project and 4 “Swith” backEnd.Half finish Wechat Applets compitition task (based on designer contribution@Maphilius)Well, the response can be not that satisfyingA week without sleep can be not bareable. QSC ProjectFor frontEnd前端遇到了几个小坑 虽然之前都遇到过： 部署项目的时候 create-react-app不支持相对路径 需要更改成绝对路径（以后还是自己写webpack靠谱 实现：hover伪类的时候 需要使用奇技淫巧 以后再写文章讨论（自己手写监听函数也行 小型项目的react并不是很理想 以后考虑其他框架或者裸写 For backEndAt least finish the basic requirement while the vote system broke down because the backEnd do not support break-point reconnection protection and the database storage feature. The backEnd is total a “swifter” for simple socket messages. The concept should be build that the backEnd should contain router and get the logical storage center. PLease do not make your backEnd a swift again 注册Reduis PUB/SUB 服务 并做数据储存处理 （ttfish不是很适合写后端 Mark : ws.clients.forEach 是否可以找到每一个用户的uuid? Wechat Applet这个锅是逃不掉的 毕竟已经在老师面前夸下了海口（所以你到底在干嘛TTfish？！） 周五完成了QSC潮毕项目,周日晚上12时需要上交小程序，强忍微信没有人性的api极限操作 最后完成一个假的小程序（逃 还是总结一下小程序的注意事项吧 下次注意（没有下一次了！ 微信小程序的组件库非常的少 但是还是应该试用一下 至少熟悉一下怎么填写配置文件 json中的配置文件与组件的属性并不是一一对应的 不必浪费时间（我真傻 真的 使用WEPY 会有相对能忍受的开发体验 (你怎么回事？对于1wx:for=\"&#123;&#123;&#125;&#125;\" 之类的使用 所有都是字符串限制作用域并使用1&#123;&#123;&#125;&#125; 调用Page中的Data的数据（千万要在Data中 假装是React.State 剩下的以后再说（以后最好不说了 Remember Do not type ‘wx’ as ‘ws’!!! Do not write Wechat Applet Again!!! Add : 上传本篇post时 如果md文件存在双括号会报错！！！Add : TItle 出现冒号会显示报错~","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Stack","slug":"Stack","permalink":"http://yoursite.com/tags/Stack/"},{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"}]},{"title":"Summary for Full Stack Project(I)","slug":"stack","date":"2018-05-17T07:52:22.000Z","updated":"2018-11-20T01:28:58.851Z","comments":true,"path":"2018/05/17/stack/","link":"","permalink":"http://yoursite.com/2018/05/17/stack/","excerpt":"Review for Bilding A Simplest Full Stack Project(FrontEnd)项目地址: Journey 这次犯了大错误 把后端放在Host branch了 糟糕的工程习惯 下次一定要将他们分开repo For full stack projects, the basic components are frontEnd for display, backEnd for process and a Database for storage. We all know that information transfering in the network contain dozens of requests and responses. Based on different protocols, we are able to connect and enjoy Internet. Through different requests and responses, We are able to get a project alive. Ah, Seems a little away from the topic~~No problem! Create a simple frontEnd with Create-react-App Create a simple backEnd with Koa.js Create a simple dataBase with mariadb 这篇主要总结前端踩到的坑 附赠征文系统的主题 自由的鸡","text":"Review for Bilding A Simplest Full Stack Project(FrontEnd)项目地址: Journey 这次犯了大错误 把后端放在Host branch了 糟糕的工程习惯 下次一定要将他们分开repo For full stack projects, the basic components are frontEnd for display, backEnd for process and a Database for storage. We all know that information transfering in the network contain dozens of requests and responses. Based on different protocols, we are able to connect and enjoy Internet. Through different requests and responses, We are able to get a project alive. Ah, Seems a little away from the topic~~No problem! Create a simple frontEnd with Create-react-App Create a simple backEnd with Koa.js Create a simple dataBase with mariadb 这篇主要总结前端踩到的坑 附赠征文系统的主题 自由的鸡 About the Project本次项目是实现在线征文上传系统 说白了是富文本编辑 需求非常的简单 对于数据库的操作也只需要INSERT即可 整体业务逻辑就是 前端发送请求到后端 后端收到信息 并发送至数据库存储起来 就这样 没有了 没有了 没有了 Front EndCreate-react-app 是一个非常方便的集成开发包 package都帮你配好了 直接12$ npm install create-react-app$ npm start 就可以使用 查看demo当然 在安装了serve以后 可以serve -s build开启局域网服务(又扯远了) Braft-Editor 非常良心的富文本编辑开源库 对于富文本编辑的支持非常的详细 省了不少力 Review对于JSX的CSS设置 在标签中嵌入属性 需要应用驼峰命名法 例如 className onClick 在设置 outline: none和border: 0px 0px的冲突 对于position: relative的相对设置 以及危险的absolute 移动端的css设定: 对于这个棘手的问题 我的解决方法是 12345let isMobile = falseif(window.innerWidth &lt;= 600)&#123; isMobile = true&#125; 非常不优雅的解决方式 但是将这个设置进入state更是一件丢人的事 更好的解决方法应该是使用css的Media Query 然后再糊一些stylus 这边偷懒了… (并不想写CSS) 对于判别完的CSS进行了三目表达式操作 感觉应该优化 Bind事件函数在设置this的触发函数时 不能忘了添加bind例如:1this.sendRequest = this.sendRequest.bind(this) React组件化这次实现了将Footer和Input进行了组件化处理 尽量减少全局变量的使用 (毕竟是LVVM)具体还有坑 以后再补充 对后端的通信这里就要提一下 对于Braft Editor 官方Doc里虽然很详细 但是使用原生XML Request写的 用起来不是很舒服 也不能await. 于是这里用了Fetch(用法详细参照前几篇关于爬虫的post) 还是挺好的 之后就是 POST request至后端 关于Media图片上传的坑: 后端需要运行Nginx 并且在/etc/nginx.conf中进行修改 才能实现图片上传这里是一个大坑 对于执行的root可能不允许超级管理员访问 于是暴力的将配置文件中的用户强行改成了当前用户fish 上传图片：12345678910111213141516171819202122232425262728293031323334353637uploadFn = (param) =&gt; &#123; const formData = new FormData() for(var name in param) &#123; formData.append(name, param[name]);&#125; fetch(`$&#123;config.url&#125;$&#123;config.imagePort&#125;`, &#123; method: 'POST', body: formData &#125;).then((res) =&gt; &#123; console.log(res) if(res.status === 200)&#123; successFn(res) &#125; else&#123; errorFn(res) &#125; &#125;) const successFn = (response) =&gt; &#123; response.json().then(txt =&gt; &#123; param.success(&#123; url: `http://localhost/$&#123;txt&#125;` &#125;) &#125;) setTimeout(2000) windows.location = config.navSite &#125; const progressFn = (event) =&gt; &#123; param.progress(event.loaded / event.total * 100) &#125; const errorFn = (response) =&gt; &#123; alert(\"error\") &#125;&#125; 非常粗略的重现了一下 大致是这样的逻辑 图片上传失败会导致资料库无法添加 而对于Braft-Editor的数据获取 就是在editorProps里的content(和RawContent相应) 最后总结前端架构: 整个项目时间消耗太多 而且并不美观 希望能更熟练使用CSS 对于平面页面的设计 能够更好","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Stack","slug":"Stack","permalink":"http://yoursite.com/tags/Stack/"},{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"}]},{"title":"Network Note","slug":"5-8","date":"2018-05-08T00:31:18.000Z","updated":"2018-11-19T08:27:32.843Z","comments":true,"path":"2018/05/08/5-8/","link":"","permalink":"http://yoursite.com/2018/05/08/5-8/","excerpt":"Daily NoteNetstat12345678$ netstat-a : All Ports-at : TCP Ports-au : UDP Ports-l : List Listened Ports-p : List PID &amp;&amp; Name-ie : Network List -s : Statistic Data","text":"Daily NoteNetstat12345678$ netstat-a : All Ports-at : TCP Ports-au : UDP Ports-l : List Listened Ports-p : List PID &amp;&amp; Name-ie : Network List -s : Statistic Data TCP &amp;&amp; UDPTCP: 三次握手 connect() (Stream Type) ACK ACKnum SYN seq close() 四次挥手 FIN seq 优化: KeepAlive =&gt; avoid half-connection usage waste send package to check whether the connection is alive Disadvantage: - More useless wlan transition - Fail when process unit is 100% 优化： 超时重传、累计重传 SYN攻击(Netstat 检测) UDP: 不可靠的文件传输协议 (报文 长度Limit) 拥塞不支持 假的校验头 数据不备份 无连接 But =&gt; 速度快 方便 容错 (TFTP) 优化： DCCP lsof1$ lsof -u: search for user -attach with files(exp. /bin/bash) -c $argv === | grep $argv -i network list -n nfs files list Linux environment path and stat commandAll the command can be run in the terminal must be registed in the environment path. use nlof to get back rm-ed files seems unpromising…","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"SuperComputer Basic Attempt && Linux Terminal Tests","slug":"spc","date":"2018-05-06T14:08:20.000Z","updated":"2018-11-20T01:29:31.151Z","comments":true,"path":"2018/05/06/spc/","link":"","permalink":"http://yoursite.com/2018/05/06/spc/","excerpt":"Problems Appeared On The Cluster These Days 近几日在南昌进行ASC2018比赛 学校内的集群暂时交由TTfish维护 遇到了不少问题 先把锅放在这里 以后希望能补充解决 关于Linux Terminal操作的一些尝试","text":"Problems Appeared On The Cluster These Days 近几日在南昌进行ASC2018比赛 学校内的集群暂时交由TTfish维护 遇到了不少问题 先把锅放在这里 以后希望能补充解决 关于Linux Terminal操作的一些尝试 ASC2018“著名开机员” TTfish(丢人) 遇到的问题: 浪潮倚天超级计算机的开机系统问题 NFS 长时间挂起导致睡眠 (事实证明随时可能挂) 系统卡死情况 NFS(Network File System) 良心的开源分布式文件系统协议 支持不同系统的文件共享 当然维护是一件非常令人难受的事情(还好现在不是我) NFS数据传输为明文性能 速度有限 ps.关于 Lasture &amp;&amp; GPFS的学习 (备忘)Problem Discuss 查询后 得知设置auto mount似乎可以解决问题 但是 这也是以后再尝试的事情了 另外 在浪潮倚天super00的启动中 需要在boot manager中选择正确的启动盘 不然会报错而不断重启 吐槽倚天超级计算机 戴上3M-105 还是吵到头疼 风扇很给力 但是整个机器拆装不易 又重又麻烦 网卡在风口 早上松动 中午完全掉下来 太不稳了 Linux Terminal Tests农生环的集群今日遭到黑客袭击 种了个马 帮忙挖矿 还顺带删除History 只能查到肉鸡的ip 私底下思考 获得root权限可以为所欲为 而删除历史记录 可能有更佳的操作方式 备注： 查看Linux使用记录 Log 1$ cd /var/log 查看ssh登陆记录 需要sudo less secure 而其他记录 都可以较为方便找到 而对于”隐身”操作Linux系统 可以 输入空格 再操作命令当然前提是 环境变量是正确的 export HISTCONTROL = ignorespace 一般应该是OK的 $ [space]****** 关闭当前会话历史记录 export HISTSIZE=0 工作结束后清除整个历史 history -cw 在不同的shell中 history是不同的储存 例如fish中执行type history可以发现是一个fish函数 而在bash中 就显示是buildin命令 man一下也是不一样的 只针对你的工作关闭历史记录 [space]set +o history 同理 重新设定就是 [space]set -o history 每一个history前都有标号 只要执行history -d $argv 就可以删除指定的命令","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"SCT","slug":"SCT","permalink":"http://yoursite.com/tags/SCT/"}]},{"title":"NodeSpider2","slug":"NodeSpider2","date":"2018-04-11T14:27:54.000Z","updated":"2018-11-20T01:30:52.917Z","comments":true,"path":"2018/04/11/NodeSpider2/","link":"","permalink":"http://yoursite.com/2018/04/11/NodeSpider2/","excerpt":"Node Spider Finish ！！！Source Code: https://github.com/fish98/NodeSpider_classrooms 对于这次工程的反思 最大问题的就是对于纯函数的使用缺失 在工程实现的一开始 使用了太多的全局变量 导致在最后的调试和函数合并的时候出现了一些不优雅的地方 这以后一定要改 函数尽量写成纯函数 或者科里化 本次主要延续上一次的话题 稍微深入的扯几句","text":"Node Spider Finish ！！！Source Code: https://github.com/fish98/NodeSpider_classrooms 对于这次工程的反思 最大问题的就是对于纯函数的使用缺失 在工程实现的一开始 使用了太多的全局变量 导致在最后的调试和函数合并的时候出现了一些不优雅的地方 这以后一定要改 函数尽量写成纯函数 或者科里化 本次主要延续上一次的话题 稍微深入的扯几句 上次讲到最简单的爬虫 因为爬虫就是对于网站的请求 处理返回response和解析数据 那么 第一步的请求还是很重要的 像Fetch这样的钦定API就非常推荐使用 具体使用参见官方文档 不加赘述 而对于Request 与Fetch之间的互相调用 两者都是web内置的模块 在node.js中使用还是需要import Promise这个是个重点 非常的重要 对于Promise对象的调用 可以调用Promise.all()来维护一个队列 拓展: 对于用户验证FormData的教务网体验拓展: 对于用户登陆的Cookie的Piviv的尝试小结对于工程上的爬虫 实在是应该做成分布式的 或者多线程 添加算法来提高速度 以上对于Node简单的尝试只是小打小闹 之后的博客 会尝试分布式爬虫 或者更大规模的试验 还有就是对于反爬虫的应对(ip封禁等等) 以上 玩的开心 说好的更新呢 ？这么几个字糊弄谁啊 ？!","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"}]},{"title":"Basic Node.js (Node Spider1)","slug":"NodeSpider","date":"2018-04-06T07:24:18.000Z","updated":"2018-11-20T01:30:34.924Z","comments":true,"path":"2018/04/06/NodeSpider/","link":"","permalink":"http://yoursite.com/2018/04/06/NodeSpider/","excerpt":"Node的基础与Node.jsの爬虫(上) 说到爬虫，一般会先想到Scarpy或者BeautifulSoup这样的python库 但是 当工程量比较小的时候 不需要像Scarpy这样的企业级分布式爬虫的时候 虽然TTfish非常的咸鱼 身为前端工程师 还是用Nodejs比较舒服(才没有表扬Node呢 口亨) 这篇blog主要总结一下之前的经验 尤其是对于学校教务网的探索心得(逃) 本文包括以下内容： Nodejs的使用 NPM的简易操作 Node爬虫 Fetch 和 Promise请求队列 万恶的教务网! TTfish自己都没想到会有这么多要写 一篇根本写不完 要不还是分开写吧….","text":"Node的基础与Node.jsの爬虫(上) 说到爬虫，一般会先想到Scarpy或者BeautifulSoup这样的python库 但是 当工程量比较小的时候 不需要像Scarpy这样的企业级分布式爬虫的时候 虽然TTfish非常的咸鱼 身为前端工程师 还是用Nodejs比较舒服(才没有表扬Node呢 口亨) 这篇blog主要总结一下之前的经验 尤其是对于学校教务网的探索心得(逃) 本文包括以下内容： Nodejs的使用 NPM的简易操作 Node爬虫 Fetch 和 Promise请求队列 万恶的教务网! TTfish自己都没想到会有这么多要写 一篇根本写不完 要不还是分开写吧…. Node.jsNode.js是一个基于 Chrome V8 引擎的 JavaScript 运行环境 Javasrcipt是一门动态类型，面向对象的解释型语言 和Java有相似之处 但是还是有很多的区别(明明叫Livescript 为了蹭Java热度才改的名) 人们发现将它即时编译有非常大的应用前景 于是就有了Node.js这样的前后端兼吃的环境 Node.js不支持多线程(不像Python那样的假多线程) 但是它是非阻塞的 支持并发(不像世界上最好的语言) 它是事件驱动的 带有优秀的npm 包管理器 要用Node.js写爬虫 首先得有node环境 Download Node.js 根据不同的操作系统下载并安装Node.js 安装好以后 无论在Terminal / Konsole 还是在 cmd \\ powershell(可能需要允许环境变量) 中 都可以运行Node.js了 123$ node -v // 查看版本$ node //运行node&gt; console.log(\"hello ttfish!\") //相当于在Chrome里的Console状态 简单的完成了hello ttfish的打印 如果需要用node执行以.js结尾的文件 只需要1$ node ttfish.js 这样简单的node环境就搭建完成了 一般会用server来实现nodejs的hello world 这里跳过 NPM的简易使用NPM(Node Package Manager)是Node.js的包管理库 方便模块管理 就像PEAR-&gt;PHP一样的概念 下载Node的时候 其实已经把npm装好了 可以输入1$ npm -v // 查看版本 对于npm最多的操作 就是npm install安装包 并在js文件中引用 但是 首先应该先初始化npm并生成package.json 这个是个坑 npm会根据package.json配置安装项 优秀的开源工程一般都只需要在git clone以后 一键npm install就安装完成所有的所需项 (就速度而言 推荐设置淘宝源) 1$npm init // 初始化 生成package.json // 请认真填写！！ 不然会凉 正常的话 会发现多了package.json文件 默认情况下 npm install的文件会保存在node_modules文件夹中 Node爬虫需要引入的包有许多 先写一个最简单的 ： 1$ vim ttfish.js 12$ npm install cheerio // 一个自认为长的像jQuery就很厉害 其实比jQuery还猥琐的库 解析html作用$ npm install fetch // 处理http请求 (关于 -save和–save-dev的区别 请注意) 使用Fetch 简要的爬取zhihu首页html 123456789101112131415161718192021const cheerio = require('cheerio')const fetch = require('node-fetch')const url = 'https://www.zhihu.com'// 箭头函数的使用 还有好多能加的参数 具体参考官方文档 fetch(url， &#123; method: POST, header: &#123; // some Headers &#125; body: // 假装有body &#125;) .then(res =&gt; res.text()) .then(body =&gt; &#123; let $ = cheerio.load(body) // 这里开始迷之cheerio 蜜汁jQuery既视感 $('***').map((i, item) =&gt; &#123; // 这里必须吐槽 这个map居然是需要将index作为第一个参数传入的！震惊.jpg // 假装要提取DOM元素进行操作 &#125; &#125;)// 以上只是框架 具体代码可以在我的Github上寻找 1$ node ttfish.js //运行即可 Github 源码 笔记向对象添加键值对的方法： A[b] = C —踩坑已久删除对象键值对： delete D.emap forEach对于数组的操作 不作用于对象对于FormData的append 不适用于一般对象 假的小结先讲到这里吧 写不动 写不动 至少最简单的内模块Fetch可以使用了 当然 SuperAgent库也是没有问题的 爬虫的本质就是向服务端发送请求并对Response进行解析 Node.js写爬虫其实不是很稳 虽然写的爽 但是用起来不是很优雅 之前跑了3000张图片流爬虫 如果全部异步node就会炸 维持10个一组的队列勉勉强强跑了六组跑完了 感觉这样在python的情况下可能会更舒服 等下次再写Promise队列和教务网的爬虫 Promise真是个好东西 hhhh","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"}]},{"title":"Hexo配置相关问题","slug":"hexo-img","date":"2018-03-14T14:38:59.000Z","updated":"2018-11-20T01:35:50.314Z","comments":true,"path":"2018/03/14/hexo-img/","link":"","permalink":"http://yoursite.com/2018/03/14/hexo-img/","excerpt":"Hexo是不会用的，这辈子都不会用的 ——————TTfish（逃） 前前后后熬了很久 终于修复了图片问题（忽略添加两次图片的不优雅手段） 顺带记录一下对于本地hexo命令的不优雅和同步情况 更新： 对于gitment的一点经验教训 Bug: Gitment 返回Alert“process Object” 目前怀疑是因为Github的邮箱变更导致","text":"Hexo是不会用的，这辈子都不会用的 ——————TTfish（逃） 前前后后熬了很久 终于修复了图片问题（忽略添加两次图片的不优雅手段） 顺带记录一下对于本地hexo命令的不优雅和同步情况 更新： 对于gitment的一点经验教训 Bug: Gitment 返回Alert“process Object” 目前怀疑是因为Github的邮箱变更导致 图片插入和banner问题一般博客插入banner和thumbnail会和文章内插入的图片冲突 今天F12以后发现img标签的请求地址 ：在主页显示的banner和thumbnail请求的地址是根文件夹内的img（例/ttfish.top/img.img） 而post内的图片和banner、thumbnail请求的是文档的目录下的img （例/03/09/img.img）因此冲突了 一般情况 要么显示其中一者 要么都凉（严重挫伤了写blog的积极性） 对于Google出来许许多多的博客（甚至官方文档）都没能很好的解决问题 （可能是对icarus的主题不适用？）网上列出对于hexo中引用img的方法 大体就以下方法： 使用 ![](/****/****.jpg)方法 原生插入 （这样的话 首页的banner和thumbnail就会凉） 使用 “优雅”的插入图片 并且设置post_asset_folder: true使得每次执行hexo n &quot;****&quot;的时候可以自行生成和文件名相同的文件夹 可以存储图片 （当然 首页的banner和thumbnail仍然会凉） TTfish忍受不了！ 使用 &lt;img /&gt;标签插入 TTfish最后就用了这个（毕竟能自己控制） 其他好像就没有了，以上根本解决不了问题： 如果更改post的front config 那么就面临TTfish和熊掌的选择（当然选TTfish） 那么 TTfish能想到的方法 只有是： 更改post的.ejs文件 优雅的更改主题的banner请求为post文件内的img（可惜TTfish太懒） 暴力添加另一份banner.jpg于根目录 让两边都能方便的请求到 于是TTfish就暴力添加了 然后TTfish的resource文件夹内就掺杂了banner和thumbnail 虽然非常不友好 但是能用了！！！ （于是乎TTfish写了新的blog 本来打算弃坑了） 这样可以勉强解决问题 当然以后TTfish会去更改ejs文件 到时候再更新blog吧 Hexo deploy 玄学问题 不知道是TTfish技艺不精还是真·玄学 对于在config.yml文件中配置了deploy以后 每次的hexo d都充满了机遇与挑战 TTfish惊奇的发现 git commit之前的更改 哪怕进行了hexo clean + hexo g + hexo d的操作 都没有什么用 然后同时：TTfish尝试删除了隐藏文件夹 .deploy 希望使用控制变量法进行实验 可惜时间不够 先立个flag 到时候再总结真正的deploy操作流程 目前先所有的操作都进行（练手速 xxxxx） 至少 现在看来commit和删除隐藏文件夹是多余的 Update: TTfish得出了结论 只进行hexo的”g+d”指令是可行的 以上已成为TTfish的黑历史 不愿意删除 希望以后一看到就能羞愧到立刻工作学习而不是继续浪对于hexo来说 deploy其实是实现了对于push和部署的综合 对于git没有关系 而之前之所以会认为是’玄学’ 其实是浏览器的缓存于是为了偷懒而打开了edge Update 2018/4/11Gitment的填坑经历：一个新的blog搭建好以后 当然需要comment系统 当然有很多选择 看来看去gitment最靠谱一点 但是配置的时候 还是出现了一些问题Gitment是github平台提供的评论系统 以OAuth App形式 把comment作为issues保存在一个repo里面具体配置的方式 Google一下 讲的很详细但是 对于repo和具体的配置 有坑1· 在OAuth App设置里的callback URL 非常的重要这里的意思是 对于验证完用户信息后重定向的url因此 这里应该填写博客的域名 但是由于TTfish的博客是http的域名 因此 会一直显示Not Initialized 并且在Login的时候 会重定向到主页面 无限循环这里需要将callback URL改成http格式的还有就是 在主题的配置文件中 repo: 应该填写仓库名而不是完全的仓库GitHub地址 不然会找不到而报错 ： Not found 这样搭建完毕以后 gitment应该就可以用了 一开始的时候需要initialize 没有什么问题 欢迎在评论区教TTfish做鱼 或者diss 咸的TTfish 温馨提示： 手动备份一份source文件夹让TTfish逃过了一次git崩溃导致的文件丢失事故 所以手动备份hexo还是很有用的 不然可能就没有兴致写下去了 ：）","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}]},{"title":"Git基础","slug":"git","date":"2018-03-07T14:39:00.000Z","updated":"2018-11-19T08:27:32.843Z","comments":true,"path":"2018/03/07/git/","link":"","permalink":"http://yoursite.com/2018/03/07/git/","excerpt":"A Brief Summary For Git Use TTfish的第一篇比较正经的博客呢。简要讲一下非常重要的Git。一开始TTfish接触git的时候，TTfish是拒绝的，虽然现在已经离不开它了本文涉及Git的操作非常的浅，具体官方文档请移步 Git-scm 。TTfish写这篇文章只是想记录一下TTfish踩过的坑，并且起到学习巩固的作用 关于git的源码\\协议\\客户端hook 这里不进行讨论 本文包括以下内容： 什么是Git git的作用 本地使用git 设置远程git仓库 TTfish踩过的坑","text":"A Brief Summary For Git Use TTfish的第一篇比较正经的博客呢。简要讲一下非常重要的Git。一开始TTfish接触git的时候，TTfish是拒绝的，虽然现在已经离不开它了本文涉及Git的操作非常的浅，具体官方文档请移步 Git-scm 。TTfish写这篇文章只是想记录一下TTfish踩过的坑，并且起到学习巩固的作用 关于git的源码\\协议\\客户端hook 这里不进行讨论 本文包括以下内容： 什么是Git git的作用 本地使用git 设置远程git仓库 TTfish踩过的坑 What is Git2005年Linus以GPL发布了一款分布式版本控制软件，取名为Git，该词源自英国俚语，意思是……目的是为了更好的管理Linux内核版本开发。emmmm，其实应该追溯到2002年以前，那时候以前全球对于Linux的版本（diff）开发都是由Linus本人进行手工修改的，随着工程量的增大，Linux逐渐Handle不了这么多版本修改了，于是Linus转向了（万恶的商业公司）BitMover公司慷慨的授权Linux社区免费使用Bitkeeper这个版本控制系统。然而…然而…在Linux社区里开发Samba的Andrew写了个程序，尝试连接BitKeeper的存储库，还被发现了。BitKeeper拥有者认为安德鲁·垂鸠破坏了使用协议，决定收回Linux社区无偿使用BitKeeper的授权。于是Linus做了一件大事，闭关两周（不到），用C语言写了一个Git出来。2008年Github上线成为全球最大同性交友网站（大雾） 以下是git十周年访谈时Linux接受采访的内容： Torvalds：我从来没有想过去做版本控制软件，因为在我看来那是计算机世界里最无聊的事了（如果数据库除外的话 ;^），我天生就不喜欢 SCM。但是 BitKeeper 的诞生改变了我对版本控制的认识。BK 在大多数方面是正确的，在本地保存一个仓库的副本，分布式合并确实是一大创新。这个分布式版本控制的创新完美地解决了 SCM 的通病：“谁可以修改代码”的难题。BK 告诉我们，你只要给每个人一个仓库，问题就解决了。但是 BK 也存在一些问题，技术上的问题（例如重命名很麻烦）还不算什么，它最大的坏处是不开源，很多人因为这个不使用它。所以即使我们有几个核心维护者使用 BK——开源项目可以免费使用——但它也没有普及。虽然它帮助过我们开发内核，但依然有不少痛点没有解决。 当 Tridge 违反 BK 的使用协议反编译 BK 的时候，我们到达了紧急关头。我花了几个周（还是几个月来着？）试图调解 Tridge 和 Larry McVoy（注：他是 Bitkeeper 的 老大），最后也没有成功。我意识到我不能继续使用 BK 了，但我真的不想回到没有 BK 的黑暗时代。遗憾的是，我们想用其他 SCM 来代替它，却没有找到能在远程方面工作得好的。现有的软件不能满足我对远程方面的需求，我又担心整个流程和代码的完整性，所以最后我决定自己写一个。 Git的作用Git是优秀的版本控制工具，采用了分布式版本库的作法，不需要服务器端软件，就可以运作版本控制，且速度极快。对于大型项目的分工开发有非常大的作用。Git提供的history 版本回退功能；merge request功能等等都给多线开发提供很大的便利 How to use Git 看文档只能帮助一小部分的学习，实地操作才能初步掌握了git的基本操作明明是TTfish太菜最简易的操作如下: @Download GitDownload Git on official website for free. 自行安装即可 Msysgit ###@创建本地git仓库 首先在工程文件夹中运行终端，Windows可以选择右键git bash here || 摁住shift+右键 运行新的powershell窗口 || 运行cmd 或者wsl 都可以 在终端中，如果没有建立本地git仓库，运行git指令会报错：1fatal: Not a git repository (or any of the parent directories): .git 于是先创建git本地库： 1$ git init 创建完git仓库以后 显示：1Initialized empty Git repository in C:/Users/***/****/****/.git/ 会有一个隐藏文件夹 .git被创立，这就是本地git仓库 ###@File Version Management git仓库建立以后，就可以进行版本管理和分支操作了，首先默认进入的是master分支，如果是git bash打开的话那么在文件夹的右边会有显示当前分支，看一下git目前的状态： 1$ git status 查看当前git仓库的状态，举一个简单的例子 ，当前文件夹C/中只有test.c一个文件，初始了git仓库以后应该将需要管理版本的文件add进仓库，于是在终端输入： 1$ git add test.c 这样就成功将test.c添加到本地git仓库，现在可以轻松追踪管理这个文件的历史版本 这时再一次输入git status，就可以愉快的发现，git显示：Changed files 和 no commits yet 意思是”对文件有了修改，但是并没有确认修改” 于是我们应该 “commit change”，告诉git：我已经确定对该文件进行修改1$ git commit 这时候出现了一个vim窗口，具体vim的操作在这里不是很想赘述 VimPress ‘i’ 进入insert模式，然后在第一行输入本次commit的记录1add test.c 然后 press ESC 输入 :wq press Enter（表示vim使用完毕并且write+quit） 正常情况就成功添加了一个commit（一个History可回退的节点）. 此时再次输入git status检查状态 可以发现在终端显示：12On branch masternothing to commit，working tree clean 对于一个文件的操作基本就是这样了 *补 充 一般会使用git add .来表示将文件夹中所有文件（ 写入gitignore的文件除外）加入git仓库 使用git commit -a来作为git commit --all的操作(git有许许多多的命令和参数 参考官方文档可以获得最佳体验) ###@Branch Management 一般在上线的工程中，master分支并不是被直接被修改的（防止push a lot of bugs的事情发生），于是创建分支（branch）十分的必要，在修改代码的时候在分支中修改，需要上线的修改可以使用merge这强大功能实现 1$ git checkout -b TTfish 终端会显示：1Switched to a new branch 'TTfish' 这个命令是在master分支创建一个TTfish分支，checkout有许多黑魔法，比如可以远程链接track设定的remote git仓库（详见下文），还可以在history中找回文件（即使被rm - rf了的）如果想回到master分支 就输入：1$ git checkout master 这样在branch里操作更改代码后，可以merge到主干分支中，也可以在一群commits里git rebase -i一下，而git fetch则是保持和主干的一致 这里不多讲了 当然，要是想删除过去的黑历史，可以使用reset HEAD~X(不推荐使用…直接去github的history去找commit不就好了) 关于本地的git就讲这么多，具体还是多看官方文档 Git TTfish都写完了 忽然断了网 远程仓库以后的都要重写一遍 真的是 无语了… Remote git这部分是TTfish踩坑最多的地方，稍有不慎就掉进去了，虽然现在回顾一下也不是很烦，但是踩坑确实花了我一周左右（Linus都快写完一个git了）本地文件为了能和别人分享，于是需要将git push到远程仓库，这样就实现了共享 并为分布工作提供便利 @Simple git config1$ git remote -v 查看远程git状态，当然什么都不设置的话是什么都不会显示的 于是先配置一下用户名和邮箱 以便git管理commit的时候可以知道是谁进行的操作(这个其实应该是刚下载的时候就要配置的吧)12$ git config --global user.name \"****\"$ git config --global user.email ****@****.com @ Set remote git首先配置remote 接口 TTfish花了一整天才理解命令的意义：举GitHub的例子进行设置最简易的remote git仓库打开GitHub 新建respository 点击Clone or Downloads就可以查看SSH或HTTPS的两个地址 先讲简单的HTTPS：打开本地文件夹 运行终端1$ git remote add origin https://github.com/***/***.git 这里的意思是 设置远程github的git respository的本地接口 origin为远程的分支（TTfish理解为接口） 对于远程的操作 需要通过origin进行操作 origin可以替换为任意字符串 1$ git push -u origin master 这里的意思是 将本地的分支push到远程的master分支（-u的意思是如果没有则创建分支）当然 master和origin都可以自己设置 origin必须和之前设置的字符串相同这样就成功push上去了 -f这个暴力的指令最好少用 虽然TTfish经常用… 这里有一个坑 就是GitHub的新建respository可以选择是否新建README.md 如果新建的话 就需要先git pull origin（****） master（****）把README.md合并到本地 不然的话 会因为两个仓库完全不同而拒绝push请求 至于解决方法 有很多： 1、友好型 ：1$ git pull origin master 将远程的文件先并入本地git仓库 然后commit以后进行正确操作 2、暴力型 ：1$ git push -f origin master 这个TTfish经常使用（逃）但是缺点是 远程的文件会被覆盖（一般是一个README.md,TTfish不是很在意）其他例如clone下来并commit·push的操作就不多说了 至于set upstream的操作 就是为了方便之后的操作而设定的一个默认配置 @ Remote operate对于远程仓库的操作还有许多：1234git remote rename &lt;name&gt;git fetch &lt;filename&gt;git remote show origingit remote rm origin(****) 以上分别是：重命名 得到文件 显示远程仓库详细知识 删除远程仓库链接（*常用） 好累 有什么要补的下次再说吧最重要的命令还有一个：1$ git clone ********.git 下载别人或者自己的git文件（完整的） 别忘记clone下来的js文件需要npm install 最近一直健忘… 好像没什么了 看完了这篇文章 最简易的远程仓库建立应该没有问题了 网上的博客看了很多 但是在我入门的时候确实没有很能见清楚（搞得好像你讲的很清楚一样….）希望能帮到自己和别人 咔咔 最后的官方链接： https://git-scm.com 对于.gitignore的补充如果在面临一个大项目 使用了webpack或者安装了新的依赖以后 git的commit提示栏会瞬间飙上去 或者 。我们并不希望将一些测试时的依赖包打包在我们写好的文件中 一般会创建一个.gitignore文件 在文件中填入不希望放入git监视的文件 在commit和push的时候 会自动忽略 例123$ vim .gitignore&gt; node_modules 这样就是将当前目录的node_modules给ignore了 .gitignore支持正则搜索 另外 对于已经存在于git仓库中的文件 如果再在.gitignore中添加 并不能删除原版本 需要输入1$ git rm --cached *** // 删除git仓库中的*** ps.下次写blog 再也不要忘记即时保存！！！！","categories":[],"tags":[{"name":"Tech","slug":"Tech","permalink":"http://yoursite.com/tags/Tech/"},{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"}]},{"title":"Test Post","slug":"test-post","date":"2018-02-28T02:23:31.000Z","updated":"2018-11-19T08:27:32.846Z","comments":true,"path":"2018/02/28/test-post/","link":"","permalink":"http://yoursite.com/2018/02/28/test-post/","excerpt":"First of allTextDo you know? KB -&gt; MB -&gt; GB -&gt; TB -&gt; PB -&gt; EB -&gt; ZB -&gt; YB","text":"First of allTextDo you know? KB -&gt; MB -&gt; GB -&gt; TB -&gt; PB -&gt; EB -&gt; ZB -&gt; YB TTfish基本上完成了对于Blog的搭建，剩下就是每天向里面填东西了，还有好多知识需要学习呢，暂时不删除Test Post,等到使用Markdown熟练以后再说 Terminal Test1$ rm -rf / Link TestContact us qcsTech Line Test TypoGraphic Test(C) (R) (P) += +- Font Test bold === bold Delete == ~~ Delete ~~ Quote Test TTfish once start the PC However the PC broke down List Test TTfish want to have a cat want to learn js reactjs nodejs vuejs Code TestNow goes some code 1this.setState(ttfish : null) Table Test Option Description ttfish true ttcat false ttdog null Right table Option Description ttfish true ttcat false ttdog null Image Test![Alt text][id] Emoji Test :-) :-( 8-) ;) Special Text Test 19^th^ H~2~O","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"},{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]}]}